Search.setIndex({"docnames": ["_dynamic/libics.core", "_dynamic/libics.core.cfg", "_dynamic/libics.core.data", "_dynamic/libics.core.io", "_dynamic/libics.core.util", "_dynamic/libics.env", "_dynamic/libics.tools", "_dynamic/libics.tools.control", "_dynamic/libics.tools.database", "_dynamic/libics.tools.math", "_dynamic/libics.tools.plot", "_dynamic/libics.tools.trafo", "index"], "filenames": ["_dynamic\\libics.core.rst", "_dynamic\\libics.core.cfg.rst", "_dynamic\\libics.core.data.rst", "_dynamic\\libics.core.io.rst", "_dynamic\\libics.core.util.rst", "_dynamic\\libics.env.rst", "_dynamic\\libics.tools.rst", "_dynamic\\libics.tools.control.rst", "_dynamic\\libics.tools.database.rst", "_dynamic\\libics.tools.math.rst", "_dynamic\\libics.tools.plot.rst", "_dynamic\\libics.tools.trafo.rst", "index.rst"], "titles": ["libics.core", "libics.core.cfg", "libics.core.data", "libics.core.io", "libics.core.util", "libics.env", "libics.tools", "libics.tools.control", "libics.tools.database", "libics.tools.math", "libics.tools.plot", "libics.tools.trafo", "Documentation of libics"], "terms": {"cfg": [0, 3, 12], "data": [0, 3, 4, 7, 8, 9, 10, 11, 12], "io": [0, 2, 12], "util": [0, 11, 12], "class": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "cfgbase": 1, "kwarg": [1, 2, 3, 4, 7, 8, 9, 10, 11], "base": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "filebas": [1, 2, 3, 9, 11], "configur": [1, 8], "file": [1, 2, 3, 4, 8, 10], "attribut": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "must": [1, 2, 4, 8, 9, 10, 11], "built": [1, 2, 3, 4], "primit": [1, 3], "type": [1, 3, 4, 8, 9, 11], "subclass": [1, 2, 3, 8, 9], "method": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "logger": [1, 2, 5, 7, 8, 9, 10, 11], "warn": [1, 2, 5, 7, 8, 9, 10, 11], "get_item": 1, "use_al": 1, "fals": [1, 2, 3, 4, 5, 8, 9, 10, 11], "get": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "return": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "sub_cfg": 1, "dict": [1, 2, 3, 4, 8, 9, 10], "str": [1, 2, 3, 4, 5, 8, 9, 10, 11], "kei": [1, 2, 4, 5, 8, 9, 10], "which": [1, 2, 3, 4, 5, 8, 9, 10, 11], "ar": [1, 2, 3, 4, 5, 8, 9, 10, 11], "themselv": [1, 4], "item_cfg": 1, "item": [1, 2, 4, 8, 9, 10], "load_cfg": 1, "file_path": [1, 3, 4, 5], "fmt": [1, 3, 4, 5], "none": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "preserve_cas": 1, "true": [1, 2, 3, 4, 5, 8, 9, 10, 11], "load": [1, 2, 3, 11], "text": [1, 3, 4, 5, 9], "object": [1, 2, 3, 4, 7, 8, 9, 10, 11], "In": 1, "contrast": 1, "thi": [1, 2, 3, 4, 7, 8, 9, 11, 12], "assum": [1, 2, 3, 4, 9, 10, 11], "store": [1, 2, 7], "metadata": [1, 2, 3], "paramet": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "save": [1, 3, 7], "path": [1, 3, 5, 8], "format": [1, 2, 3, 4, 5, 10, 11], "json": [1, 3, 8], "ini": 1, "yml": 1, "keyword": [1, 2, 3, 4, 8, 9, 10, 11], "argument": [1, 2, 3, 4, 8, 9, 10, 11], "pass": [1, 2, 3, 4, 8, 9, 10, 11], "parser": 1, "notabl": [1, 11], "includ": [1, 2, 4, 9], "interpol": [1, 2, 9, 10, 11], "raw": [1, 2, 9], "pars": [1, 10], "strict": 1, "allow": [1, 2, 4, 8, 9], "non": [1, 2, 4, 8, 9, 11], "safe": 1, "lowercas": [1, 4], "option": [1, 2, 9, 10, 11], "name": [1, 2, 3, 4, 5, 8, 9, 10, 11], "map_recurs": 1, "item_func": 1, "cfg_func": 1, "appli": [1, 2, 4, 7, 8, 9, 10], "function": [1, 2, 3, 4, 8, 9, 10, 11], "recurs": [1, 2, 4, 9], "all": [1, 2, 4, 7, 8, 9, 10, 11], "callabl": [1, 2, 4, 8, 9, 10, 11], "i": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12], "call": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "set": [1, 2, 3, 4, 7, 8, 9, 10, 11], "its": [1, 2, 7, 8, 9, 10], "valu": [1, 2, 3, 4, 7, 8, 9, 10, 11], "signatur": [1, 2, 4, 8, 9, 10, 11], "func": [1, 2, 8, 9], "old_val": 1, "new_val": [1, 2], "If": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "continu": [1, 9, 10, 11], "without": [1, 2, 4, 9], "further": [1, 9], "handl": [1, 3, 5, 9], "bool": [1, 2, 3, 4, 7, 8, 9, 10, 11], "flag": [1, 2, 3, 4, 9, 10], "whether": [1, 2, 3, 4, 8, 9, 10, 11], "map": [1, 2, 3, 4, 7, 8, 10, 11], "onli": [1, 2, 4, 8, 9, 10, 11], "ones": [1, 2, 9], "state": [1, 7, 9], "ser_kei": [1, 2, 3, 9, 11], "save_cfg": 1, "serialize_al": 1, "doe": [1, 2, 3, 4, 8, 9, 10], "ani": [1, 2, 4, 8, 9, 10], "serial": [1, 2, 3], "indent": [1, 3], "namedtupl": 1, "convert": [1, 2, 3, 4, 10, 11], "nest": [1, 4, 10], "tupl": [1, 2, 3, 4, 9, 10, 11], "whose": [1, 2, 4, 9, 11], "pair": [1, 2], "access": [1, 2, 4, 8, 9], "notat": [1, 11], "e": [1, 2, 3, 4, 7, 8, 9, 10, 11], "g": [1, 2, 3, 4, 8, 9, 10, 11], "attr_lvl0": 1, "attr_lvl1": 1, "numer": [1, 2, 4, 9], "string": [1, 2, 3, 4, 5, 8, 9, 10], "collect": [1, 10], "like": [1, 2, 3, 7, 8, 9, 10], "dictionari": [1, 2, 3, 4, 5, 8, 9, 10], "named_tupl": 1, "protecteddict": 1, "userdict": 1, "wrapper": [1, 2, 3, 8, 9, 10, 11], "make": [1, 9], "keep": [1, 4, 11], "copi": [1, 2, 4, 9, 11], "fromkei": 1, "cv_mapping_to_namedtupl": 1, "arraydata": [2, 3, 9, 10, 11], "arg": [2, 4, 5, 7, 8, 9, 10], "attrhashbas": [2, 11], "multidimension": [2, 4, 9], "scale": [2, 7, 9, 10, 11], "inform": [2, 5, 9], "linear": [2, 7, 9], "physic": [2, 9], "quantiti": [2, 3, 9, 10], "usag": [2, 3, 8, 9, 11], "describ": [2, 3, 8, 9], "below": [2, 8], "creation": 2, "instanti": 2, "an": [2, 3, 4, 5, 7, 8, 9, 10, 11], "defin": [2, 3, 4, 9, 10, 11], "dimens": [2, 3, 4, 7, 9, 10, 11], "us": [2, 3, 4, 5, 7, 8, 9, 10, 11], "add_dim": 2, "specifi": [2, 3, 4, 5, 8, 9, 10, 11], "behavior": 2, "default": [2, 3, 4, 5, 8, 9, 10], "ad": [2, 3, 9], "remov": [2, 7, 8, 9, 10, 11], "thei": [2, 9], "commensur": 2, "altern": [2, 3, 9], "can": [2, 3, 4, 7, 8, 9, 10], "also": [2, 7, 9], "variabl": [2, 3, 4, 7, 8, 9, 10, 11], "indic": [2, 4, 9, 10, 11], "accordingli": 2, "instead": [2, 10], "var_shap": 2, "modif": 2, "after": [2, 4, 7, 8, 10], "assign": [2, 4, 10, 11], "done": 2, "set_dim": 2, "The": [2, 3, 4, 5, 8, 9, 10, 11], "mode": [2, 8, 9], "behaviour": [2, 4], "modifi": [2, 5], "mod_dim": 2, "chang": [2, 3, 4, 5, 7, 10, 11], "comput": [2, 5, 9, 11], "arithmet": 2, "oper": [2, 5, 9], "comp_dim": 2, "support": [2, 3, 4, 9, 10], "common": [2, 4, 10], "unari": 2, "binari": [2, 9], "well": 2, "vector": [2, 4, 9, 11], "numpi": [2, 3, 4, 9, 11], "ufunc": 2, "properti": [2, 4, 7, 8, 9, 10, 11], "extract": [2, 4, 8, 9], "depend": [2, 3, 4, 9, 10, 11], "upon": [2, 4, 9], "some": [2, 5, 9], "given": [2, 3, 4, 7, 8, 9, 10, 11], "result": [2, 4, 9, 10], "follow": [2, 7, 8, 9, 10, 11], "convent": [2, 8, 11], "declar": 2, "instanc": [2, 4, 5, 8, 9], "within": [2, 4, 8, 9, 10, 11], "constructor": [2, 9], "rememb": 2, "add": [2, 3, 5, 7, 8, 10], "attr_names_copy_var": 2, "bin": [2, 3, 4], "list": [2, 3, 4, 5, 8, 9, 10, 11], "center": [2, 4, 9, 10, 11], "dtype": [2, 4, 9, 11], "high": [2, 9, 10], "maxima": 2, "low": [2, 10], "minima": 2, "ndim": [2, 4, 9, 11], "offset": [2, 7, 9, 11], "point": [2, 4, 7, 8, 9, 10], "shape": [2, 4, 9, 10, 11], "size": [2, 3, 4, 9, 10, 11], "step": [2, 4, 5, 7, 9, 11], "total_ndim": 2, "total": [2, 4, 9, 11], "var_ndim": 2, "placehold": 2, "from_arraydata": 2, "from_cmprarraydata": 2, "from_datasequ": 2, "from_arrai": 2, "max": [2, 3, 4, 9, 11], "mean": [2, 8, 9, 11], "min": [2, 4, 9, 11], "std": [2, 9], "sum": [2, 3, 9, 10, 11], "_center": 2, "_high": 2, "_low": 2, "_offset": 2, "_placeholder_shap": 2, "_point": 2, "_step": 2, "data_quant": 2, "var_mod": 2, "var_quant": 2, "attr_names_var": 2, "hash_kei": [2, 11], "linspac": [2, 10], "rang": [2, 4, 8, 9, 10, 11], "classmethod": [2, 3, 8, 9], "register_constructor": 2, "obj_cl": 2, "func_nam": 2, "regist": [2, 8], "append": [2, 4, 5, 7, 9, 10], "": [2, 4, 5, 8, 9, 10], "int": [2, 3, 4, 5, 7, 8, 9, 10, 11], "order": [2, 4, 8, 9, 10, 11], "should": [2, 3, 4, 5, 8, 9, 10, 11], "These": [2, 3, 9], "iter": [2, 3, 4, 7, 9, 10, 11], "integ": [2, 3, 4], "equival": 2, "length": [2, 4, 7, 9, 11], "empti": [2, 4, 10], "interpret": [2, 4, 9, 10, 11], "singl": [2, 3, 4, 9, 10, 11], "wa": [2, 4, 9, 10, 11], "ignor": [2, 9], "rais": [2, 3, 4, 8, 9], "valueerror": [2, 3, 4, 9], "invalid": [2, 3, 4, 9], "astyp": 2, "implement": [2, 3, 4, 7, 9, 10], "cmp_quantiti": 2, "other": [2, 9, 11], "compar": 2, "two": [2, 4, 9, 10, 11], "ident": [2, 3, 4, 9, 11], "cmp_shape": 2, "cmp_var": 2, "dim": [2, 4, 7, 10, 11], "op": [2, 9], "rev": 2, "perform": [2, 3, 4, 9, 10, 11], "binary_ops_numpi": [2, 9], "unary_ops_numpi": 2, "have": [2, 3, 4, 8, 9, 10], "second": [2, 3, 4, 8, 9, 11], "operand": [2, 5, 9], "first": [2, 3, 4, 9, 11], "self": [2, 3, 9, 11], "keyerror": [2, 3, 4], "note": [2, 3, 4, 7, 8, 9, 11], "For": [2, 3, 4, 7, 9, 11], "affin": [2, 11], "transform": [2, 11], "deep": [2, 9], "copy_var": 2, "except": [2, 3, 4, 5, 8], "refer": [2, 9, 10], "cv_index_to_quant": 2, "ind": 2, "index": [2, 4, 5, 9, 10, 11, 12], "correspond": [2, 4, 9, 10, 11], "val": [2, 4, 5, 9, 10, 11], "associ": [2, 9], "cv_multi_index_to_quant": 2, "slice": [2, 4, 9, 10, 11], "float": [2, 3, 4, 7, 8, 9, 10, 11], "multipl": [2, 4, 8, 9, 10, 11], "element": [2, 4, 9], "cv_multi_quantity_to_index": 2, "cv_quantity_to_index": 2, "from_sequence_t": 2, "data_kei": 2, "var_kei": 2, "var_point": 2, "nearest": [2, 9], "from": [2, 3, 4, 7, 8, 9, 10, 11], "tabl": [2, 8], "0": [2, 3, 4, 7, 8, 9, 10, 11], "contain": [2, 3, 4, 8, 9, 10, 11], "repres": [2, 3, 4, 9, 10, 11], "unstructur": 2, "exclud": [2, 8], "those": 2, "ha": [2, 3, 4, 8, 9], "most": 2, "uniqu": [2, 4, 8], "id": [2, 4, 8], "avail": [2, 3, 9], "between": [2, 4, 7, 9, 10, 11], "cubic": 2, "up": [2, 8], "2d": [2, 3, 10], "abov": 2, "silent": [2, 3], "fill_valu": [2, 4], "fill": [2, 4], "outsid": [2, 9, 10], "convex": 2, "hull": 2, "need": [2, 8], "extrapol": [2, 9], "span": [2, 9, 10, 11], "determin": [2, 4, 5, 8, 9, 11], "each": [2, 4, 7, 8, 9, 10, 11], "procedur": 2, "hyper": 2, "rectangular": [2, 4], "domain": [2, 9, 11], "dens": 2, "therefor": 2, "reason": 2, "It": [2, 9], "might": [2, 9], "help": [2, 8], "befor": [2, 4, 5, 8, 9], "fixm": [2, 4], "number": [2, 4, 7, 9, 10], "hash": 2, "get_bin": 2, "len": [2, 4], "1": [2, 3, 4, 7, 8, 9, 10, 11], "adjac": 2, "edg": [2, 9, 10, 11], "where": [2, 3, 4, 7, 9, 10, 11], "one": [2, 5, 8, 9, 10], "side": [2, 9], "undefin": 2, "form": [2, 8], "symmetr": [2, 9], "around": [2, 9, 10, 11], "get_cent": 2, "check_mod": 2, "get_common_obj": 2, "in_plac": [2, 4], "creat": [2, 3, 4, 8, 9, 10], "ndarrai": [2, 3, 4, 7, 9, 10, 11], "same": [2, 4, 8, 9, 10, 11], "revers": [2, 4], "obj": [2, 3, 4, 5], "process": 2, "get_copy_obj": 2, "get_high": 2, "get_low": 2, "get_offset": 2, "get_point": 2, "get_step": 2, "check": [2, 4, 9, 10], "equidist": [2, 9], "get_var_meshgrid": 2, "ij": [2, 9, 11], "meshgrid": [2, 9, 11], "xy": 2, "see": [2, 3, 7, 9, 10, 11], "mg": 2, "np": [2, 3, 4, 7, 9, 10, 11], "get_var_meshgrid_bin": 2, "var": [2, 4, 9, 10], "act": 2, "request": [2, 3, 4, 9, 10, 11], "obtain": [2, 3, 8, 9, 11], "typic": [2, 9], "flatten": [2, 4, 9], "higher": [2, 9, 10], "dimension": [2, 4, 9, 10, 11], "discourag": 2, "becaus": 2, "ambigu": 2, "scalar": [2, 4, 9, 10], "neighbour": [2, 9], "func_val": 2, "scipi": [2, 9, 11], "interpn": 2, "http": [2, 3, 7, 9, 10, 11], "doc": 2, "org": [2, 7, 8, 9, 10], "gener": [2, 3, 4, 9, 10, 11], "axi": [2, 9, 10, 11], "descript": [2, 3], "possibl": [2, 4, 9], "happen": 2, "mainli": 2, "linearli": [2, 9, 10], "space": [2, 7, 9, 10, 11], "move_dim": 2, "source_dim": 2, "destination_dim": 2, "move": 2, "new": [2, 3, 4, 7, 8], "posit": [2, 4, 5, 8, 9, 10, 11], "place": [2, 4, 5, 9, 11], "pad": [2, 4], "resiz": [2, 4], "old": [2, 4], "factor": [2, 9, 11], "rmv_dim": 2, "num": [2, 9, 10], "last": [2, 8, 9, 11], "set_data_quant": 2, "assume_quant": 2, "A": [2, 4, 9, 10], "either": [2, 10], "three": 2, "1d": [2, 8, 9, 10], "directli": [2, 9, 10], "coordin": [2, 4, 9, 10, 11], "start": [2, 4, 8, 9, 11], "differ": [2, 4, 7, 9, 10, 11], "lower": [2, 10], "bound": [2, 9, 10], "upper": [2, 10], "set_var_quant": 2, "supersampl": [2, 11], "rep": 2, "repetit": [2, 4, 11], "per": [2, 4, 8, 9, 10, 11], "respect": [2, 3, 7, 9, 10, 11], "updat": [2, 7, 8], "cmprarraydata": 2, "enc_typ": 2, "png": [2, 3], "map_bitdepth": 2, "16": [2, 9, 11], "map_lut_v": 2, "check_cmpr": 2, "compress": [2, 3], "real": 2, "dec_lut": 2, "ad_dtyp": 2, "enc_bitdepth": 2, "map_amplitud": 2, "map_ndim": 2, "map_offset": 2, "from_array_data": 2, "uncompress": 2, "larger": [2, 9, 10], "more": [2, 3, 8, 9, 10, 11], "than": [2, 4, 9], "64": [2, 4, 9], "get_compressed_array_png": 2, "enc_lut": 2, "max_num_lut": 2, "1024": [2, 9], "check_unique_v": 2, "base64": [2, 3], "encod": [2, 3, 10], "2": [2, 3, 4, 7, 9, 10, 11], "bitdepth": 2, "grayscal": [2, 3, 10], "lut": 2, "palett": 2, "maximum": [2, 3, 5, 9, 10, 11], "color": [2, 5], "automat": [2, 9, 10], "tri": [2, 9, 10], "exactli": 2, "via": [2, 8], "ar_cmpr": 2, "meta": 2, "amplitud": [2, 9], "decod": [2, 3], "code": [2, 8, 10], "unique_vals_raw": 2, "unique_vals_cmpr": 2, "get_decompressed_array_png": 2, "represent": [2, 4, 9, 10], "decompress": [2, 3], "to_array_data": 2, "seriesdata": [2, 10], "set_quant": 2, "symbol": 2, "unit": [2, 4, 9, 10, 11], "take": [2, 4, 9, 10, 11], "preced": [2, 9, 10], "over": [2, 7, 9, 10], "construct": [2, 4, 10], "constructor_plugin_cmprarraydata_to_arraydata": 2, "get_coordinate_meshgrid": 2, "coord": [2, 11], "parametr": [2, 4, 9], "constant": [2, 9], "number_of_vector": 2, "exampl": [2, 3, 4, 5, 9, 10, 11], "standard": [2, 4, 9], "x": [2, 4, 8, 9, 10, 11], "arang": [2, 3, 4, 9, 10, 11], "3": [2, 3, 4, 7, 9, 10, 11], "10": [2, 4, 10], "11": 2, "5": [2, 3, 4, 9, 10, 11], "calibr": 2, "sd": 2, "sd_key_dim": 2, "sd_val_dim": 2, "key_data": 2, "val_data": 2, "key_quant": 2, "val_quant": 2, "anoth": [2, 8, 9, 10], "seri": [2, 4, 9], "overwrit": [2, 3, 8, 9, 10], "spline": 2, "quadrat": 2, "third": 2, "previou": [2, 7], "next": [2, 4], "proper": [2, 4], "boundari": [2, 9, 11], "left": [2, 9, 10], "right": [2, 9, 10], "const": [2, 9], "apply_calibr": 2, "mutabl": 2, "agreement": 2, "cv_arraydata_to_seriesdata": 2, "cv_datasequence_to_list": 2, "d": [2, 3, 4, 8, 9], "retriev": 2, "datasequ": [2, 8, 10], "l": [2, 4, 9], "column": [2, 8, 10], "cv_list_to_datasequ": 2, "structur": [2, 3, 8], "preferenti": 2, "unsuccess": 2, "input": [2, 4, 9], "cv_seriesdata_to_arraydata": 2, "data_dim": 2, "sampling_shap": 2, "algorithm": [2, 3, 4, 9, 11], "nan": 2, "directedgraph": 2, "simpl": [2, 10], "python": [2, 3, 4], "direct": [2, 9], "vertex": [2, 10], "has_edg": 2, "add_edg": 2, "vertex_from": 2, "vertex_to": 2, "add_vertex": 2, "__graph_dict": 2, "otherwis": [2, 3, 4, 5, 11], "noth": [2, 4], "find_connected_vertic": 2, "find": [2, 4, 9, 11], "connect": [2, 8, 9], "vertic": [2, 10], "dequ": 2, "mutual": [2, 4], "get_edge_numb": 2, "datafram": [2, 10], "multiindex": 2, "panda": 2, "frame": 2, "mai": [2, 4, 5, 7, 8, 9, 10], "arbitrari": [2, 3, 9, 11], "heterogen": 2, "invok": [2, 4], "complex": [2, 3, 9, 11], "particularli": 2, "tabular": 2, "t": [2, 4, 9, 11], "row": [2, 9, 10], "label": [2, 10], "attr": [2, 3], "global": 2, "dataset": [2, 10], "ax": [2, 9, 10, 11], "iat": 2, "iloc": 2, "pure": [2, 10], "locat": [2, 9, 10], "select": [2, 9, 10, 11], "loc": [2, 9], "group": [2, 4, 8], "boolean": [2, 4], "style": [2, 3, 5, 10], "styler": 2, "apply_func": 2, "col_nam": 2, "ret_nam": 2, "drop_col": 2, "print_progress": [2, 4, 11], "col_names_valu": 2, "re": [2, 4, 9], "certain": 2, "drop": 2, "print": [2, 4, 9, 11], "progress": [2, 4, 11], "bar": [2, 4, 10, 11], "averag": [2, 4], "key_column": 2, "add_std": 2, "add_num": 2, "unweight": 2, "distinguish": [2, 7, 8, 10], "deviat": [2, 4, 9], "dseq": 2, "drop_column": 2, "inplac": 2, "pd": [2, 4, 8, 10], "col": [2, 10], "join": [2, 4, 8], "how": [2, 10], "outer": [2, 4, 9, 10], "rename_column": 2, "old_nam": 2, "new_nam": 2, "reset_index": 2, "reset": 2, "level": [2, 3, 4, 5, 9], "do": [2, 4], "try": [2, 3, 10], "insert": [2, 9], "rather": 2, "col_level": 2, "By": [2, 3], "col_fil": 2, "repeat": 2, "allow_dupl": 2, "lib": 2, "no_default": 2, "duplic": [2, 4, 8], "version": [2, 3, 4, 9], "renam": [2, 4], "equal": [2, 9, 10], "set_index": 2, "opposit": [2, 9], "reindex": 2, "expand": [2, 9], "reindex_lik": 2, "df": [2, 11], "bird": 2, "389": 2, "24": 2, "mammal": 2, "80": [2, 4], "falcon": 2, "parrot": 2, "lion": 2, "monkei": 2, "max_spe": 2, "when": [2, 3, 7, 9], "we": [2, 7, 9], "sequenti": 2, "avoid": [2, 9, 11], "being": 2, "you": [2, 3], "from_tupl": 2, "speed": 2, "speci": 2, "fly": 2, "run": [2, 4, 7, 8, 9], "jump": 2, "choos": [2, 9, 10], "subset": 2, "them": 2, "top": [2, 3, 4, 9, 10], "under": 2, "nonexist": 2, "genu": 2, "sort_row": 2, "ascend": [2, 9], "sort": [2, 4, 9], "descend": 2, "constructor_plugin_datasequence_to_arraydata": 2, "attrdict": 2, "rec": 2, "sub": [2, 8], "exist": [2, 3, 4, 8], "prevent": 2, "public": 2, "fail": [2, 3, 4, 9, 11], "_": [2, 4, 8], "dot": [2, 5, 9, 10], "abc": [2, 9], "def": [2, 3, 4, 9], "chosen": [2, 4], "ellips": [2, 9, 10], "my_dict": 2, "b": [2, 9, 10, 11], "c": [2, 8, 9, 10], "my_attrdict": 2, "f": [2, 4, 9, 11], "nested_v": 2, "unord": 2, "fulli": [2, 3, 10], "qualifi": [2, 3], "__hash__": 2, "myclass": 2, "attr0": [2, 3], "attr1": [2, 3], "__init__": 2, "asdf": 2, "1234": 2, "my_object": 2, "hex": [2, 4, 10], "0x1b6ce7488edaa385": 2, "overrid": 2, "__eq__": 2, "explicitli": [2, 9, 10], "reimplement": 2, "super": 2, "n": [2, 4, 7, 8, 9, 11], "unitless": 2, "has_nam": 2, "labelstr": 2, "mathstr": 2, "math": [2, 6, 11, 12], "valcheckdesc": 2, "allow_non": 2, "check_func": 2, "check_typ": 2, "check_it": 2, "check_min": 2, "check_max": 2, "assume_func": [2, 9], "add_io_kei": 2, "descriptor": 2, "valid": [2, 5, 8, 9], "provid": [2, 9, 10], "interfac": 2, "assumpt": 2, "regardless": 2, "val_check": 2, "against": 2, "own": 2, "valquant": [2, 10], "comparison": 2, "cast": [2, 4], "all_op": 2, "cancel_op": 2, "combine_op": 2, "linear_op": 2, "mathstr_op": 2, "mathrm": [2, 9], "mod": 2, "cdot": [2, 9], "div": 2, "numeric_op": 2, "str_op": 2, "val_format": 2, "unit_math": 2, "hash_combine_ord": 2, "hval": 2, "combin": [2, 4, 9], "asymmetr": 2, "hash_combine_xor": 2, "xor": 2, "hash_lib": 2, "stabl": [2, 10], "byte": [2, 3], "xxh64": 2, "storag": 3, "To": [3, 4, 9], "enabl": 3, "o": [3, 8, 10], "custom": 3, "requir": [3, 4, 9, 11], "itself": [3, 4], "overwritten": [3, 8], "customiz": 3, "getter": 3, "current": [3, 7, 8, 9, 10], "id_not_speci": 3, "objdecod": 3, "deseri": 3, "legaci": 3, "cls_map": 3, "inherit": [3, 9], "popul": [3, 9], "accord": [3, 4, 9, 10], "get_class_from_fqnam": 3, "ser": 3, "req_vers": 3, "raise_err": 3, "minimum": [3, 4, 9, 10, 11], "runtimeerror": [3, 8, 9], "condit": [3, 9, 11], "fulfil": [3, 9], "error": [3, 5, 7, 9, 10], "failur": 3, "proce": 3, "objencod": 3, "get_fqname_from_class": 3, "notimplementederror": 3, "serializ": 3, "filter_primit": 3, "filter": [3, 4, 5, 7, 8, 9, 10, 11], "special": [3, 9], "applic": [3, 4, 8], "fqname": 3, "arrai": [3, 4, 7, 9, 10, 11], "cl": 3, "priorit": 3, "so": [3, 4], "purpos": [3, 4], "_cl": 3, "get_file_format": 3, "deduc": [3, 9, 10], "deduct": 3, "occur": [3, 5, 11], "stackoverflow": 3, "com": [3, 11], "question": [3, 11], "2020014": 3, "obj_or_cl": 3, "dec": 3, "bson": 3, "hdf": 3, "bmp": 3, "wct": 3, "sif": 3, "mat": 3, "loader": 3, "enc": 3, "write": [3, 8], "type_is_primit": 3, "consid": [3, 9], "compress_numpy_array_as_png": 3, "im_data": 3, "decompress_numpy_array_from_png": 3, "header": 3, "scheme": 3, "load_bmp_to_arraydata": 3, "read": [3, 8], "bitmap": 3, "filenotfounderror": [3, 4], "attributeerror": 3, "load_png_to_arraydata": 3, "portabl": 3, "network": 3, "graphic": 3, "load_sif_to_arraydata": 3, "load_tif_to_arraydata": 3, "tag": [3, 8], "tif": 3, "load_wct_to_arraydata": 3, "wincamd": 3, "corrupt": 3, "numpyjsonencod": 3, "skipkei": 3, "ensure_ascii": 3, "check_circular": 3, "allow_nan": 3, "sort_kei": 3, "separ": [3, 4, 5, 8, 9], "jsonencod": 3, "dump": 3, "typeerror": 3, "4": [3, 4, 9, 10, 11], "could": [3, 4, 9], "els": 3, "let": [3, 9], "load_csv_span_agilent_to_arraydata": 3, "agil": 3, "spectrum": 3, "analyz": [3, 11], "csv": 3, "power": [3, 9], "spectral": 3, "densiti": [3, 9], "load_txt_span_numpy_to_arraydata": 3, "spectral_quant": 3, "weight_quant": 3, "normal": [3, 9, 10, 11], "txt": 3, "weight": [3, 9], "usual": 3, "frequenc": [3, 9, 11], "wavelength": 3, "rel": [3, 4, 9, 10, 11], "No": [3, 4], "weighted_sum": 3, "weigh": [3, 7], "memoiz": 4, "decor": [4, 8, 9], "cach": [4, 9], "time": [4, 5, 8, 9, 11], "later": [4, 7], "reevalu": 4, "example_funct": 4, "periodictim": 4, "period": [4, 10], "worker_func": 4, "timer": 4, "worker": 4, "timeout": [4, 8], "static": [4, 8, 9, 10], "thread": 4, "infinit": 4, "restart": 4, "get_funct": 4, "get_period": 4, "is_al": 4, "aliv": 4, "stop": [4, 8, 9], "dynam": 4, "set_arg": 4, "feedback": [4, 7], "correct": [4, 11], "runtim": 4, "delai": 4, "smaller": [4, 9], "set_stop_act": 4, "stop_act": 4, "action": [4, 9], "stoppablethread": 4, "target": [4, 7, 10, 11], "end": [4, 9], "event": [4, 5], "wait": [4, 8], "condition": [4, 10], "stop_ev": 4, "trigger": 4, "invoc": 4, "cannot": 4, "daemon": 4, "identifi": [4, 8], "been": [4, 9], "identif": 4, "native_id": 4, "nativ": 4, "integr": [4, 7, 9], "getnam": 4, "isdaemon": 4, "setdaemon": 4, "setnam": 4, "assume_construct_obj": 4, "cls_": 4, "raise_except": 4, "assert": 4, "assume_dir": [4, 5], "directori": 4, "extens": 4, "dir_path": 4, "did": 4, "assume_endswith": 4, "suffix": 4, "assertionerror": 4, "assume_even_int": 4, "even": [4, 5], "assume_it": 4, "assume_list": 4, "assume_numpy_arrai": 4, "assume_odd_int": 4, "odd": 4, "assume_startswith": 4, "prefix": 4, "prepend": 4, "begin": 4, "assume_tupl": 4, "capitalize_first_char": 4, "capit": 4, "charact": 4, "leav": 4, "rest": 4, "invari": 4, "s_cap": 4, "char_rang": 4, "yield": [4, 5, 9], "alphabet": 4, "letter": 4, "chr": 4, "char": 4, "lr": 4, "cv_array_points_to_bin": 4, "ndim0": 4, "ndim1": 4, "work": [4, 9], "todo": [4, 7, 11], "diagon": [4, 9], "cv_bitfield": 4, "bit": 4, "field": [4, 8, 9], "bf": 4, "bitfield": 4, "cv_camel_to_snake_cas": 4, "snake_char": 4, "camelcas": 4, "snake_cas": 4, "snake": 4, "case": [4, 11], "concaten": [4, 11], "cv_coord_spherical_to_cartesian": 4, "radial": 4, "polar": [4, 10], "azimuth": 4, "3d": [4, 9], "spheric": 4, "cartesian": 4, "r": [4, 9, 10], "infti": 4, "theta": [4, 9], "pi": [4, 7, 9, 11], "phi": [4, 9], "broadcast": [4, 9], "cv_datetim": 4, "datetim": [4, 8], "timestamp": [4, 8], "isoformat": 4, "cv_float": 4, "dec_sep": 4, "decim": 4, "cv_index_center_to_rect": 4, "full": [4, 9, 10], "rectangl": [4, 10, 11], "rect": [4, 10, 11], "inner": [4, 10], "cv_index_center_to_slic": 4, "shorthand": [4, 10], "cv_index_rect_to_slic": [4, 11], "cv_index_ellipsi": 4, "resolv": 4, "ellipsi": [4, 9], "explicit": [4, 11], "resolved_indic": 4, "reshap": [4, 9], "69": 4, "74": 4, "79": 4, "84": 4, "89": 4, "94": 4, "99": 4, "104": 4, "109": 4, "114": 4, "119": 4, "cv_index_mask_to_rect": 4, "mask": [4, 7, 11], "cv_iter_to_str": 4, "_iter": 4, "formatt": [4, 5], "2f": 4, "03d": 4, "3e": 4, "cv_timestamp": 4, "date": 4, "do_noth": 4, "regex": 4, "cv_func": 4, "part": [4, 9], "serv": 4, "conveni": [4, 9], "search": [4, 9, 12], "regular": [4, 10], "express": 4, "enclos": 4, "parenthes": 4, "convers": 4, "extract_index_nonunique_arrai": 4, "vec": [4, 9], "min_count": 4, "rtol": 4, "1e": [4, 9], "08": 4, "toler": 4, "regard": 4, "idx": 4, "flatten_nested_dict": 4, "delim": 4, "delimit": 4, "flatten_nested_list": 4, "flat_l": 4, "ineffici": 4, "generate_fill_char": 4, "fill_char": 4, "multi": [4, 9, 11], "produc": 4, "cut": [4, 11], "get_combin": 4, "faster": 4, "comb": 4, "7": [4, 11], "8": [4, 9], "get_first_elem_it": 4, "elem": 4, "get_numpy_array_index": 4, "ar_or_ndim": 4, "default_idx": 4, "actual": [4, 7], "slc": 4, "slc0": 4, "slc1": 4, "get_numpy_dtype_str": 4, "match": [4, 8], "found": [4, 9], "dtype_str": 4, "get_regex_numb": 4, "sgn": 4, "sign": [4, 9], "both": [4, 9, 10], "comma": 4, "get_si_prefix": 4, "cutoff": 4, "si": [4, 9], "hex_posit": 4, "nbit": 4, "id_dict": 4, "is_datetim": 4, "is_it": 4, "is_numb": 4, "iter_progress": 4, "make_dict": 4, "key_list": 4, "val_list": 4, "basi": [4, 9], "make_getitem_func": 4, "__getitem__": [4, 10], "y": [4, 8, 9, 10, 11], "getitem": 4, "map_dict": 4, "arg_dict": 4, "kwarg_dict": 4, "pre_arg": 4, "post_arg": 4, "dict_val": 4, "d1": [4, 9], "d2": [4, 9], "new_dict": 4, "nest_flattened_dict": 4, "unflatten": 4, "order_list": 4, "count": 4, "subcount": 4, "subtot": 4, "start_tim": 4, "bar_length": 4, "40": [4, 8], "total_length": 4, "rename_dict_kei": 4, "key_map": 4, "d_new": 4, "resize_numpy_arrai": 4, "mode_keep": 4, "front": 4, "shrink": 4, "increas": 4, "back": [4, 9], "resized_ar": 4, "ret_id": 4, "reverse_dict": 4, "random": [4, 8, 9], "rev_d": 4, "split_strip": 4, "strip": 4, "split": [4, 9], "split_unit": 4, "unchang": 4, "str_si_prefix": 4, "precis": 4, "digit": 4, "w": [4, 9], "000\u00b5w": 4, "100pw": 4, "transpose_arrai": 4, "transpos": [4, 9], "foldercontentsresult": 4, "get_folder_cont": 4, "parent": [4, 8, 10], "folder": 4, "subfold": 4, "folders_match": 4, "files_match": 4, "folders_unmatch": 4, "unmatch": 4, "files_unmatch": 4, "assume_file_exist": 4, "assume_config_item": 5, "assume_fil": 5, "copy_fil": 5, "read_json": 5, "write_config": 5, "copy_to_old": 5, "write_json": 5, "colorformatt": 5, "datefmt": 5, "formatmessag": 5, "critic": [5, 9], "x1b": 5, "37m": 5, "41m": 5, "debug": 5, "2m": 5, "31m": 5, "info": 5, "33m": 5, "record": [5, 7], "coupl": 5, "preparatori": 5, "carri": 5, "out": [5, 10], "messag": [5, 8], "logrecord": 5, "getmessag": 5, "usestim": 5, "formattim": 5, "formatexcept": 5, "maxfilt": 5, "maxlevel": 5, "100": [5, 10], "deem": 5, "appropri": [5, 8], "get_logg": 5, "30": 5, "hierarch": 5, "core": [5, 11, 12], "my_modul": 5, "2020": 5, "02": [5, 10], "20": 5, "002": 5, "setlevel": 5, "200": 5, "add_to_sys_path": 5, "sy": 5, "alreadi": [5, 10], "control": [6, 9, 12], "databas": [6, 12], "plot": [6, 12], "trafo": [6, 12], "kalmanfilt": 7, "history_len": 7, "10000": [7, 9], "initial_estim": 7, "initial_covari": 7, "vectori": [7, 9, 10], "model": 7, "en": [7, 9], "wikipedia": [7, 9], "wiki": [7, 9], "kalman_filt": 7, "observ": 7, "estim": [7, 9, 11], "covari": 7, "restrict": 7, "histori": 7, "unrestrict": [7, 9], "lead": 7, "memori": 7, "issu": 7, "initi": [7, 9, 11], "process_model": 7, "process_covari": 7, "subsequ": [7, 9, 11], "observation_model": 7, "observation_covari": 7, "control_model": 7, "state_observ": 7, "sequenc": [7, 8], "state_estim": 7, "state_covari": 7, "add_observ": 7, "prior": [7, 9], "posterior": 7, "arraycontrolloop": 7, "trg_imag": 7, "init_ctrl_imag": 7, "proport": 7, "loop": [7, 8], "unlimit": 7, "setpoint": 7, "execut": [7, 8], "add_ctrl_step": 7, "act_imag": 7, "ctrl_imag": 7, "dif_imag": 7, "err_imag": 7, "measur": [7, 8, 9], "imag": [7, 11], "current_trg_imag": 7, "latest": 7, "remove_step": 7, "get_ctrl_kernel": 7, "kernel": 7, "calcul": [7, 9, 10, 11], "signal": 7, "set_ctrl_kernel": 7, "gain_prop": 7, "gain_integr_lim": 7, "num_integr_lim": 7, "25": 7, "tau_integr_lim": 7, "1000000": 7, "limit": [7, 9, 10], "gain": 7, "exponenti": [7, 9], "amp_prop": 7, "taper": 7, "off": [7, 11], "characterist": [7, 9], "toward": 7, "zero": [7, 9, 10, 11], "until": 7, "denomin": 7, "expon": 7, "imagecontrolloop": 7, "alia": 7, "get_ctrl_imag": 7, "old_ctrl_imag": 7, "vmin": [7, 10], "vmax": [7, 10], "get_dif_imag": 7, "rescal": [7, 9], "stuff": 7, "get_err_imag": 7, "history_step": 7, "image_dim": 7, "clip": [7, 10], "amqpapibas": 8, "instance_id": 8, "_random_id": 8, "rpc": 8, "api": [8, 10], "amqp_client": 8, "amqpconnect": 8, "client": 8, "api_id": 8, "exchang": 8, "api_sub_id": 8, "api_vers": 8, "api_method": 8, "amqprpcfactori": 8, "turn": 8, "server": 8, "get_exchange_id": 8, "get_queue_id": 8, "get_routing_kei": 8, "test": [8, 9], "get_api": 8, "get_api_signatur": 8, "get_api_specif": 8, "ping": 8, "ping_arg": 8, "api_repli": 8, "api_timeout": 8, "func_id": 8, "ret": [8, 9, 11], "arg_nam": 8, "kwarg_nam": 8, "repli": 8, "arg_var": 8, "kwarg_var": 8, "null": 8, "hint": 8, "complic": [8, 9], "specif": 8, "spec": 8, "docstr": [8, 9], "register_cb_on_entri": 8, "method_nam": 8, "callback": 8, "accept": [8, 10], "amqplocalerror": 8, "register_cb_on_exit": 8, "config": 8, "queue": 8, "host": 8, "broker": 8, "ip": 8, "port": 8, "credenti": 8, "usernam": 8, "password": 8, "block": [8, 9], "establish": 8, "find_config": 8, "get_url": 8, "handle_error": 8, "config_path": 8, "user": 8, "weida": 8, "amqpbas": 8, "close": 8, "channel": 8, "discover_config": 8, "connect_statu": 8, "err_rais": 8, "err_msg": 8, "is_connect": 8, "is_run": 8, "afterward": 8, "amqpremoteerror": 8, "amqpreplytimeouterror": 8, "amqprpcbas": 8, "sent": 8, "topic": 8, "cap": 8, "rout": 8, "addit": [8, 9, 10, 11], "attach": 8, "subapi_id": 8, "random_id": 8, "subscrib": 8, "command": 8, "log": 8, "traffic": 8, "__meta__": 8, "__rpc_version": 8, "z": [8, 10], "__api_vers": 8, "my_unique_function_identifi": 8, "func_arg": 8, "arg0": 8, "arg1": [8, 9], "func_kwarg": 8, "kw0": 8, "kwarg0": 8, "kw1": 8, "kwarg1": 8, "deserialize_repli": 8, "deserialize_request": 8, "serialize_repli": 8, "serialize_request": 8, "rpc_version": 8, "close_amqp": 8, "connect_amqp": 8, "_msg": 8, "local_dispatch": 8, "bodi": 8, "local": [8, 9], "dispatch": 8, "remote_dispatch": 8, "remot": 8, "err": 8, "setup_amqp": 8, "amqp_connect": 8, "setup_api": 8, "api_object": 8, "factori": [8, 9], "make_dynamic_rpc_cli": 8, "cls_name": 8, "make_rpc_cli": 8, "make_rpc_serv": 8, "expect": [8, 9], "influxdb": 8, "v2": 8, "organis": 8, "token": 8, "queri": 8, "asynchr": 8, "commun": 8, "synchron": 8, "asynchron": 8, "default_bucket": 8, "default_measur": 8, "bucket": 8, "_field": 8, "_valu": 8, "etc": 8, "create_bucket": 8, "read_last_point": 8, "read_point": 8, "window": 8, "1m": 8, "2h": 8, "aggreg": 8, "median": [8, 9], "rmv_nan": 8, "read_measurement_valu": 8, "_check_param": 8, "read_tag_valu": 8, "tag_valu": 8, "update_bucket": 8, "update_field": 8, "update_measur": 8, "update_tag": 8, "url": 8, "write_point": 8, "nanosecond": 8, "modelbas": 9, "const_p0": 9, "fit": [9, 10, 11], "_split_fit_data": 9, "Not": 9, "curve_fit": 9, "p_all": 9, "x0": [9, 10], "y0": [9, 10], "z0": 9, "p_default": 9, "p0": 9, "_func": 9, "param": 9, "find_p0": 9, "routin": 9, "concret": 9, "staticmethod": 9, "pfit": 9, "var_data": 9, "func_data": 9, "find_popt": 9, "popt": 9, "pstd": 9, "013333333": 9, "x0_std": 9, "psuccess": 9, "p0_for_fit": 9, "pall": 9, "pcov": 9, "pcov_for_fit": 9, "popt_for_fit": 9, "pstd_for_fit": 9, "get_p0": 9, "get_popt": 9, "get_pstd": 9, "p0_is_set": 9, "split_fit_data": 9, "notimpl": 9, "_p0": 9, "_pcov": 9, "_pfit": 9, "_popt": 9, "_var_rect": 9, "find_chi2": 9, "chi": 9, "squar": [9, 10], "statist": 9, "residu": 9, "find_chi2_r": 9, "reduc": [9, 10, 11], "divid": 9, "degre": 9, "freedom": 9, "minu": 9, "find_chi2_signific": 9, "confind": 9, "quantil": 9, "sigma": 9, "qualiti": 9, "95": 9, "succeed": [9, 11], "parameter_nam": 9, "lower_bound": 9, "upper_bound": 9, "get_model_data": 9, "50": 9, "continuo": 9, "data_cont": 9, "as_dict": 9, "set_p0": 9, "set_pfit": 9, "opt": 9, "fix": [9, 10], "func_dim": 9, "test_hypothesis_chi2": 9, "p_valu": 9, "05": 9, "confid": 9, "alpha": 9, "modelfromarrai": 9, "param_dim": 9, "scale_dim": 9, "offset_dim": 9, "fitarraydata": 9, "charg": 9, "distribut": 9, "conduct": 9, "sinc": 9, "u": 9, "goal": 9, "f_i": 9, "t_i": 9, "denot": 9, "taken": 9, "want": 9, "scalabl": 9, "again": 9, "now": 9, "fitmodel": 9, "rvcontinu": 9, "momtyp": 9, "xtol": 9, "14": 9, "badvalu": 9, "longnam": 9, "extradoc": 9, "seed": 9, "rv_continu": 9, "random_st": 9, "variat": 9, "kurtosi": 9, "skew": 9, "varianc": 9, "kwd": 9, "rv": 9, "pdf": 9, "arg2": 9, "arg3": 9, "probabl": 9, "freez": 9, "array_lik": 9, "rv_frozen": 9, "frozen": 9, "ipdf": 9, "p": [9, 11], "branch": 9, "tol": 9, "unimod": 9, "invers": [9, 11], "separation_loc": 9, "distr_l": 9, "distr_r": 9, "amp_l": 9, "amp_r": 9, "args_l": 9, "args_r": 9, "kwargs_l": 9, "kwargs_r": 9, "best": 9, "rvcontinuousfrozen": 9, "ql": 9, "qr": 9, "wrong": 9, "separation_loc_multi": 9, "distrs_l": 9, "distrs_r": 9, "dist": 9, "rv_continuous_frozen": 9, "cdf": 9, "entropi": 9, "interv": [9, 10], "isf": 9, "logcdf": 9, "logpdf": 9, "logsf": 9, "moment": 9, "ppf": 9, "sf": 9, "stat": 9, "tensormodelbas": 9, "pall_scal": 9, "pall_vect": 9, "popt_is_set": 9, "p_scal": 9, "p_ten": 9, "pten": 9, "p_vect": 9, "fitcosine1d": 9, "cosine_1d": 9, "2\u03c0": 9, "phase": [9, 11], "fitlinear1d": 9, "max_point": 9, "fitcosine2d": 9, "cosine_2d": 9, "fx": 9, "fy": 9, "angl": [9, 10, 11], "arctan": 9, "angle_std": 9, "max_lin": 9, "fiterrorfunct": 9, "error_funct": 9, "width": [9, 10], "linear_1d": 9, "fitlinearstepfunct": 9, "linear_step_funct": 9, "fitpowerlaw1d": 9, "power_law_1d": 9, "fitpowerlaw1dcent": 9, "frequency_x": 9, "frequency_i": 9, "erf": 9, "x_0": 9, "frac": 9, "law": 9, "fitairydisk2d": 9, "airy_disk_2d": 9, "approxim": 9, "fitbmgaussianparabolic1dint2d": 9, "fitgaussian1d": 9, "bm_gaussian_parabolic_1d_int2d": 9, "ag": 9, "ap": 9, "gaussian": [9, 11], "parabola": 9, "wgx": 9, "wpx": 9, "distribution_amplitud": 9, "get_distribut": 9, "fitbmgaussianparabolic1d": 9, "tail": 9, "get_fit_gaussian_1d": 9, "get_fit_parabolic_1d_int2d": 9, "parabol": 9, "fitbmgaussianparabolic2dint1dtilt": 9, "fitgaussian2dtilt": 9, "bm_gaussian_parabolic_2d_int1d": 9, "wgu": 9, "wgv": 9, "wpu": 9, "wpv": 9, "tilt": 9, "45": 9, "ellipt": 9, "fit1d": 9, "get_fit_gaussian_2d_tilt": 9, "get_fit_parabolic_2d_int1d_tilt": 9, "fitexponential1d": 9, "exponential_1d": 9, "rate": 9, "uniti": 9, "xi": 9, "decai": 9, "fitexponentialdecay1d": 9, "gaussian_1d": 9, "wx": 9, "_normal1ddistribution_gen": 9, "maxfev": 9, "100000": 9, "gaussian_2d_tilt": 9, "wu": 9, "wv": 9, "fitlorentzian1dab": 9, "lorentzian_1d_ab": 9, "dummi": 9, "fitlorentzianeit1dimag": 9, "lorentzian_eit_1d_imag": 9, "x1": [9, 10], "shift": [9, 11], "wx1": 9, "ge": 9, "excit": 9, "fc": 9, "rabi": 9, "dc": 9, "detun": 9, "lmax": 9, "rmax": 9, "cmin": 9, "central": 9, "lwidth": 9, "rwidth": 9, "cwidth": 9, "dp": 9, "get_phi": 9, "phy": 9, "probe": 9, "reson": 9, "intermedi": 9, "fitlorentzianrydeit1dimag": 9, "lorentzian_ryd_eit_1d_imag": 9, "ratio": [9, 10, 11], "fitparabolic1d": 9, "parabolic_1d": 9, "fitparabolic1dint2d": 9, "parabolic_1d_int2d": 9, "fitparabolic2dint1dtilt": 9, "fitskewgaussian1d": 9, "skew_gaussian_1d": 9, "_skewnormal1ddistribution_gen": 9, "distr": 9, "skewnormal1ddistribut": 9, "fitsymexponential1d": 9, "sym_exponential_1d": 9, "_symexpon1ddistribution_gen": 9, "rnddscballistic1d": 9, "site": 9, "hop": 9, "rv_discret": 9, "ballist": 9, "transport": 9, "occup": 9, "site_min": 9, "site_max": 9, "evolut": 9, "radian": [9, 11], "rad": [9, 11], "rnddscblochosc1d": 9, "gradient": 9, "bloch": 9, "oscil": 9, "rnddscdiffusive1d": 9, "diffus": 9, "discret": [9, 10], "sites\u00b2": 9, "center_x": 9, "center_i": 9, "j_1": 9, "sqrt": 9, "y_0": 9, "dsc_ballistic_1d": 9, "j_n": 9, "j": 9, "energi": 9, "hbar": 9, "dsc_bloch_osc_1d": 9, "delta": [9, 10], "sin": 9, "distanc": [9, 10], "potenti": 9, "dsc_bloch_osc_2d": 9, "hopping_x": 9, "hopping_i": 9, "gradient_x": 9, "gradient_i": 9, "bloch_osc_1d": 9, "n_x": 9, "n_y": 9, "dsc_bloch_osc_3d": 9, "hopping_z": 9, "gradient_z": 9, "n_z": 9, "dsc_diffusive_1d": 9, "exp": 9, "lattic": 9, "d_": 9, "gamma": 9, "exponential_decay_1d": 9, "exponential_decay_nd": 9, "sum_": 9, "x_i": 9, "c_i": 9, "xi_i": 9, "gamma_distribution_1d": 9, "mu": 9, "width_u": 9, "width_v": 9, "rotat": [9, 10, 11], "co": 9, "sigma_u": 9, "sigma_v": 9, "gaussian_nd": 9, "sigma_i": 9, "gaussian_nd_cent": 9, "gaussian_nd_symmetr": 9, "lorentzian_1d_complex": 9, "rydberg": 9, "fraction": [9, 11], "eit": 9, "parabolic_1d_finsup": 9, "finit": 9, "w_x": 9, "consist": 9, "expans": 9, "parabolic_2d_int1d_tilt": 9, "skew_normal_distribut": 9, "intervalseri": 9, "dt": [9, 11], "t0": 9, "y1": [9, 10], "get_block": 9, "iv_gap": 9, "get_data": 9, "evalu": 9, "trace": 9, "independ": 9, "gap": 9, "iv": 9, "get_tim": 9, "durat": 9, "modul": [9, 10, 12], "scope": 9, "cosh": 9, "t1": 9, "extent": 9, "gauss": 9, "interval_func": 9, "rescale_param": 9, "_ivf_factori": 9, "p1": 9, "p2": 9, "k0": 9, "k1": 9, "k2": 9, "lin": 9, "tanh": 9, "trapez": 9, "differentiate_arrai": 9, "dx": 9, "edge_ord": 9, "differenti": [9, 10], "along": [9, 10, 11], "accur": [9, 11], "ar_dif": 9, "integrate_arrai": 9, "definit": 9, "indefinit": 9, "xmin": [9, 10], "xmax": [9, 10], "int_": [9, 11], "ar_int": 9, "maximize_discrete_stepwis": 9, "fun": 9, "analog": [9, 11], "maxim": 9, "minim": 9, "descent": 9, "Its": 9, "guess": 9, "solut": 9, "keywword": 9, "search_rang": 9, "optimum": 9, "slower": 9, "maxit": 9, "results_cach": 9, "pre": 9, "ret_cach": 9, "get_nonlinear_support_point": 9, "nr_point": 9, "slope": 9, "region": 9, "interest": 9, "overal": 9, "idea": 9, "critert": 9, "startpoint": 9, "scan": 9, "Will": 9, "alwai": 9, "final": 9, "known": 9, "priori": 9, "background": 9, "un": 9, "curvatur": 9, "peakinfo": 9, "subpeak": 9, "analysi": [9, 12], "substructur": 9, "insuffici": 9, "henc": 9, "_fit": 9, "iter_peak": 9, "iter_subpeak": 9, "nsubpeak": 9, "peak_info_left": 9, "peak_info_right": 9, "overlap": 9, "absolut": [9, 10], "mass": [9, 11], "account": 9, "overlapl": 9, "overlapr": 9, "line": [9, 10], "analyze_single_peak": 9, "peak_ad": 9, "max_subpeak": 9, "fit_class": 9, "max_width_std": 9, "001": 9, "min_subpeak_len_ab": 9, "min_subpeak_len_rel": 9, "_is_recurs": 9, "therebi": 9, "uncertainti": 9, "attempt": 9, "least_sq": 9, "peak_info": 9, "correlate_g2": 9, "auto": [9, 11], "cross": 9, "correl": 9, "arraylik": 9, "norm": [9, 10, 11], "fft": [9, 11], "find_histogram": 9, "histogram": 9, "hist": 9, "find_peak_1d": 9, "find_peaks_1d": 9, "center_err": 9, "npeak": 9, "rel_promin": 9, "55": 9, "check_npeak": 9, "base_prominence_ratio": 9, "edge_peak": 9, "fit_algorithm": 9, "ret_val": 9, "_debug": 9, "promin": 9, "extend": 9, "secondari": 9, "among": 9, "lorentzian": 9, "find_peaks_1d_promin": 9, "vari": 9, "diagonalizablel": 9, "linearsystem": 9, "eigensystem": 9, "solver": 9, "diagonaliz": 9, "matric": 9, "system": [9, 11], "m": [9, 11], "sum_p": 9, "b_p": 9, "m_p": 9, "matrix": [9, 11], "mu_p": 9, "eigenvector": 9, "decomposit": 9, "pleas": 9, "hermitianl": 9, "symmetricl": 9, "rank": 9, "solv": 9, "calc_eigensystem": 9, "eigenvalu": 9, "arrang": 9, "meaningfulli": 9, "sort_eigensystem": 9, "hermitian": 9, "degener": 9, "orthogon": 9, "computation": 9, "expens": 9, "orthonorm": 9, "ortho_eigensystem": 9, "decomp_result": 9, "calc_solut": 9, "decomp_solut": 9, "calc_result": 9, "eval": 9, "decomp": 9, "eigval": 9, "eigvec": 9, "is_defect": 9, "is_diagonaliz": 9, "is_invert": 9, "is_singular": 9, "leigvec": 9, "mata_ax": 9, "matb_ax": 9, "reigvec": 9, "vec_ax": 9, "veca_ax": 9, "vecb_ax": 9, "guarante": [9, 11], "necessarili": 9, "decomp_vec": 9, "res_vec": 9, "decompos": 9, "sol_vec": 9, "n_dof": 9, "ascendingli": 9, "modulu": 9, "possibli": 9, "There": 9, "remain": 9, "veca_bx": 9, "m_": 9, "a_1": 9, "b_1": 9, "y_": 9, "v_1": 9, "sum_b": 9, "x_b": 9, "y_a": 9, "n_": 9, "dof": 9, "prod_i": 9, "n_i": 9, "calc_op_out": 9, "ar1": 9, "ar2": 9, "reduce_ndim": 9, "ret_dim": 9, "elementwis": 9, "non_ar1": 9, "2_dim": 9, "red_dim": 9, "product": 9, "non_ar1_dim": 9, "non_ar2_dim": 9, "complex_norm": 9, "pseudonorm": 9, "tensori": 9, "constitut": 9, "euclid_norm": 9, "euclidean": 9, "dagger": 9, "extract_diag": 9, "tensorized_matrix": 9, "vec_dim": 9, "tensorized_vector": 9, "make_diag": 9, "get_dirac_delta": 9, "abab": 9, "dirac": 9, "entri": 9, "aabb": 9, "dirac_delta": 9, "insert_dim": 9, "ortho_gram_schmidt": 9, "norm_func": 9, "naiv": 9, "gram": 9, "schmidt": 9, "n_vector": 9, "n_compon": 9, "tensorinv_numpy_arrai": 9, "a_ax": 9, "b_ax": 9, "tensormul_numpy_arrai": 9, "invert": [9, 11], "effect": 9, "tensorize_numpy_arrai": 9, "tensor_shap": 9, "tensor_ax": 9, "vec_axi": 9, "vectorize_numpy_arrai": 9, "res_ax": 9, "einstein": 9, "summat": 9, "wrap": 9, "einsum": 9, "jk": 9, "ik": 9, "ijkl": 9, "mjkn": 9, "ilmn": 9, "il": 9, "tensorsolve_numpy_arrai": 9, "equat": 9, "a_": 9, "ab": [9, 10], "lu_fac": 9, "lu": 9, "lst_sq": 9, "least": [9, 11], "sol": 9, "determinist": 9, "tensortranspose_numpy_arrai": 9, "ret_shap": 9, "vec_shap": 9, "align": 9, "k": 9, "would": [9, 10], "12": 9, "contourf": 10, "xnorm": 10, "ynorm": 10, "cnorm": 10, "vdif": 10, "vcen": 10, "xlabel": 10, "ylabel": 10, "titl": 10, "colorbar": 10, "cb_orient": 10, "clabel": 10, "aspect": [10, 11], "contour": 10, "matplotlib": 10, "_as_gen": 10, "pyplot": 10, "html": 10, "variou": 10, "show": 10, "horizont": 10, "pcolorim": 10, "pcolormesh": 10, "ctick": 10, "tick": 10, "xerr": 10, "yerr": 10, "marker": 10, "scatter": 10, "errorbar": 10, "bracket": 10, "darker": 10, "plot_ellips": 10, "linestyl": 10, "diamet": 10, "circl": 10, "plot_polygon": 10, "irregular": 10, "polygon": 10, "ber": 10, "plot_rectangl": 10, "bottom": 10, "corner": 10, "ymin": 10, "ymax": 10, "remove_ax": 10, "enforc": 10, "on_empti": 10, "uncondition": 10, "artist": 10, "present": [10, 11], "savefig": 10, "fp": 10, "style_ax": 10, "grid": 10, "legend": 10, "minortick": 10, "axes_api": 10, "major": 10, "minor": 10, "tick_param": 10, "style_figur": 10, "fig": 10, "ax_styl": 10, "figsiz": 10, "figsize_unit": 10, "dpi": 10, "tight_layout": 10, "edgecolor": 10, "facecolor": 10, "figur": 10, "mm": 10, "resolut": 10, "inch": 10, "set_tight_layout": 10, "face": 10, "suptitl": 10, "subplot": 10, "axsiz": 10, "axsize_offset": 10, "size_unit": 10, "nrow": 10, "ncol": 10, "capstyl": 10, "project": 10, "round": 10, "butt": 10, "unsqueeze_ax": 10, "ax_1d": 10, "unsqueez": 10, "use_styl": 10, "add_named_cmap": 10, "cmap": 10, "add_named_color": 10, "rgb": 10, "change_brightness_rgb": 10, "bright": 10, "hl": 10, "darken_rgb": 10, "get_color_from_cmap": 10, "colormap": 10, "get_colors_from_cmap": 10, "6": 10, "get_srgb_black_tint": 10, "rgb_color_ref": 10, "get_srgb_gray_tint": 10, "cv_out": 10, "srgb": 10, "infinitesim": 10, "chroma": 10, "hue": 10, "n_color": 10, "98": 10, "black": 10, "white": 10, "get_srgb_grey_tint": 10, "get_srgb_linspac": 10, "keycolor": 10, "keycolor_dist": 10, "distance_measur": 10, "jch": 10, "hue_polar": 10, "As": 10, "clockwis": 10, "anticlockwis": 10, "rgb_interpolated_color": 10, "get_srgb_rang": 10, "smallest": [10, 11], "largest": 10, "rgb_color": 10, "color_dim": 10, "light": 10, "satur": 10, "rgb_min": 10, "rgb_max": 10, "get_srgb_white_tint": 10, "hex_to_rgb": 10, "hls_to_rgb": 10, "hsv_to_rgb": 10, "hsv": 10, "interpolate_rgb": 10, "rgb1": 10, "rgb2": 10, "jch_to_rgb": 10, "lighten_rgb": 10, "make_cmap": 10, "onto": 10, "parse_color": 10, "rgb_blacken": 10, "blacken": 10, "rgb_change_bright": 10, "brightness_chang": 10, "gamut": 10, "clip_jch": 10, "rgb_change_chroma": 10, "chroma_chang": 10, "rgb_change_light": 10, "lightness_chang": 10, "rgb_change_satur": 10, "saturation_chang": 10, "90": 10, "rgb_equalize_light": 10, "preserv": 10, "trg_light": 10, "rgb_to_hex": 10, "rgb_to_hl": 10, "rgb_to_hsv": 10, "rgb_to_jch": 10, "rgb_whiten": 10, "whiten": 10, "set_color_cycl": 10, "cycl": 10, "subfiglayout": 10, "exact": 10, "mpl": 10, "subfig_rect": 10, "subfigur": 10, "margin": 10, "hcenter": 10, "vcenter": 10, "sublayout": 10, "sublayout_width": 10, "sublayout_height": 10, "subfigs": 10, "height": 10, "normalize_rect": 10, "cv_center_to_rect": 10, "mpl_center": 10, "xcenter": 10, "ycenter": 10, "cv_rect_to_cent": 10, "mpl_rect": 10, "get_sublayout_rect": 10, "resp": [10, 11], "intern": 10, "get_sublayout_s": 10, "subfig_s": 10, "iter_ax": 10, "yet": 10, "make_ax": 10, "were": 10, "rect_mm": 10, "subfigmargin": 10, "helper": 10, "alias": 10, "get_outer_margin_s": 10, "get_total_margin_s": 10, "is_fix": 10, "is_rel": 10, "make_fixed_ax": 10, "plot_ax_arrai": 10, "plot_func": 10, "sharex": 10, "sharei": 10, "remove_empti": 10, "arg_kei": 10, "kwarg_kei": 10, "select_kei": 10, "x_kei": 10, "share_list": 10, "quantitative_list": 10, "fmt_kei": 10, "plt_param": 10, "share": 10, "fig_siz": 10, "ax_siz": 10, "dataset_row": 10, "data_column0": 10, "data_column1": 10, "alter": 10, "across": 10, "quantit": 10, "red": 10, "green": 10, "blue": 10, "ravel": 10, "time_rang": 11, "frequency_start": 11, "fast": 11, "forward": 11, "tild": 11, "inf": 11, "thereof": 11, "ta": 11, "tb": 11, "infer": 11, "dft": 11, "ortho": 11, "backward": 11, "ft": 11, "tt": 11, "fa": 11, "fb": 11, "ff": 11, "import": 11, "ifft": 11, "frequency_rang": 11, "time_start": 11, "inv": 11, "affinetrafo": 11, "fixed_point": 11, "matrix_to_origin": 11, "matrix_to_target": 11, "offset_to_origin": 11, "offset_to_target": 11, "set_offset_by_fixed_point": 11, "set_offset_by_point_pair": 11, "coord_to_origin": 11, "target_coord": 11, "origin": 11, "coord_to_target": 11, "origin_coord": 11, "cv_offset_shift_to_origin": 11, "cv_offset_shift_to_target": 11, "cv_to_origin": 11, "target_arrai": 11, "origin_shap": 11, "cv_to_target": 11, "origin_arrai": 11, "target_shap": 11, "relev": 11, "sharper": 11, "document": 11, "ndimag": 11, "map_coordin": 11, "_cv_arrai": 11, "fit_affine_transform": 11, "success": 11, "written": 11, "h": 11, "sp\u00e4th": 11, "9": 11, "27": 11, "34": 11, "2004": 11, "q": 11, "get_mask_origin_coords_within_target_rect": 11, "lie": 11, "insid": 11, "get_mask_target_coords_within_origin_rect": 11, "get_origin_unit_vector": 11, "origin_unit_vector": 11, "th": 11, "get_target_unit_vector": 11, "target_unit_vector": 11, "origin_point": 11, "target_point": 11, "affinetrafo2d": 11, "pixel": 11, "illumin": 11, "calc_trafo": 11, "shift_origin_ax": 11, "shift_target_ax": 11, "peak": 11, "consol": 11, "fit_peak_coordin": 11, "At": 11, "find_peak_coordin": 11, "snr": 11, "max_sum_ratio": 11, "0001": 11, "get_origin_ax": 11, "magnif": 11, "get_target_ax": 11, "magnifi": 11, "set_origin_ax": 11, "set_target_ax": 11, "center_crop": 11, "crop_rect": 11, "crop": 11, "crop_imag": 11, "ar_ndim": 11, "codereview": 11, "stackexchang": 11, "132914": 11, "misc": 11, "int32": 11, "find_centroid": 11, "np_arrai": 11, "centroid": 11, "centroid_coord": 11, "fit_to_aspect": 11, "aspect_ratio": 11, "fit_mod": 11, "enlarg": 11, "center_mod": 11, "ind_min_x": 11, "ind_min_i": 11, "ind_max_x": 11, "ind_max_i": 11, "resize_on_condit": 11, "cond": 11, "cut_al": 11, "hypersurfac": 11, "cut_ani": 11, "partial": 11, "keep_al": 11, "keep_ani": 11, "resize_on_filter_maximum": 11, "min_mass": 11, "min_val": 11, "area": 11, "neg": 11, "y_shape": 11, "x_shape": 11, "resize_on_mass": 11, "total_mass": 11, "aspect_mod": 11, "exce": 11, "packag": 12, "env": 12, "tool": 12, "page": 12}, "objects": {"": [[12, 0, 0, "-", "libics"]], "libics": [[0, 0, 0, "-", "core"], [5, 0, 0, "-", "env"], [6, 0, 0, "-", "tools"]], "libics.core": [[1, 0, 0, "-", "cfg"], [2, 0, 0, "-", "data"], [3, 0, 0, "-", "io"], [4, 0, 0, "-", "util"]], "libics.core.cfg": [[1, 1, 1, "", "CfgBase"], [1, 4, 1, "", "NamedTuple"], [1, 1, 1, "", "ProtectedDict"], [1, 4, 1, "", "cv_mapping_to_namedtuple"]], "libics.core.cfg.CfgBase": [[1, 2, 1, "", "LOGGER"], [1, 3, 1, "", "get_items"], [1, 3, 1, "", "load_cfg"], [1, 3, 1, "", "map_recursive"], [1, 3, 1, "", "save_cfg"]], "libics.core.data": [[2, 0, 0, "-", "arrays"], [2, 0, 0, "-", "conversion"], [2, 0, 0, "-", "graphs"], [2, 0, 0, "-", "sequences"], [2, 0, 0, "-", "types"]], "libics.core.data.arrays": [[2, 1, 1, "", "ArrayData"], [2, 1, 1, "", "CmprArrayData"], [2, 1, 1, "", "SeriesData"], [2, 4, 1, "", "assume_quantity"], [2, 4, 1, "", "constructor_plugin_CmprArrayData_to_ArrayData"], [2, 4, 1, "", "get_coordinate_meshgrid"]], "libics.core.data.arrays.ArrayData": [[2, 2, 1, "", "ATTR_NAMES_COPY_VAR"], [2, 2, 1, "", "ATTR_NAMES_VAR"], [2, 2, 1, "", "HASH_KEYS"], [2, 2, 1, "", "LINSPACE"], [2, 2, 1, "", "LOGGER"], [2, 2, 1, "", "POINTS"], [2, 2, 1, "", "RANGE"], [2, 3, 1, "", "REGISTER_CONSTRUCTOR"], [2, 2, 1, "", "SER_KEYS"], [2, 2, 1, "", "VAR_MODES"], [2, 3, 1, "", "add_dim"], [2, 3, 1, "", "astype"], [2, 3, 1, "", "attributes"], [2, 5, 1, "", "bins"], [2, 5, 1, "", "center"], [2, 3, 1, "", "cmp_quantity"], [2, 3, 1, "", "cmp_shape"], [2, 3, 1, "", "cmp_var"], [2, 3, 1, "", "comp_dim"], [2, 3, 1, "", "copy"], [2, 3, 1, "", "copy_var"], [2, 3, 1, "", "cv_index_to_quantity"], [2, 3, 1, "", "cv_multi_index_to_quantity"], [2, 3, 1, "", "cv_multi_quantity_to_index"], [2, 3, 1, "", "cv_quantity_to_index"], [2, 5, 1, "", "data"], [2, 5, 1, "", "dtype"], [2, 3, 1, "", "from_ArrayData"], [2, 3, 1, "", "from_CmprArrayData"], [2, 3, 1, "", "from_DataSequence"], [2, 3, 1, "", "from_array"], [2, 3, 1, "", "from_sequence_table"], [2, 3, 1, "", "get_bins"], [2, 3, 1, "", "get_center"], [2, 3, 1, "", "get_common_obj"], [2, 3, 1, "", "get_copy_obj"], [2, 3, 1, "", "get_high"], [2, 3, 1, "", "get_low"], [2, 3, 1, "", "get_offset"], [2, 3, 1, "", "get_points"], [2, 3, 1, "", "get_step"], [2, 3, 1, "", "get_var_meshgrid"], [2, 3, 1, "", "get_var_meshgrid_bins"], [2, 5, 1, "", "high"], [2, 3, 1, "", "interpolate"], [2, 5, 1, "", "low"], [2, 3, 1, "", "max"], [2, 3, 1, "", "mean"], [2, 3, 1, "", "min"], [2, 3, 1, "", "mod_dim"], [2, 3, 1, "", "move_dim"], [2, 5, 1, "", "ndim"], [2, 5, 1, "", "offset"], [2, 3, 1, "", "pad"], [2, 5, 1, "", "points"], [2, 3, 1, "", "rmv_dim"], [2, 3, 1, "", "set_data_quantity"], [2, 3, 1, "", "set_dim"], [2, 3, 1, "", "set_var_quantity"], [2, 5, 1, "", "shape"], [2, 5, 1, "", "size"], [2, 3, 1, "", "std"], [2, 5, 1, "", "step"], [2, 3, 1, "", "sum"], [2, 3, 1, "", "supersample"], [2, 5, 1, "", "total_ndim"], [2, 5, 1, "", "var_ndim"], [2, 5, 1, "", "var_shape"]], "libics.core.data.arrays.CmprArrayData": [[2, 2, 1, "", "HASH_KEYS"], [2, 2, 1, "", "SER_KEYS"], [2, 3, 1, "", "attributes"], [2, 5, 1, "", "dec_lut"], [2, 3, 1, "", "from_array_data"], [2, 3, 1, "", "get_compressed_array_png"], [2, 3, 1, "", "get_decompressed_array_png"], [2, 3, 1, "", "to_array_data"]], "libics.core.data.arrays.SeriesData": [[2, 3, 1, "", "add_dim"], [2, 5, 1, "", "data"], [2, 5, 1, "", "ndim"], [2, 3, 1, "", "rmv_dim"], [2, 3, 1, "", "set_quantity"], [2, 5, 1, "", "shape"], [2, 5, 1, "", "total_ndim"]], "libics.core.data.conversion": [[2, 1, 1, "", "Calibration"], [2, 4, 1, "", "apply_calibration"], [2, 4, 1, "", "cv_arraydata_to_seriesdata"], [2, 4, 1, "", "cv_datasequence_to_list"], [2, 4, 1, "", "cv_list_to_datasequence"], [2, 4, 1, "", "cv_seriesdata_to_arraydata"]], "libics.core.data.conversion.Calibration": [[2, 1, 1, "", "MODE"], [2, 5, 1, "", "key_data"], [2, 5, 1, "", "key_quantity"], [2, 5, 1, "", "val_data"], [2, 5, 1, "", "val_quantity"]], "libics.core.data.conversion.Calibration.MODE": [[2, 2, 1, "", "CUBIC"], [2, 2, 1, "", "LINEAR"], [2, 2, 1, "", "NEAREST"], [2, 2, 1, "", "NEXT"], [2, 2, 1, "", "PREVIOUS"], [2, 2, 1, "", "QUADRATIC"]], "libics.core.data.graphs": [[2, 1, 1, "", "DirectedGraph"]], "libics.core.data.graphs.DirectedGraph": [[2, 3, 1, "", "add_edge"], [2, 3, 1, "", "add_vertex"], [2, 3, 1, "", "find_connected_vertices"], [2, 3, 1, "", "get_edge_number"], [2, 3, 1, "", "has_edge"], [2, 3, 1, "", "vertices"]], "libics.core.data.sequences": [[2, 1, 1, "", "DataSequence"], [2, 4, 1, "", "constructor_plugin_DataSequence_to_ArrayData"]], "libics.core.data.sequences.DataSequence": [[2, 3, 1, "", "apply_func"], [2, 3, 1, "", "average"], [2, 3, 1, "", "drop_column"], [2, 3, 1, "", "join"], [2, 3, 1, "", "rename_column"], [2, 3, 1, "", "reset_index"], [2, 3, 1, "", "sort_rows"]], "libics.core.data.types": [[2, 1, 1, "", "AttrDict"], [2, 1, 1, "", "AttrHashBase"], [2, 1, 1, "", "Quantity"], [2, 1, 1, "", "ValCheckDesc"], [2, 1, 1, "", "ValQuantity"], [2, 4, 1, "", "hash_combine_ordered"], [2, 4, 1, "", "hash_combine_xor"], [2, 4, 1, "", "hash_libics"]], "libics.core.data.types.AttrHashBase": [[2, 2, 1, "", "HASH_KEYS"]], "libics.core.data.types.Quantity": [[2, 2, 1, "", "HASH_KEYS"], [2, 2, 1, "", "SER_KEYS"], [2, 3, 1, "", "attributes"], [2, 3, 1, "", "copy"], [2, 3, 1, "", "has_name"], [2, 3, 1, "", "labelstr"], [2, 3, 1, "", "mathstr"]], "libics.core.data.types.ValQuantity": [[2, 2, 1, "", "ALL_OPS"], [2, 2, 1, "", "CANCEL_OPS"], [2, 2, 1, "", "COMBINE_OPS"], [2, 2, 1, "", "HASH_KEYS"], [2, 2, 1, "", "LINEAR_OPS"], [2, 2, 1, "", "MATHSTR_OP"], [2, 2, 1, "", "NUMERIC_OPS"], [2, 2, 1, "", "SER_KEYS"], [2, 2, 1, "", "STR_OP"], [2, 3, 1, "", "mathstr"]], "libics.core.io": [[3, 0, 0, "-", "base"], [3, 0, 0, "-", "image"], [3, 0, 0, "-", "iomisc"], [3, 0, 0, "-", "trace"]], "libics.core.io.base": [[3, 1, 1, "", "FileBase"], [3, 1, 1, "", "ID_NOT_SPECIAL"], [3, 1, 1, "", "ObjDecoder"], [3, 1, 1, "", "ObjEncoder"], [3, 4, 1, "", "filter_primitive"], [3, 4, 1, "", "get_class_from_fqname"], [3, 4, 1, "", "get_file_format"], [3, 4, 1, "", "get_fqname_from_class"], [3, 4, 1, "", "load"], [3, 4, 1, "", "save"], [3, 4, 1, "", "type_is_primitive"]], "libics.core.io.base.FileBase": [[3, 2, 1, "", "SER_KEYS"], [3, 3, 1, "", "attributes"], [3, 3, 1, "", "load"], [3, 3, 1, "", "save"]], "libics.core.io.base.ObjDecoder": [[3, 2, 1, "", "CLS_MAP"], [3, 3, 1, "", "decode"], [3, 3, 1, "", "deserialize"]], "libics.core.io.base.ObjEncoder": [[3, 2, 1, "", "CLS_MAP"], [3, 3, 1, "", "encode"], [3, 3, 1, "", "serialize"]], "libics.core.io.image": [[3, 4, 1, "", "compress_numpy_array_as_png"], [3, 4, 1, "", "decompress_numpy_array_from_png"], [3, 4, 1, "", "load_bmp_to_arraydata"], [3, 4, 1, "", "load_png_to_arraydata"], [3, 4, 1, "", "load_sif_to_arraydata"], [3, 4, 1, "", "load_tif_to_arraydata"], [3, 4, 1, "", "load_wct_to_arraydata"]], "libics.core.io.iomisc": [[3, 1, 1, "", "NumpyJsonEncoder"]], "libics.core.io.iomisc.NumpyJsonEncoder": [[3, 3, 1, "", "default"]], "libics.core.io.trace": [[3, 4, 1, "", "load_csv_span_agilent_to_arraydata"], [3, 4, 1, "", "load_txt_span_numpy_to_arraydata"]], "libics.core.util": [[4, 0, 0, "-", "func"], [4, 0, 0, "-", "misc"], [4, 0, 0, "-", "path"]], "libics.core.util.func": [[4, 1, 1, "", "Memoize"], [4, 1, 1, "", "PeriodicTimer"], [4, 1, 1, "", "StoppableThread"]], "libics.core.util.func.PeriodicTimer": [[4, 3, 1, "", "get_function"], [4, 3, 1, "", "get_period"], [4, 3, 1, "", "is_alive"], [4, 3, 1, "", "run"], [4, 3, 1, "", "set_args"], [4, 3, 1, "", "set_stop_action"], [4, 3, 1, "", "start"], [4, 3, 1, "", "stop"]], "libics.core.util.func.StoppableThread": [[4, 3, 1, "", "stop"]], "libics.core.util.misc": [[4, 4, 1, "", "assume_construct_obj"], [4, 4, 1, "", "assume_dir"], [4, 4, 1, "", "assume_endswith"], [4, 4, 1, "", "assume_even_int"], [4, 4, 1, "", "assume_iter"], [4, 4, 1, "", "assume_list"], [4, 4, 1, "", "assume_numpy_array"], [4, 4, 1, "", "assume_odd_int"], [4, 4, 1, "", "assume_startswith"], [4, 4, 1, "", "assume_tuple"], [4, 4, 1, "", "capitalize_first_char"], [4, 4, 1, "", "char_range"], [4, 4, 1, "", "cv_array_points_to_bins"], [4, 4, 1, "", "cv_bitfield"], [4, 4, 1, "", "cv_camel_to_snake_case"], [4, 4, 1, "", "cv_coord_spherical_to_cartesian"], [4, 4, 1, "", "cv_datetime"], [4, 4, 1, "", "cv_float"], [4, 4, 1, "", "cv_index_center_to_rect"], [4, 4, 1, "", "cv_index_center_to_slice"], [4, 4, 1, "", "cv_index_ellipsis"], [4, 4, 1, "", "cv_index_mask_to_rect"], [4, 4, 1, "", "cv_index_rect_to_slice"], [4, 4, 1, "", "cv_iter_to_str"], [4, 4, 1, "", "cv_timestamp"], [4, 4, 1, "", "do_nothing"], [4, 4, 1, "", "extract"], [4, 4, 1, "", "extract_index_nonunique_array"], [4, 4, 1, "", "flatten_nested_dict"], [4, 4, 1, "", "flatten_nested_list"], [4, 4, 1, "", "generate_fill_chars"], [4, 4, 1, "", "get_combinations"], [4, 4, 1, "", "get_first_elem_iter"], [4, 4, 1, "", "get_numpy_array_index"], [4, 4, 1, "", "get_numpy_dtype_str"], [4, 4, 1, "", "get_regex_number"], [4, 4, 1, "", "get_si_prefix"], [4, 4, 1, "", "hex_positive"], [4, 4, 1, "", "id_dict"], [4, 4, 1, "", "is_datetime"], [4, 4, 1, "", "is_iter"], [4, 4, 1, "", "is_number"], [4, 4, 1, "", "iter_progress"], [4, 4, 1, "", "make_dict"], [4, 4, 1, "", "make_getitem_func"], [4, 4, 1, "", "map_dicts"], [4, 4, 1, "", "nest_flattened_dict"], [4, 4, 1, "", "order_list"], [4, 4, 1, "", "print_progress"], [4, 4, 1, "", "rename_dict_keys"], [4, 4, 1, "", "resize_numpy_array"], [4, 4, 1, "", "ret_id"], [4, 4, 1, "", "reverse_dict"], [4, 4, 1, "", "split_strip"], [4, 4, 1, "", "split_unit"], [4, 4, 1, "", "str_si_prefix"], [4, 4, 1, "", "transpose_array"]], "libics.core.util.path": [[4, 1, 1, "", "FolderContentsResult"], [4, 4, 1, "", "assume_file_exists"], [4, 4, 1, "", "get_folder_contents"]], "libics.core.util.path.FolderContentsResult": [[4, 5, 1, "", "files"], [4, 5, 1, "", "folders"]], "libics.env": [[5, 4, 1, "", "ASSUME_CONFIG_ITEM"], [5, 4, 1, "", "ASSUME_DIR"], [5, 4, 1, "", "ASSUME_FILE"], [5, 4, 1, "", "READ_JSON"], [5, 4, 1, "", "WRITE_CONFIG"], [5, 4, 1, "", "WRITE_JSON"], [5, 0, 0, "-", "constants"], [5, 0, 0, "-", "logging"], [5, 0, 0, "-", "system"]], "libics.env.logging": [[5, 1, 1, "", "ColorFormatter"], [5, 1, 1, "", "MaxFilter"], [5, 4, 1, "", "get_logger"]], "libics.env.logging.ColorFormatter": [[5, 2, 1, "", "COLORS"], [5, 3, 1, "", "format"]], "libics.env.logging.MaxFilter": [[5, 3, 1, "", "filter"]], "libics.env.system": [[5, 4, 1, "", "add_to_sys_path"]], "libics.tools": [[7, 0, 0, "-", "control"], [8, 0, 0, "-", "database"], [9, 0, 0, "-", "math"], [10, 0, 0, "-", "plot"], [11, 0, 0, "-", "trafo"]], "libics.tools.control": [[7, 0, 0, "-", "kalman"], [7, 0, 0, "-", "pid"]], "libics.tools.control.kalman": [[7, 1, 1, "", "KalmanFilter"]], "libics.tools.control.kalman.KalmanFilter": [[7, 3, 1, "", "add_observation"], [7, 5, 1, "", "control_model"], [7, 5, 1, "", "observation_covariance"], [7, 5, 1, "", "observation_model"], [7, 5, 1, "", "process_covariance"], [7, 5, 1, "", "process_model"], [7, 5, 1, "", "state_covariances"], [7, 5, 1, "", "state_estimates"], [7, 5, 1, "", "state_observations"]], "libics.tools.control.pid": [[7, 1, 1, "", "ArrayControlLoop"], [7, 2, 1, "", "ImageControlLoop"], [7, 4, 1, "", "get_ctrl_image"], [7, 4, 1, "", "get_dif_image"], [7, 4, 1, "", "get_err_image"]], "libics.tools.control.pid.ArrayControlLoop": [[7, 2, 1, "", "LOGGER"], [7, 5, 1, "", "act_images"], [7, 3, 1, "", "add_ctrl_step"], [7, 5, 1, "", "ctrl_images"], [7, 5, 1, "", "dif_images"], [7, 5, 1, "", "err_images"], [7, 3, 1, "", "get_ctrl_kernel"], [7, 3, 1, "", "remove_steps"], [7, 3, 1, "", "set_ctrl_kernel"], [7, 5, 1, "", "trg_image"], [7, 5, 1, "", "trg_images"]], "libics.tools.database": [[8, 0, 0, "-", "amqp"], [8, 0, 0, "-", "influx"]], "libics.tools.database.amqp": [[8, 1, 1, "", "AmqpApiBase"], [8, 1, 1, "", "AmqpConnection"], [8, 6, 1, "", "AmqpLocalError"], [8, 6, 1, "", "AmqpRemoteError"], [8, 6, 1, "", "AmqpReplyTimeoutError"], [8, 1, 1, "", "AmqpRpcBase"], [8, 1, 1, "", "AmqpRpcFactory"], [8, 4, 1, "", "api_method"]], "libics.tools.database.amqp.AmqpApiBase": [[8, 2, 1, "", "API_ID"], [8, 2, 1, "", "API_METHODS"], [8, 2, 1, "", "API_REPLIES"], [8, 2, 1, "", "API_SUB_ID"], [8, 2, 1, "", "API_TIMEOUTS"], [8, 2, 1, "", "API_VERSION"], [8, 2, 1, "", "LOGGER"], [8, 3, 1, "", "get_api"], [8, 3, 1, "", "get_api_signature"], [8, 3, 1, "", "get_api_specifications"], [8, 3, 1, "", "get_exchange_id"], [8, 3, 1, "", "get_queue_id"], [8, 3, 1, "", "get_routing_key"], [8, 3, 1, "", "help"], [8, 3, 1, "", "ping"], [8, 3, 1, "", "ping_args"], [8, 3, 1, "", "register_cb_on_entry"], [8, 3, 1, "", "register_cb_on_exit"]], "libics.tools.database.amqp.AmqpConnection": [[8, 2, 1, "", "CONFIG_PATH"], [8, 2, 1, "", "LOGGER"], [8, 3, 1, "", "close"], [8, 3, 1, "", "connect"], [8, 5, 1, "", "credentials"], [8, 3, 1, "", "discover_configs"], [8, 3, 1, "", "find_configs"], [8, 3, 1, "", "get_url"], [8, 3, 1, "", "handle_error"], [8, 3, 1, "", "is_connected"], [8, 3, 1, "", "is_running"], [8, 3, 1, "", "join"], [8, 3, 1, "", "run"], [8, 3, 1, "", "stop"]], "libics.tools.database.amqp.AmqpRpcBase": [[8, 2, 1, "", "API"], [8, 2, 1, "", "RPC_VERSION"], [8, 3, 1, "", "close_amqp"], [8, 3, 1, "", "connect_amqp"], [8, 3, 1, "", "deserialize_reply"], [8, 3, 1, "", "deserialize_request"], [8, 3, 1, "", "local_dispatcher"], [8, 3, 1, "", "remote_dispatcher"], [8, 3, 1, "", "serialize_reply"], [8, 3, 1, "", "serialize_request"], [8, 3, 1, "", "setup_amqp"], [8, 3, 1, "", "setup_api"]], "libics.tools.database.amqp.AmqpRpcFactory": [[8, 3, 1, "", "make_dynamic_rpc_client"], [8, 3, 1, "", "make_rpc_client"], [8, 3, 1, "", "make_rpc_server"]], "libics.tools.database.influx": [[8, 1, 1, "", "InfluxDB"]], "libics.tools.database.influx.InfluxDB": [[8, 2, 1, "", "CONFIG_PATH"], [8, 2, 1, "", "LOGGER"], [8, 5, 1, "", "buckets"], [8, 3, 1, "", "create_bucket"], [8, 5, 1, "", "default_bucket"], [8, 5, 1, "", "default_measurement"], [8, 5, 1, "", "fields"], [8, 3, 1, "", "find_configs"], [8, 5, 1, "", "measurements"], [8, 3, 1, "", "read_last_points"], [8, 3, 1, "", "read_measurement_values"], [8, 3, 1, "", "read_points"], [8, 3, 1, "", "read_tag_values"], [8, 5, 1, "", "tags"], [8, 3, 1, "", "update_buckets"], [8, 3, 1, "", "update_fields"], [8, 3, 1, "", "update_measurements"], [8, 3, 1, "", "update_tags"], [8, 5, 1, "", "url"], [8, 3, 1, "", "write_point"], [8, 3, 1, "", "write_points"]], "libics.tools.math": [[9, 0, 0, "-", "calculus"], [9, 0, 0, "-", "flat"], [9, 0, 0, "-", "intervalfunc"], [9, 0, 0, "-", "models"], [9, 0, 0, "-", "optimize"], [9, 0, 0, "-", "peaked"], [9, 0, 0, "-", "sampling"], [9, 0, 0, "-", "signal"], [9, 0, 0, "-", "tensor"]], "libics.tools.math.calculus": [[9, 4, 1, "", "differentiate_array"], [9, 4, 1, "", "integrate_array"]], "libics.tools.math.flat": [[9, 1, 1, "", "FitCosine1d"], [9, 1, 1, "", "FitCosine2d"], [9, 1, 1, "", "FitErrorFunction"], [9, 1, 1, "", "FitLinear1d"], [9, 1, 1, "", "FitLinearStepFunction"], [9, 1, 1, "", "FitPowerLaw1d"], [9, 1, 1, "", "FitPowerLaw1dCenter"], [9, 4, 1, "", "cosine_1d"], [9, 4, 1, "", "cosine_2d"], [9, 4, 1, "", "error_function"], [9, 4, 1, "", "linear_1d"], [9, 4, 1, "", "linear_step_function"], [9, 4, 1, "", "power_law_1d"]], "libics.tools.math.flat.FitCosine1d": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"]], "libics.tools.math.flat.FitCosine2d": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 5, 1, "", "angle"], [9, 5, 1, "", "angle_std"], [9, 5, 1, "", "f"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"]], "libics.tools.math.flat.FitErrorFunction": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"]], "libics.tools.math.flat.FitLinear1d": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"]], "libics.tools.math.flat.FitLinearStepFunction": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"]], "libics.tools.math.flat.FitPowerLaw1d": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"]], "libics.tools.math.flat.FitPowerLaw1dCenter": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"]], "libics.tools.math.intervalfunc": [[9, 1, 1, "", "IntervalSeries"], [9, 4, 1, "", "assume_func"], [9, 4, 1, "", "cosh"], [9, 4, 1, "", "exp"], [9, 4, 1, "", "gauss"], [9, 4, 1, "", "interval_func"], [9, 4, 1, "", "lin"], [9, 4, 1, "", "step"], [9, 4, 1, "", "tanh"], [9, 4, 1, "", "trapez"]], "libics.tools.math.intervalfunc.IntervalSeries": [[9, 2, 1, "", "KEYS"], [9, 3, 1, "", "append"], [9, 3, 1, "", "get_blocks"], [9, 3, 1, "", "get_data"], [9, 3, 1, "", "get_times"], [9, 5, 1, "", "size"]], "libics.tools.math.models": [[9, 1, 1, "", "ModelBase"], [9, 4, 1, "", "ModelFromArray"], [9, 1, 1, "", "RvContinuous"], [9, 1, 1, "", "RvContinuousFrozen"], [9, 1, 1, "", "TensorModelBase"]], "libics.tools.math.models.ModelBase": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 2, 1, "", "SER_KEYS"], [9, 3, 1, "", "copy"], [9, 3, 1, "", "find_chi2"], [9, 3, 1, "", "find_chi2_red"], [9, 3, 1, "", "find_chi2_significance"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"], [9, 3, 1, "", "get_model_data"], [9, 3, 1, "", "get_p0"], [9, 3, 1, "", "get_popt"], [9, 3, 1, "", "get_pstd"], [9, 5, 1, "", "p0"], [9, 5, 1, "", "p0_for_fit"], [9, 3, 1, "", "p0_is_set"], [9, 5, 1, "", "pall"], [9, 5, 1, "", "pcov"], [9, 5, 1, "", "pcov_for_fit"], [9, 5, 1, "", "pfit"], [9, 5, 1, "", "popt"], [9, 5, 1, "", "popt_for_fit"], [9, 5, 1, "", "pstd"], [9, 5, 1, "", "pstd_for_fit"], [9, 3, 1, "", "set_p0"], [9, 3, 1, "", "set_pfit"], [9, 3, 1, "", "split_fit_data"], [9, 3, 1, "", "test_hypothesis_chi2"]], "libics.tools.math.models.RvContinuous": [[9, 2, 1, "", "LOGGER"], [9, 3, 1, "", "amplitude"], [9, 3, 1, "", "freeze"], [9, 3, 1, "", "ipdf"], [9, 3, 1, "", "kurtosis"], [9, 3, 1, "", "mode"], [9, 3, 1, "", "separation_loc"], [9, 3, 1, "", "separation_loc_multi"], [9, 3, 1, "", "skewness"], [9, 3, 1, "", "variance"]], "libics.tools.math.models.TensorModelBase": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_DEFAULT"], [9, 2, 1, "", "P_SCAL"], [9, 2, 1, "", "P_TENS"], [9, 2, 1, "", "P_VECT"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"], [9, 3, 1, "", "get_popt"], [9, 5, 1, "", "p0"], [9, 3, 1, "", "p0_is_set"], [9, 5, 1, "", "pall_scal"], [9, 5, 1, "", "pall_vect"], [9, 5, 1, "", "pcov"], [9, 5, 1, "", "popt"], [9, 3, 1, "", "popt_is_set"], [9, 5, 1, "", "pstd"]], "libics.tools.math.optimize": [[9, 4, 1, "", "maximize_discrete_stepwise"], [9, 4, 1, "", "minimize_discrete_stepwise"]], "libics.tools.math.peaked": [[9, 1, 1, "", "FitAiryDisk2d"], [9, 1, 1, "", "FitBmGaussianParabolic1dInt2d"], [9, 1, 1, "", "FitBmGaussianParabolic2dInt1dTilt"], [9, 1, 1, "", "FitExponential1d"], [9, 1, 1, "", "FitExponentialDecay1d"], [9, 1, 1, "", "FitGaussian1d"], [9, 1, 1, "", "FitGaussian2dTilt"], [9, 1, 1, "", "FitLorentzian1dAbs"], [9, 1, 1, "", "FitLorentzianEit1dImag"], [9, 1, 1, "", "FitLorentzianRydEit1dImag"], [9, 1, 1, "", "FitParabolic1d"], [9, 1, 1, "", "FitParabolic1dInt2d"], [9, 1, 1, "", "FitParabolic2dInt1dTilt"], [9, 1, 1, "", "FitSkewGaussian1d"], [9, 1, 1, "", "FitSymExponential1d"], [9, 1, 1, "", "RndDscBallistic1d"], [9, 1, 1, "", "RndDscBlochOsc1d"], [9, 1, 1, "", "RndDscDiffusive1d"], [9, 4, 1, "", "airy_disk_2d"], [9, 4, 1, "", "bm_gaussian_parabolic_1d_int2d"], [9, 4, 1, "", "bm_gaussian_parabolic_2d_int1d"], [9, 4, 1, "", "dsc_ballistic_1d"], [9, 4, 1, "", "dsc_bloch_osc_1d"], [9, 4, 1, "", "dsc_bloch_osc_2d"], [9, 4, 1, "", "dsc_bloch_osc_3d"], [9, 4, 1, "", "dsc_diffusive_1d"], [9, 4, 1, "", "exponential_1d"], [9, 4, 1, "", "exponential_decay_1d"], [9, 4, 1, "", "exponential_decay_nd"], [9, 4, 1, "", "gamma_distribution_1d"], [9, 4, 1, "", "gaussian_1d"], [9, 4, 1, "", "gaussian_2d_tilt"], [9, 4, 1, "", "gaussian_nd"], [9, 4, 1, "", "gaussian_nd_centered"], [9, 4, 1, "", "gaussian_nd_symmetric"], [9, 4, 1, "", "lorentzian_1d_abs"], [9, 4, 1, "", "lorentzian_1d_complex"], [9, 4, 1, "", "lorentzian_eit_1d_imag"], [9, 4, 1, "", "lorentzian_ryd_eit_1d_imag"], [9, 4, 1, "", "parabolic_1d"], [9, 4, 1, "", "parabolic_1d_finsup"], [9, 4, 1, "", "parabolic_1d_int2d"], [9, 4, 1, "", "parabolic_2d_int1d_tilt"], [9, 4, 1, "", "skew_gaussian_1d"], [9, 4, 1, "", "sym_exponential_1d"]], "libics.tools.math.peaked.FitAiryDisk2d": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"]], "libics.tools.math.peaked.FitBmGaussianParabolic1dInt2d": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "get_fit_gaussian_1d"], [9, 3, 1, "", "get_fit_parabolic_1d_int2d"]], "libics.tools.math.peaked.FitBmGaussianParabolic2dInt1dTilt": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"], [9, 3, 1, "", "get_fit_gaussian_2d_tilt"], [9, 3, 1, "", "get_fit_parabolic_2d_int1d_tilt"]], "libics.tools.math.peaked.FitExponential1d": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"], [9, 5, 1, "", "x0"], [9, 5, 1, "", "xi"]], "libics.tools.math.peaked.FitGaussian1d": [[9, 2, 1, "", "DISTRIBUTION"], [9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 5, 1, "", "distribution_amplitude"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"], [9, 3, 1, "", "get_distribution"]], "libics.tools.math.peaked.FitGaussian2dTilt": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 5, 1, "", "ellipticity"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"]], "libics.tools.math.peaked.FitLorentzian1dAbs": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"]], "libics.tools.math.peaked.FitLorentzianEit1dImag": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 5, 1, "", "cmin"], [9, 5, 1, "", "cwidth"], [9, 5, 1, "", "dc"], [9, 5, 1, "", "dp"], [9, 5, 1, "", "fc"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"], [9, 5, 1, "", "ge"], [9, 3, 1, "", "get_phys"], [9, 5, 1, "", "lmax"], [9, 5, 1, "", "lwidth"], [9, 5, 1, "", "rmax"], [9, 5, 1, "", "rwidth"]], "libics.tools.math.peaked.FitLorentzianRydEit1dImag": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"]], "libics.tools.math.peaked.FitParabolic1d": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"]], "libics.tools.math.peaked.FitParabolic1dInt2d": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 3, 1, "", "find_p0"]], "libics.tools.math.peaked.FitParabolic2dInt1dTilt": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"]], "libics.tools.math.peaked.FitSkewGaussian1d": [[9, 2, 1, "", "DISTRIBUTION"], [9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 5, 1, "", "distribution_amplitude"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "find_popt"], [9, 3, 1, "", "get_distribution"]], "libics.tools.math.peaked.FitSymExponential1d": [[9, 2, 1, "", "DISTRIBUTION"], [9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "P_ALL"], [9, 2, 1, "", "P_DEFAULT"], [9, 5, 1, "", "distribution_amplitude"], [9, 3, 1, "", "find_p0"], [9, 3, 1, "", "get_distribution"]], "libics.tools.math.sampling": [[9, 4, 1, "", "get_nonlinear_support_points"]], "libics.tools.math.signal": [[9, 1, 1, "", "PeakInfo"], [9, 4, 1, "", "analyze_single_peak"], [9, 4, 1, "", "correlate_g2"], [9, 4, 1, "", "find_histogram"], [9, 4, 1, "", "find_peak_1d"], [9, 4, 1, "", "find_peaks_1d"], [9, 4, 1, "", "find_peaks_1d_prominence"]], "libics.tools.math.signal.PeakInfo": [[9, 2, 1, "", "LOGGER"], [9, 2, 1, "", "SER_KEYS"], [9, 5, 1, "", "distribution"], [9, 5, 1, "", "distribution_amplitude"], [9, 5, 1, "", "fit"], [9, 3, 1, "", "get_model_data"], [9, 3, 1, "", "iter_peaks"], [9, 3, 1, "", "iter_subpeaks"], [9, 5, 1, "", "nsubpeaks"], [9, 3, 1, "", "separation_loc"]], "libics.tools.math.tensor": [[9, 1, 1, "", "DiagonalizableLS"], [9, 1, 1, "", "HermitianLS"], [9, 1, 1, "", "LinearSystem"], [9, 1, 1, "", "SymmetricLS"], [9, 4, 1, "", "calc_op_outer"], [9, 4, 1, "", "complex_norm"], [9, 4, 1, "", "euclid_norm"], [9, 4, 1, "", "extract_diag"], [9, 4, 1, "", "get_dirac_delta"], [9, 4, 1, "", "insert_dims"], [9, 4, 1, "", "make_diag"], [9, 4, 1, "", "ortho_gram_schmidt"], [9, 4, 1, "", "tensorinv_numpy_array"], [9, 4, 1, "", "tensorize_numpy_array"], [9, 4, 1, "", "tensormul_numpy_array"], [9, 4, 1, "", "tensorsolve_numpy_array"], [9, 4, 1, "", "tensortranspose_numpy_array"], [9, 4, 1, "", "vectorize_numpy_array"]], "libics.tools.math.tensor.DiagonalizableLS": [[9, 3, 1, "", "calc_eigensystem"], [9, 3, 1, "", "calc_result"], [9, 3, 1, "", "calc_solution"], [9, 5, 1, "", "decomp"], [9, 3, 1, "", "decomp_result"], [9, 3, 1, "", "decomp_solution"], [9, 5, 1, "", "eigvals"], [9, 5, 1, "", "eigvecs"], [9, 5, 1, "", "is_defective"], [9, 5, 1, "", "is_diagonalizable"], [9, 5, 1, "", "is_invertible"], [9, 5, 1, "", "is_singular"], [9, 5, 1, "", "leigvecs"], [9, 5, 1, "", "matrix"], [9, 3, 1, "", "ortho_eigensystem"], [9, 5, 1, "", "reigvecs"], [9, 3, 1, "", "sort_eigensystem"]], "libics.tools.math.tensor.HermitianLS": [[9, 3, 1, "", "calc_eigensystem"]], "libics.tools.math.tensor.LinearSystem": [[9, 3, 1, "", "eval"], [9, 5, 1, "", "mata_axes"], [9, 5, 1, "", "matb_axes"], [9, 5, 1, "", "matrix"], [9, 5, 1, "", "result"], [9, 5, 1, "", "solution"], [9, 3, 1, "", "solve"], [9, 5, 1, "", "vec_axes"], [9, 5, 1, "", "veca_axes"], [9, 5, 1, "", "vecb_axes"]], "libics.tools.math.tensor.SymmetricLS": [[9, 3, 1, "", "calc_eigensystem"]], "libics.tools.plot": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "colors"], [10, 0, 0, "-", "layout"], [10, 0, 0, "-", "multi"]], "libics.tools.plot.base": [[10, 4, 1, "", "contourf"], [10, 4, 1, "", "pcolorim"], [10, 4, 1, "", "pcolormesh"], [10, 4, 1, "", "plot"], [10, 4, 1, "", "plot_ellipse"], [10, 4, 1, "", "plot_polygon"], [10, 4, 1, "", "plot_rectangle"], [10, 4, 1, "", "remove_axes"], [10, 4, 1, "", "savefig"], [10, 4, 1, "", "scatter"], [10, 4, 1, "", "style_axes"], [10, 4, 1, "", "style_figure"], [10, 4, 1, "", "subplots"], [10, 4, 1, "", "tick_params"], [10, 4, 1, "", "unsqueeze_axes"], [10, 4, 1, "", "use_style"]], "libics.tools.plot.colors": [[10, 4, 1, "", "add_named_cmap"], [10, 4, 1, "", "add_named_color"], [10, 4, 1, "", "change_brightness_rgb"], [10, 4, 1, "", "darken_rgb"], [10, 4, 1, "", "get_color_from_cmap"], [10, 4, 1, "", "get_colors_from_cmap"], [10, 4, 1, "", "get_srgb_black_tinted"], [10, 4, 1, "", "get_srgb_gray_tinted"], [10, 4, 1, "", "get_srgb_grey_tinted"], [10, 4, 1, "", "get_srgb_linspace"], [10, 4, 1, "", "get_srgb_range"], [10, 4, 1, "", "get_srgb_white_tinted"], [10, 4, 1, "", "hex_to_rgb"], [10, 4, 1, "", "hls_to_rgb"], [10, 4, 1, "", "hsv_to_rgb"], [10, 4, 1, "", "interpolate_rgb"], [10, 4, 1, "", "jch_to_rgb"], [10, 4, 1, "", "lighten_rgb"], [10, 4, 1, "", "make_cmap"], [10, 4, 1, "", "normalize"], [10, 4, 1, "", "parse_color"], [10, 4, 1, "", "rgb_blacken"], [10, 4, 1, "", "rgb_change_brightness"], [10, 4, 1, "", "rgb_change_chroma"], [10, 4, 1, "", "rgb_change_lightness"], [10, 4, 1, "", "rgb_change_saturation"], [10, 4, 1, "", "rgb_equalize_lightness"], [10, 4, 1, "", "rgb_to_hex"], [10, 4, 1, "", "rgb_to_hls"], [10, 4, 1, "", "rgb_to_hsv"], [10, 4, 1, "", "rgb_to_jch"], [10, 4, 1, "", "rgb_whiten"], [10, 4, 1, "", "set_color_cycle"]], "libics.tools.plot.layout": [[10, 1, 1, "", "SubfigLayout"], [10, 1, 1, "", "SubfigMargins"], [10, 1, 1, "", "SubfigSize"], [10, 4, 1, "", "make_fixed_axes"]], "libics.tools.plot.layout.SubfigLayout": [[10, 2, 1, "", "LOGGER"], [10, 3, 1, "", "cv_center_to_rect"], [10, 3, 1, "", "cv_rect_to_center"], [10, 5, 1, "", "figsize"], [10, 3, 1, "", "get_sublayout_rect"], [10, 3, 1, "", "get_sublayout_size"], [10, 3, 1, "", "iter_axs"], [10, 3, 1, "", "make_ax"], [10, 5, 1, "", "ncols"], [10, 3, 1, "", "normalize_rect"], [10, 5, 1, "", "nrows"], [10, 5, 1, "", "shape"], [10, 5, 1, "", "subfig_rect"], [10, 5, 1, "", "sublayout_heights"], [10, 5, 1, "", "sublayout_widths"], [10, 5, 1, "", "sublayouts"]], "libics.tools.plot.layout.SubfigMargins": [[10, 5, 1, "", "center"], [10, 3, 1, "", "get_outer_margin_size"], [10, 3, 1, "", "get_total_margin_size"]], "libics.tools.plot.layout.SubfigSize": [[10, 3, 1, "", "is_fixed"], [10, 3, 1, "", "is_relative"]], "libics.tools.plot.multi": [[10, 4, 1, "", "plot_ax_array"]], "libics.tools.trafo": [[11, 0, 0, "-", "fourier"], [11, 0, 0, "-", "linear"], [11, 0, 0, "-", "resize"]], "libics.tools.trafo.fourier": [[11, 4, 1, "", "fft"], [11, 4, 1, "", "ifft"]], "libics.tools.trafo.linear": [[11, 1, 1, "", "AffineTrafo"], [11, 1, 1, "", "AffineTrafo2d"]], "libics.tools.trafo.linear.AffineTrafo": [[11, 2, 1, "", "HASH_KEYS"], [11, 2, 1, "", "LOGGER"], [11, 2, 1, "", "SER_KEYS"], [11, 3, 1, "", "concatenate"], [11, 3, 1, "", "coord_to_origin"], [11, 3, 1, "", "coord_to_target"], [11, 3, 1, "", "copy"], [11, 3, 1, "", "cv_offset_shift_to_origin"], [11, 3, 1, "", "cv_offset_shift_to_target"], [11, 3, 1, "", "cv_to_origin"], [11, 3, 1, "", "cv_to_target"], [11, 3, 1, "", "fit_affine_transform"], [11, 5, 1, "", "fixed_point"], [11, 3, 1, "", "get_mask_origin_coords_within_target_rect"], [11, 3, 1, "", "get_mask_target_coords_within_origin_rect"], [11, 3, 1, "", "get_origin_unit_vectors"], [11, 3, 1, "", "get_target_unit_vectors"], [11, 3, 1, "", "invert"], [11, 5, 1, "", "matrix_to_origin"], [11, 5, 1, "", "matrix_to_target"], [11, 5, 1, "", "ndim"], [11, 5, 1, "", "offset_to_origin"], [11, 5, 1, "", "offset_to_target"], [11, 3, 1, "", "set_offset_by_fixed_point"], [11, 3, 1, "", "set_offset_by_point_pair"]], "libics.tools.trafo.linear.AffineTrafo2d": [[11, 2, 1, "", "LOGGER"], [11, 3, 1, "", "calc_trafo"], [11, 3, 1, "", "find_peak_coordinates"], [11, 3, 1, "", "fit_peak_coordinates"], [11, 3, 1, "", "get_origin_axes"], [11, 3, 1, "", "get_target_axes"], [11, 3, 1, "", "magnify"], [11, 3, 1, "", "rotate"], [11, 3, 1, "", "set_origin_axes"], [11, 3, 1, "", "set_target_axes"], [11, 3, 1, "", "shift"], [11, 3, 1, "", "shift_origin_axes"], [11, 3, 1, "", "shift_target_axes"]], "libics.tools.trafo.resize": [[11, 4, 1, "", "center_crop"], [11, 4, 1, "", "crop_image"], [11, 4, 1, "", "find_centroid"], [11, 4, 1, "", "fit_to_aspect"], [11, 4, 1, "", "resize_on_condition"], [11, 4, 1, "", "resize_on_filter_maximum"], [11, 4, 1, "", "resize_on_mass"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"libic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "core": [0, 1, 2, 3, 4], "content": [0, 6, 12], "cfg": 1, "data": 2, "arrai": 2, "convers": 2, "graph": 2, "sequenc": 2, "type": 2, "io": 3, "imag": 3, "iomisc": 3, "trace": 3, "util": 4, "func": 4, "misc": 4, "path": 4, "env": 5, "constant": 5, "log": 5, "system": 5, "tool": [6, 7, 8, 9, 10, 11], "control": 7, "kalman": 7, "pid": 7, "databas": 8, "amqp": 8, "influx": 8, "math": 9, "model": 9, "flat": 9, "peak": 9, "intervalfunc": 9, "calculu": 9, "optim": 9, "document": [9, 12], "minimize_discrete_stepwis": 9, "sampl": 9, "signal": 9, "tensor": 9, "plot": 10, "color": 10, "layout": 10, "multi": 10, "trafo": 11, "fourier": 11, "linear": 11, "resiz": 11, "indic": 12, "tabl": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"libics.core": [[0, "module-libics.core"]], "Contents:": [[0, null], [6, null], [12, null]], "libics.core.cfg": [[1, "module-libics.core.cfg"]], "libics.core.data": [[2, "module-libics.core.data"]], "arrays": [[2, "module-libics.core.data.arrays"]], "conversion": [[2, "module-libics.core.data.conversion"]], "graphs": [[2, "module-libics.core.data.graphs"]], "sequences": [[2, "module-libics.core.data.sequences"]], "types": [[2, "module-libics.core.data.types"]], "libics.core.io": [[3, "module-libics.core.io"]], "image": [[3, "module-libics.core.io.image"]], "iomisc": [[3, "module-libics.core.io.iomisc"]], "trace": [[3, "module-libics.core.io.trace"]], "libics.core.util": [[4, "module-libics.core.util"]], "func": [[4, "module-libics.core.util.func"]], "misc": [[4, "module-libics.core.util.misc"]], "path": [[4, "module-libics.core.util.path"]], "libics.env": [[5, "module-libics.env"]], "constants": [[5, "module-libics.env.constants"]], "logging": [[5, "module-libics.env.logging"]], "system": [[5, "module-libics.env.system"]], "libics.tools": [[6, "module-libics.tools"]], "libics.tools.control": [[7, "module-libics.tools.control"]], "kalman": [[7, "module-libics.tools.control.kalman"]], "pid": [[7, "module-libics.tools.control.pid"]], "libics.tools.database": [[8, "module-libics.tools.database"]], "amqp": [[8, "module-libics.tools.database.amqp"]], "}": [[8, "id3"]], "influx": [[8, "module-libics.tools.database.influx"]], "libics.tools.math": [[9, "module-libics.tools.math"]], "models": [[9, "module-libics.tools.math.models"]], "flat": [[9, "module-libics.tools.math.flat"]], "peaked": [[9, "module-libics.tools.math.peaked"]], "intervalfunc": [[9, "module-libics.tools.math.intervalfunc"]], "calculus": [[9, "module-libics.tools.math.calculus"]], "optimize": [[9, "module-libics.tools.math.optimize"]], "Documentation of minimize_discrete_stepwise()": [[9, "documentation-of-minimize-discrete-stepwise"]], "sampling": [[9, "module-libics.tools.math.sampling"]], "signal": [[9, "module-libics.tools.math.signal"]], "tensor": [[9, "module-libics.tools.math.tensor"]], "libics.tools.plot": [[10, "module-libics.tools.plot"]], "colors": [[10, "module-libics.tools.plot.colors"]], "layout": [[10, "module-libics.tools.plot.layout"]], "multi": [[10, "module-libics.tools.plot.multi"]], "libics.tools.trafo": [[11, "module-libics.tools.trafo"]], "fourier": [[11, "module-libics.tools.trafo.fourier"]], "linear": [[11, "module-libics.tools.trafo.linear"]], "resize": [[11, "module-libics.tools.trafo.resize"]], "Documentation of libics": [[12, "documentation-of-libics"]], "Indices and tables": [[12, "indices-and-tables"]]}, "indexentries": {"libics.core": [[0, "module-libics.core"]], "module": [[0, "module-libics.core"], [1, "module-libics.core.cfg"], [2, "module-libics.core.data"], [2, "module-libics.core.data.arrays"], [2, "module-libics.core.data.conversion"], [2, "module-libics.core.data.graphs"], [2, "module-libics.core.data.sequences"], [2, "module-libics.core.data.types"], [3, "module-libics.core.io"], [3, "module-libics.core.io.base"], [3, "module-libics.core.io.image"], [3, "module-libics.core.io.iomisc"], [3, "module-libics.core.io.trace"], [4, "module-libics.core.util"], [4, "module-libics.core.util.func"], [4, "module-libics.core.util.misc"], [4, "module-libics.core.util.path"], [5, "module-libics.env"], [5, "module-libics.env.constants"], [5, "module-libics.env.logging"], [5, "module-libics.env.system"], [6, "module-libics.tools"], [7, "module-libics.tools.control"], [7, "module-libics.tools.control.kalman"], [7, "module-libics.tools.control.pid"], [8, "module-libics.tools.database"], [8, "module-libics.tools.database.amqp"], [8, "module-libics.tools.database.influx"], [9, "module-libics.tools.math"], [9, "module-libics.tools.math.calculus"], [9, "module-libics.tools.math.flat"], [9, "module-libics.tools.math.intervalfunc"], [9, "module-libics.tools.math.models"], [9, "module-libics.tools.math.optimize"], [9, "module-libics.tools.math.peaked"], [9, "module-libics.tools.math.sampling"], [9, "module-libics.tools.math.signal"], [9, "module-libics.tools.math.tensor"], [10, "module-libics.tools.plot"], [10, "module-libics.tools.plot.base"], [10, "module-libics.tools.plot.colors"], [10, "module-libics.tools.plot.layout"], [10, "module-libics.tools.plot.multi"], [11, "module-libics.tools.trafo"], [11, "module-libics.tools.trafo.fourier"], [11, "module-libics.tools.trafo.linear"], [11, "module-libics.tools.trafo.resize"], [12, "module-libics"]], "cfgbase (class in libics.core.cfg)": [[1, "libics.core.cfg.CfgBase"]], "logger (libics.core.cfg.cfgbase attribute)": [[1, "libics.core.cfg.CfgBase.LOGGER"]], "namedtuple() (in module libics.core.cfg)": [[1, "libics.core.cfg.NamedTuple"]], "protecteddict (class in libics.core.cfg)": [[1, "libics.core.cfg.ProtectedDict"]], "cv_mapping_to_namedtuple() (in module libics.core.cfg)": [[1, "libics.core.cfg.cv_mapping_to_namedtuple"]], "get_items() (libics.core.cfg.cfgbase method)": [[1, "libics.core.cfg.CfgBase.get_items"]], "libics.core.cfg": [[1, "module-libics.core.cfg"]], "load_cfg() (libics.core.cfg.cfgbase method)": [[1, "libics.core.cfg.CfgBase.load_cfg"]], "map_recursive() (libics.core.cfg.cfgbase method)": [[1, "libics.core.cfg.CfgBase.map_recursive"]], "save_cfg() (libics.core.cfg.cfgbase method)": [[1, "libics.core.cfg.CfgBase.save_cfg"]], "all_ops (libics.core.data.types.valquantity attribute)": [[2, "libics.core.data.types.ValQuantity.ALL_OPS"]], "attr_names_copy_var (libics.core.data.arrays.arraydata attribute)": [[2, "libics.core.data.arrays.ArrayData.ATTR_NAMES_COPY_VAR"]], "attr_names_var (libics.core.data.arrays.arraydata attribute)": [[2, "libics.core.data.arrays.ArrayData.ATTR_NAMES_VAR"]], "arraydata (class in libics.core.data.arrays)": [[2, "libics.core.data.arrays.ArrayData"]], "attrdict (class in libics.core.data.types)": [[2, "libics.core.data.types.AttrDict"]], "attrhashbase (class in libics.core.data.types)": [[2, "libics.core.data.types.AttrHashBase"]], "cancel_ops (libics.core.data.types.valquantity attribute)": [[2, "libics.core.data.types.ValQuantity.CANCEL_OPS"]], "combine_ops (libics.core.data.types.valquantity attribute)": [[2, "libics.core.data.types.ValQuantity.COMBINE_OPS"]], "cubic (libics.core.data.conversion.calibration.mode attribute)": [[2, "libics.core.data.conversion.Calibration.MODE.CUBIC"]], "calibration (class in libics.core.data.conversion)": [[2, "libics.core.data.conversion.Calibration"]], "calibration.mode (class in libics.core.data.conversion)": [[2, "libics.core.data.conversion.Calibration.MODE"]], "cmprarraydata (class in libics.core.data.arrays)": [[2, "libics.core.data.arrays.CmprArrayData"]], "datasequence (class in libics.core.data.sequences)": [[2, "libics.core.data.sequences.DataSequence"]], "directedgraph (class in libics.core.data.graphs)": [[2, "libics.core.data.graphs.DirectedGraph"]], "hash_keys (libics.core.data.arrays.arraydata attribute)": [[2, "libics.core.data.arrays.ArrayData.HASH_KEYS"]], "hash_keys (libics.core.data.arrays.cmprarraydata attribute)": [[2, "libics.core.data.arrays.CmprArrayData.HASH_KEYS"]], "hash_keys (libics.core.data.types.attrhashbase attribute)": [[2, "libics.core.data.types.AttrHashBase.HASH_KEYS"]], "hash_keys (libics.core.data.types.quantity attribute)": [[2, "libics.core.data.types.Quantity.HASH_KEYS"]], "hash_keys (libics.core.data.types.valquantity attribute)": [[2, "libics.core.data.types.ValQuantity.HASH_KEYS"]], "linear (libics.core.data.conversion.calibration.mode attribute)": [[2, "libics.core.data.conversion.Calibration.MODE.LINEAR"]], "linear_ops (libics.core.data.types.valquantity attribute)": [[2, "libics.core.data.types.ValQuantity.LINEAR_OPS"]], "linspace (libics.core.data.arrays.arraydata attribute)": [[2, "libics.core.data.arrays.ArrayData.LINSPACE"]], "logger (libics.core.data.arrays.arraydata attribute)": [[2, "libics.core.data.arrays.ArrayData.LOGGER"]], "mathstr_op (libics.core.data.types.valquantity attribute)": [[2, "libics.core.data.types.ValQuantity.MATHSTR_OP"]], "nearest (libics.core.data.conversion.calibration.mode attribute)": [[2, "libics.core.data.conversion.Calibration.MODE.NEAREST"]], "next (libics.core.data.conversion.calibration.mode attribute)": [[2, "libics.core.data.conversion.Calibration.MODE.NEXT"]], "numeric_ops (libics.core.data.types.valquantity attribute)": [[2, "libics.core.data.types.ValQuantity.NUMERIC_OPS"]], "points (libics.core.data.arrays.arraydata attribute)": [[2, "libics.core.data.arrays.ArrayData.POINTS"]], "previous (libics.core.data.conversion.calibration.mode attribute)": [[2, "libics.core.data.conversion.Calibration.MODE.PREVIOUS"]], "quadratic (libics.core.data.conversion.calibration.mode attribute)": [[2, "libics.core.data.conversion.Calibration.MODE.QUADRATIC"]], "quantity (class in libics.core.data.types)": [[2, "libics.core.data.types.Quantity"]], "range (libics.core.data.arrays.arraydata attribute)": [[2, "libics.core.data.arrays.ArrayData.RANGE"]], "register_constructor() (libics.core.data.arrays.arraydata class method)": [[2, "libics.core.data.arrays.ArrayData.REGISTER_CONSTRUCTOR"]], "ser_keys (libics.core.data.arrays.arraydata attribute)": [[2, "libics.core.data.arrays.ArrayData.SER_KEYS"]], "ser_keys (libics.core.data.arrays.cmprarraydata attribute)": [[2, "libics.core.data.arrays.CmprArrayData.SER_KEYS"]], "ser_keys (libics.core.data.types.quantity attribute)": [[2, "libics.core.data.types.Quantity.SER_KEYS"]], "ser_keys (libics.core.data.types.valquantity attribute)": [[2, "libics.core.data.types.ValQuantity.SER_KEYS"]], "str_op (libics.core.data.types.valquantity attribute)": [[2, "libics.core.data.types.ValQuantity.STR_OP"]], "seriesdata (class in libics.core.data.arrays)": [[2, "libics.core.data.arrays.SeriesData"]], "var_modes (libics.core.data.arrays.arraydata attribute)": [[2, "libics.core.data.arrays.ArrayData.VAR_MODES"]], "valcheckdesc (class in libics.core.data.types)": [[2, "libics.core.data.types.ValCheckDesc"]], "valquantity (class in libics.core.data.types)": [[2, "libics.core.data.types.ValQuantity"]], "add_dim() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.add_dim"]], "add_dim() (libics.core.data.arrays.seriesdata method)": [[2, "libics.core.data.arrays.SeriesData.add_dim"]], "add_edge() (libics.core.data.graphs.directedgraph method)": [[2, "libics.core.data.graphs.DirectedGraph.add_edge"]], "add_vertex() (libics.core.data.graphs.directedgraph method)": [[2, "libics.core.data.graphs.DirectedGraph.add_vertex"]], "apply_calibration() (in module libics.core.data.conversion)": [[2, "libics.core.data.conversion.apply_calibration"]], "apply_func() (libics.core.data.sequences.datasequence method)": [[2, "libics.core.data.sequences.DataSequence.apply_func"]], "assume_quantity() (in module libics.core.data.arrays)": [[2, "libics.core.data.arrays.assume_quantity"]], "astype() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.astype"]], "attributes() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.attributes"]], "attributes() (libics.core.data.arrays.cmprarraydata method)": [[2, "libics.core.data.arrays.CmprArrayData.attributes"]], "attributes() (libics.core.data.types.quantity method)": [[2, "libics.core.data.types.Quantity.attributes"]], "average() (libics.core.data.sequences.datasequence method)": [[2, "libics.core.data.sequences.DataSequence.average"]], "bins (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.bins"]], "center (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.center"]], "cmp_quantity() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.cmp_quantity"]], "cmp_shape() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.cmp_shape"]], "cmp_var() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.cmp_var"]], "comp_dim() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.comp_dim"]], "constructor_plugin_cmprarraydata_to_arraydata() (in module libics.core.data.arrays)": [[2, "libics.core.data.arrays.constructor_plugin_CmprArrayData_to_ArrayData"]], "constructor_plugin_datasequence_to_arraydata() (in module libics.core.data.sequences)": [[2, "libics.core.data.sequences.constructor_plugin_DataSequence_to_ArrayData"]], "copy() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.copy"]], "copy() (libics.core.data.types.quantity method)": [[2, "libics.core.data.types.Quantity.copy"]], "copy_var() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.copy_var"]], "cv_arraydata_to_seriesdata() (in module libics.core.data.conversion)": [[2, "libics.core.data.conversion.cv_arraydata_to_seriesdata"]], "cv_datasequence_to_list() (in module libics.core.data.conversion)": [[2, "libics.core.data.conversion.cv_datasequence_to_list"]], "cv_index_to_quantity() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.cv_index_to_quantity"]], "cv_list_to_datasequence() (in module libics.core.data.conversion)": [[2, "libics.core.data.conversion.cv_list_to_datasequence"]], "cv_multi_index_to_quantity() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.cv_multi_index_to_quantity"]], "cv_multi_quantity_to_index() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.cv_multi_quantity_to_index"]], "cv_quantity_to_index() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.cv_quantity_to_index"]], "cv_seriesdata_to_arraydata() (in module libics.core.data.conversion)": [[2, "libics.core.data.conversion.cv_seriesdata_to_arraydata"]], "data (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.data"]], "data (libics.core.data.arrays.seriesdata property)": [[2, "libics.core.data.arrays.SeriesData.data"]], "dec_lut (libics.core.data.arrays.cmprarraydata property)": [[2, "libics.core.data.arrays.CmprArrayData.dec_lut"]], "drop_column() (libics.core.data.sequences.datasequence method)": [[2, "libics.core.data.sequences.DataSequence.drop_column"]], "dtype (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.dtype"]], "find_connected_vertices() (libics.core.data.graphs.directedgraph method)": [[2, "libics.core.data.graphs.DirectedGraph.find_connected_vertices"]], "from_arraydata() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.from_ArrayData"]], "from_cmprarraydata() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.from_CmprArrayData"]], "from_datasequence() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.from_DataSequence"]], "from_array() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.from_array"]], "from_array_data() (libics.core.data.arrays.cmprarraydata method)": [[2, "libics.core.data.arrays.CmprArrayData.from_array_data"]], "from_sequence_table() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.from_sequence_table"]], "get_bins() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_bins"]], "get_center() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_center"]], "get_common_obj() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_common_obj"]], "get_compressed_array_png() (libics.core.data.arrays.cmprarraydata class method)": [[2, "libics.core.data.arrays.CmprArrayData.get_compressed_array_png"]], "get_coordinate_meshgrid() (in module libics.core.data.arrays)": [[2, "libics.core.data.arrays.get_coordinate_meshgrid"]], "get_copy_obj() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_copy_obj"]], "get_decompressed_array_png() (libics.core.data.arrays.cmprarraydata class method)": [[2, "libics.core.data.arrays.CmprArrayData.get_decompressed_array_png"]], "get_edge_number() (libics.core.data.graphs.directedgraph method)": [[2, "libics.core.data.graphs.DirectedGraph.get_edge_number"]], "get_high() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_high"]], "get_low() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_low"]], "get_offset() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_offset"]], "get_points() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_points"]], "get_step() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_step"]], "get_var_meshgrid() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_var_meshgrid"]], "get_var_meshgrid_bins() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.get_var_meshgrid_bins"]], "has_edge() (libics.core.data.graphs.directedgraph method)": [[2, "libics.core.data.graphs.DirectedGraph.has_edge"]], "has_name() (libics.core.data.types.quantity method)": [[2, "libics.core.data.types.Quantity.has_name"]], "hash_combine_ordered() (in module libics.core.data.types)": [[2, "libics.core.data.types.hash_combine_ordered"]], "hash_combine_xor() (in module libics.core.data.types)": [[2, "libics.core.data.types.hash_combine_xor"]], "hash_libics() (in module libics.core.data.types)": [[2, "libics.core.data.types.hash_libics"]], "high (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.high"]], "interpolate() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.interpolate"]], "join() (libics.core.data.sequences.datasequence method)": [[2, "libics.core.data.sequences.DataSequence.join"]], "key_data (libics.core.data.conversion.calibration property)": [[2, "libics.core.data.conversion.Calibration.key_data"]], "key_quantity (libics.core.data.conversion.calibration property)": [[2, "libics.core.data.conversion.Calibration.key_quantity"]], "labelstr() (libics.core.data.types.quantity method)": [[2, "libics.core.data.types.Quantity.labelstr"]], "libics.core.data": [[2, "module-libics.core.data"]], "libics.core.data.arrays": [[2, "module-libics.core.data.arrays"]], "libics.core.data.conversion": [[2, "module-libics.core.data.conversion"]], "libics.core.data.graphs": [[2, "module-libics.core.data.graphs"]], "libics.core.data.sequences": [[2, "module-libics.core.data.sequences"]], "libics.core.data.types": [[2, "module-libics.core.data.types"]], "low (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.low"]], "mathstr() (libics.core.data.types.quantity method)": [[2, "libics.core.data.types.Quantity.mathstr"]], "mathstr() (libics.core.data.types.valquantity method)": [[2, "libics.core.data.types.ValQuantity.mathstr"]], "max() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.max"]], "mean() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.mean"]], "min() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.min"]], "mod_dim() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.mod_dim"]], "move_dim() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.move_dim"]], "ndim (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.ndim"]], "ndim (libics.core.data.arrays.seriesdata property)": [[2, "libics.core.data.arrays.SeriesData.ndim"]], "offset (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.offset"]], "pad() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.pad"]], "points (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.points"]], "rename_column() (libics.core.data.sequences.datasequence method)": [[2, "libics.core.data.sequences.DataSequence.rename_column"]], "reset_index() (libics.core.data.sequences.datasequence method)": [[2, "libics.core.data.sequences.DataSequence.reset_index"]], "rmv_dim() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.rmv_dim"]], "rmv_dim() (libics.core.data.arrays.seriesdata method)": [[2, "libics.core.data.arrays.SeriesData.rmv_dim"]], "set_data_quantity() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.set_data_quantity"]], "set_dim() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.set_dim"]], "set_quantity() (libics.core.data.arrays.seriesdata method)": [[2, "libics.core.data.arrays.SeriesData.set_quantity"]], "set_var_quantity() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.set_var_quantity"]], "shape (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.shape"]], "shape (libics.core.data.arrays.seriesdata property)": [[2, "libics.core.data.arrays.SeriesData.shape"]], "size (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.size"]], "sort_rows() (libics.core.data.sequences.datasequence method)": [[2, "libics.core.data.sequences.DataSequence.sort_rows"]], "std() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.std"]], "step (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.step"]], "sum() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.sum"]], "supersample() (libics.core.data.arrays.arraydata method)": [[2, "libics.core.data.arrays.ArrayData.supersample"]], "to_array_data() (libics.core.data.arrays.cmprarraydata method)": [[2, "libics.core.data.arrays.CmprArrayData.to_array_data"]], "total_ndim (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.total_ndim"]], "total_ndim (libics.core.data.arrays.seriesdata property)": [[2, "libics.core.data.arrays.SeriesData.total_ndim"]], "val_data (libics.core.data.conversion.calibration property)": [[2, "libics.core.data.conversion.Calibration.val_data"]], "val_quantity (libics.core.data.conversion.calibration property)": [[2, "libics.core.data.conversion.Calibration.val_quantity"]], "var_ndim (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.var_ndim"]], "var_shape (libics.core.data.arrays.arraydata property)": [[2, "libics.core.data.arrays.ArrayData.var_shape"]], "vertices() (libics.core.data.graphs.directedgraph method)": [[2, "libics.core.data.graphs.DirectedGraph.vertices"]], "cls_map (libics.core.io.base.objdecoder attribute)": [[3, "libics.core.io.base.ObjDecoder.CLS_MAP"]], "cls_map (libics.core.io.base.objencoder attribute)": [[3, "libics.core.io.base.ObjEncoder.CLS_MAP"]], "filebase (class in libics.core.io.base)": [[3, "libics.core.io.base.FileBase"]], "id_not_special (class in libics.core.io.base)": [[3, "libics.core.io.base.ID_NOT_SPECIAL"]], "numpyjsonencoder (class in libics.core.io.iomisc)": [[3, "libics.core.io.iomisc.NumpyJsonEncoder"]], "objdecoder (class in libics.core.io.base)": [[3, "libics.core.io.base.ObjDecoder"]], "objencoder (class in libics.core.io.base)": [[3, "libics.core.io.base.ObjEncoder"]], "ser_keys (libics.core.io.base.filebase attribute)": [[3, "libics.core.io.base.FileBase.SER_KEYS"]], "attributes() (libics.core.io.base.filebase method)": [[3, "libics.core.io.base.FileBase.attributes"]], "compress_numpy_array_as_png() (in module libics.core.io.image)": [[3, "libics.core.io.image.compress_numpy_array_as_png"]], "decode() (libics.core.io.base.objdecoder class method)": [[3, "libics.core.io.base.ObjDecoder.decode"]], "decompress_numpy_array_from_png() (in module libics.core.io.image)": [[3, "libics.core.io.image.decompress_numpy_array_from_png"]], "default() (libics.core.io.iomisc.numpyjsonencoder method)": [[3, "libics.core.io.iomisc.NumpyJsonEncoder.default"]], "deserialize() (libics.core.io.base.objdecoder class method)": [[3, "libics.core.io.base.ObjDecoder.deserialize"]], "encode() (libics.core.io.base.objencoder class method)": [[3, "libics.core.io.base.ObjEncoder.encode"]], "filter_primitive() (in module libics.core.io.base)": [[3, "libics.core.io.base.filter_primitive"]], "get_class_from_fqname() (in module libics.core.io.base)": [[3, "libics.core.io.base.get_class_from_fqname"]], "get_file_format() (in module libics.core.io.base)": [[3, "libics.core.io.base.get_file_format"]], "get_fqname_from_class() (in module libics.core.io.base)": [[3, "libics.core.io.base.get_fqname_from_class"]], "libics.core.io": [[3, "module-libics.core.io"]], "libics.core.io.base": [[3, "module-libics.core.io.base"]], "libics.core.io.image": [[3, "module-libics.core.io.image"]], "libics.core.io.iomisc": [[3, "module-libics.core.io.iomisc"]], "libics.core.io.trace": [[3, "module-libics.core.io.trace"]], "load() (in module libics.core.io.base)": [[3, "libics.core.io.base.load"]], "load() (libics.core.io.base.filebase method)": [[3, "libics.core.io.base.FileBase.load"]], "load_bmp_to_arraydata() (in module libics.core.io.image)": [[3, "libics.core.io.image.load_bmp_to_arraydata"]], "load_csv_span_agilent_to_arraydata() (in module libics.core.io.trace)": [[3, "libics.core.io.trace.load_csv_span_agilent_to_arraydata"]], "load_png_to_arraydata() (in module libics.core.io.image)": [[3, "libics.core.io.image.load_png_to_arraydata"]], "load_sif_to_arraydata() (in module libics.core.io.image)": [[3, "libics.core.io.image.load_sif_to_arraydata"]], "load_tif_to_arraydata() (in module libics.core.io.image)": [[3, "libics.core.io.image.load_tif_to_arraydata"]], "load_txt_span_numpy_to_arraydata() (in module libics.core.io.trace)": [[3, "libics.core.io.trace.load_txt_span_numpy_to_arraydata"]], "load_wct_to_arraydata() (in module libics.core.io.image)": [[3, "libics.core.io.image.load_wct_to_arraydata"]], "save() (in module libics.core.io.base)": [[3, "libics.core.io.base.save"]], "save() (libics.core.io.base.filebase method)": [[3, "libics.core.io.base.FileBase.save"]], "serialize() (libics.core.io.base.objencoder class method)": [[3, "libics.core.io.base.ObjEncoder.serialize"]], "type_is_primitive() (in module libics.core.io.base)": [[3, "libics.core.io.base.type_is_primitive"]], "foldercontentsresult (class in libics.core.util.path)": [[4, "libics.core.util.path.FolderContentsResult"]], "memoize (class in libics.core.util.func)": [[4, "libics.core.util.func.Memoize"]], "periodictimer (class in libics.core.util.func)": [[4, "libics.core.util.func.PeriodicTimer"]], "stoppablethread (class in libics.core.util.func)": [[4, "libics.core.util.func.StoppableThread"]], "assume_construct_obj() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.assume_construct_obj"]], "assume_dir() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.assume_dir"]], "assume_endswith() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.assume_endswith"]], "assume_even_int() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.assume_even_int"]], "assume_file_exists() (in module libics.core.util.path)": [[4, "libics.core.util.path.assume_file_exists"]], "assume_iter() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.assume_iter"]], "assume_list() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.assume_list"]], "assume_numpy_array() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.assume_numpy_array"]], "assume_odd_int() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.assume_odd_int"]], "assume_startswith() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.assume_startswith"]], "assume_tuple() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.assume_tuple"]], "capitalize_first_char() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.capitalize_first_char"]], "char_range() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.char_range"]], "cv_array_points_to_bins() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_array_points_to_bins"]], "cv_bitfield() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_bitfield"]], "cv_camel_to_snake_case() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_camel_to_snake_case"]], "cv_coord_spherical_to_cartesian() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_coord_spherical_to_cartesian"]], "cv_datetime() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_datetime"]], "cv_float() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_float"]], "cv_index_center_to_rect() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_index_center_to_rect"]], "cv_index_center_to_slice() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_index_center_to_slice"]], "cv_index_ellipsis() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_index_ellipsis"]], "cv_index_mask_to_rect() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_index_mask_to_rect"]], "cv_index_rect_to_slice() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_index_rect_to_slice"]], "cv_iter_to_str() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_iter_to_str"]], "cv_timestamp() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.cv_timestamp"]], "do_nothing() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.do_nothing"]], "extract() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.extract"]], "extract_index_nonunique_array() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.extract_index_nonunique_array"]], "files (libics.core.util.path.foldercontentsresult property)": [[4, "libics.core.util.path.FolderContentsResult.files"]], "flatten_nested_dict() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.flatten_nested_dict"]], "flatten_nested_list() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.flatten_nested_list"]], "folders (libics.core.util.path.foldercontentsresult property)": [[4, "libics.core.util.path.FolderContentsResult.folders"]], "generate_fill_chars() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.generate_fill_chars"]], "get_combinations() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.get_combinations"]], "get_first_elem_iter() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.get_first_elem_iter"]], "get_folder_contents() (in module libics.core.util.path)": [[4, "libics.core.util.path.get_folder_contents"]], "get_function() (libics.core.util.func.periodictimer method)": [[4, "libics.core.util.func.PeriodicTimer.get_function"]], "get_numpy_array_index() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.get_numpy_array_index"]], "get_numpy_dtype_str() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.get_numpy_dtype_str"]], "get_period() (libics.core.util.func.periodictimer method)": [[4, "libics.core.util.func.PeriodicTimer.get_period"]], "get_regex_number() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.get_regex_number"]], "get_si_prefix() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.get_si_prefix"]], "hex_positive() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.hex_positive"]], "id_dict() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.id_dict"]], "is_alive() (libics.core.util.func.periodictimer method)": [[4, "libics.core.util.func.PeriodicTimer.is_alive"]], "is_datetime() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.is_datetime"]], "is_iter() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.is_iter"]], "is_number() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.is_number"]], "iter_progress() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.iter_progress"]], "libics.core.util": [[4, "module-libics.core.util"]], "libics.core.util.func": [[4, "module-libics.core.util.func"]], "libics.core.util.misc": [[4, "module-libics.core.util.misc"]], "libics.core.util.path": [[4, "module-libics.core.util.path"]], "make_dict() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.make_dict"]], "make_getitem_func() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.make_getitem_func"]], "map_dicts() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.map_dicts"]], "nest_flattened_dict() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.nest_flattened_dict"]], "order_list() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.order_list"]], "print_progress() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.print_progress"]], "rename_dict_keys() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.rename_dict_keys"]], "resize_numpy_array() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.resize_numpy_array"]], "ret_id() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.ret_id"]], "reverse_dict() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.reverse_dict"]], "run() (libics.core.util.func.periodictimer method)": [[4, "libics.core.util.func.PeriodicTimer.run"]], "set_args() (libics.core.util.func.periodictimer method)": [[4, "libics.core.util.func.PeriodicTimer.set_args"]], "set_stop_action() (libics.core.util.func.periodictimer method)": [[4, "libics.core.util.func.PeriodicTimer.set_stop_action"]], "split_strip() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.split_strip"]], "split_unit() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.split_unit"]], "start() (libics.core.util.func.periodictimer method)": [[4, "libics.core.util.func.PeriodicTimer.start"]], "stop() (libics.core.util.func.periodictimer method)": [[4, "libics.core.util.func.PeriodicTimer.stop"]], "stop() (libics.core.util.func.stoppablethread method)": [[4, "libics.core.util.func.StoppableThread.stop"]], "str_si_prefix() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.str_si_prefix"]], "transpose_array() (in module libics.core.util.misc)": [[4, "libics.core.util.misc.transpose_array"]], "assume_config_item() (in module libics.env)": [[5, "libics.env.ASSUME_CONFIG_ITEM"]], "assume_dir() (in module libics.env)": [[5, "libics.env.ASSUME_DIR"]], "assume_file() (in module libics.env)": [[5, "libics.env.ASSUME_FILE"]], "colors (libics.env.logging.colorformatter attribute)": [[5, "libics.env.logging.ColorFormatter.COLORS"]], "colorformatter (class in libics.env.logging)": [[5, "libics.env.logging.ColorFormatter"]], "maxfilter (class in libics.env.logging)": [[5, "libics.env.logging.MaxFilter"]], "read_json() (in module libics.env)": [[5, "libics.env.READ_JSON"]], "write_config() (in module libics.env)": [[5, "libics.env.WRITE_CONFIG"]], "write_json() (in module libics.env)": [[5, "libics.env.WRITE_JSON"]], "add_to_sys_path() (in module libics.env.system)": [[5, "libics.env.system.add_to_sys_path"]], "filter() (libics.env.logging.maxfilter method)": [[5, "libics.env.logging.MaxFilter.filter"]], "format() (libics.env.logging.colorformatter method)": [[5, "libics.env.logging.ColorFormatter.format"]], "get_logger() (in module libics.env.logging)": [[5, "libics.env.logging.get_logger"]], "libics.env": [[5, "module-libics.env"]], "libics.env.constants": [[5, "module-libics.env.constants"]], "libics.env.logging": [[5, "module-libics.env.logging"]], "libics.env.system": [[5, "module-libics.env.system"]], "libics.tools": [[6, "module-libics.tools"]], "arraycontrolloop (class in libics.tools.control.pid)": [[7, "libics.tools.control.pid.ArrayControlLoop"]], "imagecontrolloop (in module libics.tools.control.pid)": [[7, "libics.tools.control.pid.ImageControlLoop"]], "kalmanfilter (class in libics.tools.control.kalman)": [[7, "libics.tools.control.kalman.KalmanFilter"]], "logger (libics.tools.control.pid.arraycontrolloop attribute)": [[7, "libics.tools.control.pid.ArrayControlLoop.LOGGER"]], "act_images (libics.tools.control.pid.arraycontrolloop property)": [[7, "libics.tools.control.pid.ArrayControlLoop.act_images"]], "add_ctrl_step() (libics.tools.control.pid.arraycontrolloop method)": [[7, "libics.tools.control.pid.ArrayControlLoop.add_ctrl_step"]], "add_observation() (libics.tools.control.kalman.kalmanfilter method)": [[7, "libics.tools.control.kalman.KalmanFilter.add_observation"]], "control_model (libics.tools.control.kalman.kalmanfilter property)": [[7, "libics.tools.control.kalman.KalmanFilter.control_model"]], "ctrl_images (libics.tools.control.pid.arraycontrolloop property)": [[7, "libics.tools.control.pid.ArrayControlLoop.ctrl_images"]], "dif_images (libics.tools.control.pid.arraycontrolloop property)": [[7, "libics.tools.control.pid.ArrayControlLoop.dif_images"]], "err_images (libics.tools.control.pid.arraycontrolloop property)": [[7, "libics.tools.control.pid.ArrayControlLoop.err_images"]], "get_ctrl_image() (in module libics.tools.control.pid)": [[7, "libics.tools.control.pid.get_ctrl_image"]], "get_ctrl_kernel() (libics.tools.control.pid.arraycontrolloop method)": [[7, "libics.tools.control.pid.ArrayControlLoop.get_ctrl_kernel"]], "get_dif_image() (in module libics.tools.control.pid)": [[7, "libics.tools.control.pid.get_dif_image"]], "get_err_image() (in module libics.tools.control.pid)": [[7, "libics.tools.control.pid.get_err_image"]], "libics.tools.control": [[7, "module-libics.tools.control"]], "libics.tools.control.kalman": [[7, "module-libics.tools.control.kalman"]], "libics.tools.control.pid": [[7, "module-libics.tools.control.pid"]], "observation_covariance (libics.tools.control.kalman.kalmanfilter property)": [[7, "libics.tools.control.kalman.KalmanFilter.observation_covariance"]], "observation_model (libics.tools.control.kalman.kalmanfilter property)": [[7, "libics.tools.control.kalman.KalmanFilter.observation_model"]], "process_covariance (libics.tools.control.kalman.kalmanfilter property)": [[7, "libics.tools.control.kalman.KalmanFilter.process_covariance"]], "process_model (libics.tools.control.kalman.kalmanfilter property)": [[7, "libics.tools.control.kalman.KalmanFilter.process_model"]], "remove_steps() (libics.tools.control.pid.arraycontrolloop method)": [[7, "libics.tools.control.pid.ArrayControlLoop.remove_steps"]], "set_ctrl_kernel() (libics.tools.control.pid.arraycontrolloop method)": [[7, "libics.tools.control.pid.ArrayControlLoop.set_ctrl_kernel"]], "state_covariances (libics.tools.control.kalman.kalmanfilter property)": [[7, "libics.tools.control.kalman.KalmanFilter.state_covariances"]], "state_estimates (libics.tools.control.kalman.kalmanfilter property)": [[7, "libics.tools.control.kalman.KalmanFilter.state_estimates"]], "state_observations (libics.tools.control.kalman.kalmanfilter property)": [[7, "libics.tools.control.kalman.KalmanFilter.state_observations"]], "trg_image (libics.tools.control.pid.arraycontrolloop property)": [[7, "libics.tools.control.pid.ArrayControlLoop.trg_image"]], "trg_images (libics.tools.control.pid.arraycontrolloop property)": [[7, "libics.tools.control.pid.ArrayControlLoop.trg_images"]], "api (libics.tools.database.amqp.amqprpcbase attribute)": [[8, "libics.tools.database.amqp.AmqpRpcBase.API"]], "api_id (libics.tools.database.amqp.amqpapibase attribute)": [[8, "libics.tools.database.amqp.AmqpApiBase.API_ID"]], "api_methods (libics.tools.database.amqp.amqpapibase attribute)": [[8, "libics.tools.database.amqp.AmqpApiBase.API_METHODS"]], "api_replies (libics.tools.database.amqp.amqpapibase attribute)": [[8, "libics.tools.database.amqp.AmqpApiBase.API_REPLIES"]], "api_sub_id (libics.tools.database.amqp.amqpapibase attribute)": [[8, "libics.tools.database.amqp.AmqpApiBase.API_SUB_ID"]], "api_timeouts (libics.tools.database.amqp.amqpapibase attribute)": [[8, "libics.tools.database.amqp.AmqpApiBase.API_TIMEOUTS"]], "api_version (libics.tools.database.amqp.amqpapibase attribute)": [[8, "libics.tools.database.amqp.AmqpApiBase.API_VERSION"]], "amqpapibase (class in libics.tools.database.amqp)": [[8, "libics.tools.database.amqp.AmqpApiBase"]], "amqpconnection (class in libics.tools.database.amqp)": [[8, "libics.tools.database.amqp.AmqpConnection"]], "amqplocalerror": [[8, "libics.tools.database.amqp.AmqpLocalError"]], "amqpremoteerror": [[8, "libics.tools.database.amqp.AmqpRemoteError"]], "amqpreplytimeouterror": [[8, "libics.tools.database.amqp.AmqpReplyTimeoutError"]], "amqprpcbase (class in libics.tools.database.amqp)": [[8, "libics.tools.database.amqp.AmqpRpcBase"]], "amqprpcfactory (class in libics.tools.database.amqp)": [[8, "libics.tools.database.amqp.AmqpRpcFactory"]], "config_path (libics.tools.database.amqp.amqpconnection attribute)": [[8, "libics.tools.database.amqp.AmqpConnection.CONFIG_PATH"]], "config_path (libics.tools.database.influx.influxdb attribute)": [[8, "libics.tools.database.influx.InfluxDB.CONFIG_PATH"]], "influxdb (class in libics.tools.database.influx)": [[8, "libics.tools.database.influx.InfluxDB"]], "logger (libics.tools.database.amqp.amqpapibase attribute)": [[8, "libics.tools.database.amqp.AmqpApiBase.LOGGER"]], "logger (libics.tools.database.amqp.amqpconnection attribute)": [[8, "libics.tools.database.amqp.AmqpConnection.LOGGER"]], "logger (libics.tools.database.influx.influxdb attribute)": [[8, "libics.tools.database.influx.InfluxDB.LOGGER"]], "rpc_version (libics.tools.database.amqp.amqprpcbase attribute)": [[8, "libics.tools.database.amqp.AmqpRpcBase.RPC_VERSION"]], "api_method() (in module libics.tools.database.amqp)": [[8, "libics.tools.database.amqp.api_method"]], "buckets (libics.tools.database.influx.influxdb property)": [[8, "libics.tools.database.influx.InfluxDB.buckets"]], "close() (libics.tools.database.amqp.amqpconnection method)": [[8, "libics.tools.database.amqp.AmqpConnection.close"]], "close_amqp() (libics.tools.database.amqp.amqprpcbase method)": [[8, "libics.tools.database.amqp.AmqpRpcBase.close_amqp"]], "connect() (libics.tools.database.amqp.amqpconnection method)": [[8, "libics.tools.database.amqp.AmqpConnection.connect"]], "connect_amqp() (libics.tools.database.amqp.amqprpcbase method)": [[8, "libics.tools.database.amqp.AmqpRpcBase.connect_amqp"]], "create_bucket() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.create_bucket"]], "credentials (libics.tools.database.amqp.amqpconnection property)": [[8, "libics.tools.database.amqp.AmqpConnection.credentials"]], "default_bucket (libics.tools.database.influx.influxdb property)": [[8, "libics.tools.database.influx.InfluxDB.default_bucket"]], "default_measurement (libics.tools.database.influx.influxdb property)": [[8, "libics.tools.database.influx.InfluxDB.default_measurement"]], "deserialize_reply() (libics.tools.database.amqp.amqprpcbase class method)": [[8, "libics.tools.database.amqp.AmqpRpcBase.deserialize_reply"]], "deserialize_request() (libics.tools.database.amqp.amqprpcbase class method)": [[8, "libics.tools.database.amqp.AmqpRpcBase.deserialize_request"]], "discover_configs() (libics.tools.database.amqp.amqpconnection static method)": [[8, "libics.tools.database.amqp.AmqpConnection.discover_configs"]], "fields (libics.tools.database.influx.influxdb property)": [[8, "libics.tools.database.influx.InfluxDB.fields"]], "find_configs() (libics.tools.database.amqp.amqpconnection static method)": [[8, "libics.tools.database.amqp.AmqpConnection.find_configs"]], "find_configs() (libics.tools.database.influx.influxdb static method)": [[8, "libics.tools.database.influx.InfluxDB.find_configs"]], "get_api() (libics.tools.database.amqp.amqpapibase method)": [[8, "libics.tools.database.amqp.AmqpApiBase.get_api"]], "get_api_signature() (libics.tools.database.amqp.amqpapibase method)": [[8, "libics.tools.database.amqp.AmqpApiBase.get_api_signature"]], "get_api_specifications() (libics.tools.database.amqp.amqpapibase method)": [[8, "libics.tools.database.amqp.AmqpApiBase.get_api_specifications"]], "get_exchange_id() (libics.tools.database.amqp.amqpapibase class method)": [[8, "libics.tools.database.amqp.AmqpApiBase.get_exchange_id"]], "get_queue_id() (libics.tools.database.amqp.amqpapibase method)": [[8, "libics.tools.database.amqp.AmqpApiBase.get_queue_id"]], "get_routing_key() (libics.tools.database.amqp.amqpapibase method)": [[8, "libics.tools.database.amqp.AmqpApiBase.get_routing_key"]], "get_url() (libics.tools.database.amqp.amqpconnection method)": [[8, "libics.tools.database.amqp.AmqpConnection.get_url"]], "handle_error() (libics.tools.database.amqp.amqpconnection method)": [[8, "libics.tools.database.amqp.AmqpConnection.handle_error"]], "help() (libics.tools.database.amqp.amqpapibase method)": [[8, "libics.tools.database.amqp.AmqpApiBase.help"]], "is_connected() (libics.tools.database.amqp.amqpconnection method)": [[8, "libics.tools.database.amqp.AmqpConnection.is_connected"]], "is_running() (libics.tools.database.amqp.amqpconnection method)": [[8, "libics.tools.database.amqp.AmqpConnection.is_running"]], "join() (libics.tools.database.amqp.amqpconnection method)": [[8, "libics.tools.database.amqp.AmqpConnection.join"]], "libics.tools.database": [[8, "module-libics.tools.database"]], "libics.tools.database.amqp": [[8, "module-libics.tools.database.amqp"]], "libics.tools.database.influx": [[8, "module-libics.tools.database.influx"]], "local_dispatcher() (libics.tools.database.amqp.amqprpcbase method)": [[8, "libics.tools.database.amqp.AmqpRpcBase.local_dispatcher"]], "make_dynamic_rpc_client() (libics.tools.database.amqp.amqprpcfactory class method)": [[8, "libics.tools.database.amqp.AmqpRpcFactory.make_dynamic_rpc_client"]], "make_rpc_client() (libics.tools.database.amqp.amqprpcfactory class method)": [[8, "libics.tools.database.amqp.AmqpRpcFactory.make_rpc_client"]], "make_rpc_server() (libics.tools.database.amqp.amqprpcfactory class method)": [[8, "libics.tools.database.amqp.AmqpRpcFactory.make_rpc_server"]], "measurements (libics.tools.database.influx.influxdb property)": [[8, "libics.tools.database.influx.InfluxDB.measurements"]], "ping() (libics.tools.database.amqp.amqpapibase method)": [[8, "libics.tools.database.amqp.AmqpApiBase.ping"]], "ping_args() (libics.tools.database.amqp.amqpapibase method)": [[8, "libics.tools.database.amqp.AmqpApiBase.ping_args"]], "read_last_points() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.read_last_points"]], "read_measurement_values() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.read_measurement_values"]], "read_points() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.read_points"]], "read_tag_values() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.read_tag_values"]], "register_cb_on_entry() (libics.tools.database.amqp.amqpapibase method)": [[8, "libics.tools.database.amqp.AmqpApiBase.register_cb_on_entry"]], "register_cb_on_exit() (libics.tools.database.amqp.amqpapibase method)": [[8, "libics.tools.database.amqp.AmqpApiBase.register_cb_on_exit"]], "remote_dispatcher() (libics.tools.database.amqp.amqprpcbase method)": [[8, "libics.tools.database.amqp.AmqpRpcBase.remote_dispatcher"]], "run() (libics.tools.database.amqp.amqpconnection method)": [[8, "libics.tools.database.amqp.AmqpConnection.run"]], "serialize_reply() (libics.tools.database.amqp.amqprpcbase class method)": [[8, "libics.tools.database.amqp.AmqpRpcBase.serialize_reply"]], "serialize_request() (libics.tools.database.amqp.amqprpcbase class method)": [[8, "libics.tools.database.amqp.AmqpRpcBase.serialize_request"]], "setup_amqp() (libics.tools.database.amqp.amqprpcbase method)": [[8, "libics.tools.database.amqp.AmqpRpcBase.setup_amqp"]], "setup_api() (libics.tools.database.amqp.amqprpcbase method)": [[8, "libics.tools.database.amqp.AmqpRpcBase.setup_api"]], "stop() (libics.tools.database.amqp.amqpconnection method)": [[8, "libics.tools.database.amqp.AmqpConnection.stop"]], "tags (libics.tools.database.influx.influxdb property)": [[8, "libics.tools.database.influx.InfluxDB.tags"]], "update_buckets() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.update_buckets"]], "update_fields() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.update_fields"]], "update_measurements() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.update_measurements"]], "update_tags() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.update_tags"]], "url (libics.tools.database.influx.influxdb property)": [[8, "libics.tools.database.influx.InfluxDB.url"]], "write_point() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.write_point"]], "write_points() (libics.tools.database.influx.influxdb method)": [[8, "libics.tools.database.influx.InfluxDB.write_points"]], "distribution (libics.tools.math.peaked.fitgaussian1d attribute)": [[9, "libics.tools.math.peaked.FitGaussian1d.DISTRIBUTION"]], "distribution (libics.tools.math.peaked.fitskewgaussian1d attribute)": [[9, "libics.tools.math.peaked.FitSkewGaussian1d.DISTRIBUTION"]], "distribution (libics.tools.math.peaked.fitsymexponential1d attribute)": [[9, "libics.tools.math.peaked.FitSymExponential1d.DISTRIBUTION"]], "diagonalizablels (class in libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.DiagonalizableLS"]], "fitairydisk2d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitAiryDisk2d"]], "fitbmgaussianparabolic1dint2d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic1dInt2d"]], "fitbmgaussianparabolic2dint1dtilt (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic2dInt1dTilt"]], "fitcosine1d (class in libics.tools.math.flat)": [[9, "libics.tools.math.flat.FitCosine1d"]], "fitcosine2d (class in libics.tools.math.flat)": [[9, "libics.tools.math.flat.FitCosine2d"]], "fiterrorfunction (class in libics.tools.math.flat)": [[9, "libics.tools.math.flat.FitErrorFunction"]], "fitexponential1d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitExponential1d"]], "fitexponentialdecay1d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitExponentialDecay1d"]], "fitgaussian1d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitGaussian1d"]], "fitgaussian2dtilt (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitGaussian2dTilt"]], "fitlinear1d (class in libics.tools.math.flat)": [[9, "libics.tools.math.flat.FitLinear1d"]], "fitlinearstepfunction (class in libics.tools.math.flat)": [[9, "libics.tools.math.flat.FitLinearStepFunction"]], "fitlorentzian1dabs (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitLorentzian1dAbs"]], "fitlorentzianeit1dimag (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag"]], "fitlorentzianrydeit1dimag (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitLorentzianRydEit1dImag"]], "fitparabolic1d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitParabolic1d"]], "fitparabolic1dint2d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitParabolic1dInt2d"]], "fitparabolic2dint1dtilt (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitParabolic2dInt1dTilt"]], "fitpowerlaw1d (class in libics.tools.math.flat)": [[9, "libics.tools.math.flat.FitPowerLaw1d"]], "fitpowerlaw1dcenter (class in libics.tools.math.flat)": [[9, "libics.tools.math.flat.FitPowerLaw1dCenter"]], "fitskewgaussian1d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitSkewGaussian1d"]], "fitsymexponential1d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.FitSymExponential1d"]], "hermitianls (class in libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.HermitianLS"]], "intervalseries (class in libics.tools.math.intervalfunc)": [[9, "libics.tools.math.intervalfunc.IntervalSeries"]], "keys (libics.tools.math.intervalfunc.intervalseries attribute)": [[9, "libics.tools.math.intervalfunc.IntervalSeries.KEYS"]], "logger (libics.tools.math.flat.fitcosine1d attribute)": [[9, "libics.tools.math.flat.FitCosine1d.LOGGER"]], "logger (libics.tools.math.flat.fitcosine2d attribute)": [[9, "libics.tools.math.flat.FitCosine2d.LOGGER"]], "logger (libics.tools.math.flat.fiterrorfunction attribute)": [[9, "libics.tools.math.flat.FitErrorFunction.LOGGER"]], "logger (libics.tools.math.flat.fitlinear1d attribute)": [[9, "libics.tools.math.flat.FitLinear1d.LOGGER"]], "logger (libics.tools.math.flat.fitlinearstepfunction attribute)": [[9, "libics.tools.math.flat.FitLinearStepFunction.LOGGER"]], "logger (libics.tools.math.flat.fitpowerlaw1d attribute)": [[9, "libics.tools.math.flat.FitPowerLaw1d.LOGGER"]], "logger (libics.tools.math.flat.fitpowerlaw1dcenter attribute)": [[9, "libics.tools.math.flat.FitPowerLaw1dCenter.LOGGER"]], "logger (libics.tools.math.models.modelbase attribute)": [[9, "libics.tools.math.models.ModelBase.LOGGER"]], "logger (libics.tools.math.models.rvcontinuous attribute)": [[9, "libics.tools.math.models.RvContinuous.LOGGER"]], "logger (libics.tools.math.models.tensormodelbase attribute)": [[9, "libics.tools.math.models.TensorModelBase.LOGGER"]], "logger (libics.tools.math.peaked.fitairydisk2d attribute)": [[9, "libics.tools.math.peaked.FitAiryDisk2d.LOGGER"]], "logger (libics.tools.math.peaked.fitbmgaussianparabolic1dint2d attribute)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic1dInt2d.LOGGER"]], "logger (libics.tools.math.peaked.fitbmgaussianparabolic2dint1dtilt attribute)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic2dInt1dTilt.LOGGER"]], "logger (libics.tools.math.peaked.fitexponential1d attribute)": [[9, "libics.tools.math.peaked.FitExponential1d.LOGGER"]], "logger (libics.tools.math.peaked.fitgaussian1d attribute)": [[9, "libics.tools.math.peaked.FitGaussian1d.LOGGER"]], "logger (libics.tools.math.peaked.fitgaussian2dtilt attribute)": [[9, "libics.tools.math.peaked.FitGaussian2dTilt.LOGGER"]], "logger (libics.tools.math.peaked.fitlorentzian1dabs attribute)": [[9, "libics.tools.math.peaked.FitLorentzian1dAbs.LOGGER"]], "logger (libics.tools.math.peaked.fitlorentzianeit1dimag attribute)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.LOGGER"]], "logger (libics.tools.math.peaked.fitlorentzianrydeit1dimag attribute)": [[9, "libics.tools.math.peaked.FitLorentzianRydEit1dImag.LOGGER"]], "logger (libics.tools.math.peaked.fitparabolic1d attribute)": [[9, "libics.tools.math.peaked.FitParabolic1d.LOGGER"]], "logger (libics.tools.math.peaked.fitparabolic1dint2d attribute)": [[9, "libics.tools.math.peaked.FitParabolic1dInt2d.LOGGER"]], "logger (libics.tools.math.peaked.fitparabolic2dint1dtilt attribute)": [[9, "libics.tools.math.peaked.FitParabolic2dInt1dTilt.LOGGER"]], "logger (libics.tools.math.peaked.fitskewgaussian1d attribute)": [[9, "libics.tools.math.peaked.FitSkewGaussian1d.LOGGER"]], "logger (libics.tools.math.peaked.fitsymexponential1d attribute)": [[9, "libics.tools.math.peaked.FitSymExponential1d.LOGGER"]], "logger (libics.tools.math.signal.peakinfo attribute)": [[9, "libics.tools.math.signal.PeakInfo.LOGGER"]], "linearsystem (class in libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.LinearSystem"]], "modelbase (class in libics.tools.math.models)": [[9, "libics.tools.math.models.ModelBase"]], "modelfromarray() (in module libics.tools.math.models)": [[9, "libics.tools.math.models.ModelFromArray"]], "p_all (libics.tools.math.flat.fitcosine1d attribute)": [[9, "libics.tools.math.flat.FitCosine1d.P_ALL"]], "p_all (libics.tools.math.flat.fitcosine2d attribute)": [[9, "libics.tools.math.flat.FitCosine2d.P_ALL"]], "p_all (libics.tools.math.flat.fiterrorfunction attribute)": [[9, "libics.tools.math.flat.FitErrorFunction.P_ALL"]], "p_all (libics.tools.math.flat.fitlinear1d attribute)": [[9, "libics.tools.math.flat.FitLinear1d.P_ALL"]], "p_all (libics.tools.math.flat.fitlinearstepfunction attribute)": [[9, "libics.tools.math.flat.FitLinearStepFunction.P_ALL"]], "p_all (libics.tools.math.flat.fitpowerlaw1d attribute)": [[9, "libics.tools.math.flat.FitPowerLaw1d.P_ALL"]], "p_all (libics.tools.math.flat.fitpowerlaw1dcenter attribute)": [[9, "libics.tools.math.flat.FitPowerLaw1dCenter.P_ALL"]], "p_all (libics.tools.math.models.modelbase attribute)": [[9, "libics.tools.math.models.ModelBase.P_ALL"]], "p_all (libics.tools.math.peaked.fitairydisk2d attribute)": [[9, "libics.tools.math.peaked.FitAiryDisk2d.P_ALL"]], "p_all (libics.tools.math.peaked.fitbmgaussianparabolic1dint2d attribute)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic1dInt2d.P_ALL"]], "p_all (libics.tools.math.peaked.fitbmgaussianparabolic2dint1dtilt attribute)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic2dInt1dTilt.P_ALL"]], "p_all (libics.tools.math.peaked.fitexponential1d attribute)": [[9, "libics.tools.math.peaked.FitExponential1d.P_ALL"]], "p_all (libics.tools.math.peaked.fitgaussian1d attribute)": [[9, "libics.tools.math.peaked.FitGaussian1d.P_ALL"]], "p_all (libics.tools.math.peaked.fitgaussian2dtilt attribute)": [[9, "libics.tools.math.peaked.FitGaussian2dTilt.P_ALL"]], "p_all (libics.tools.math.peaked.fitlorentzian1dabs attribute)": [[9, "libics.tools.math.peaked.FitLorentzian1dAbs.P_ALL"]], "p_all (libics.tools.math.peaked.fitlorentzianeit1dimag attribute)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.P_ALL"]], "p_all (libics.tools.math.peaked.fitlorentzianrydeit1dimag attribute)": [[9, "libics.tools.math.peaked.FitLorentzianRydEit1dImag.P_ALL"]], "p_all (libics.tools.math.peaked.fitparabolic1d attribute)": [[9, "libics.tools.math.peaked.FitParabolic1d.P_ALL"]], "p_all (libics.tools.math.peaked.fitparabolic1dint2d attribute)": [[9, "libics.tools.math.peaked.FitParabolic1dInt2d.P_ALL"]], "p_all (libics.tools.math.peaked.fitparabolic2dint1dtilt attribute)": [[9, "libics.tools.math.peaked.FitParabolic2dInt1dTilt.P_ALL"]], "p_all (libics.tools.math.peaked.fitskewgaussian1d attribute)": [[9, "libics.tools.math.peaked.FitSkewGaussian1d.P_ALL"]], "p_all (libics.tools.math.peaked.fitsymexponential1d attribute)": [[9, "libics.tools.math.peaked.FitSymExponential1d.P_ALL"]], "p_default (libics.tools.math.flat.fitcosine1d attribute)": [[9, "libics.tools.math.flat.FitCosine1d.P_DEFAULT"]], "p_default (libics.tools.math.flat.fitcosine2d attribute)": [[9, "libics.tools.math.flat.FitCosine2d.P_DEFAULT"]], "p_default (libics.tools.math.flat.fiterrorfunction attribute)": [[9, "libics.tools.math.flat.FitErrorFunction.P_DEFAULT"]], "p_default (libics.tools.math.flat.fitlinear1d attribute)": [[9, "libics.tools.math.flat.FitLinear1d.P_DEFAULT"]], "p_default (libics.tools.math.flat.fitlinearstepfunction attribute)": [[9, "libics.tools.math.flat.FitLinearStepFunction.P_DEFAULT"]], "p_default (libics.tools.math.flat.fitpowerlaw1d attribute)": [[9, "libics.tools.math.flat.FitPowerLaw1d.P_DEFAULT"]], "p_default (libics.tools.math.flat.fitpowerlaw1dcenter attribute)": [[9, "libics.tools.math.flat.FitPowerLaw1dCenter.P_DEFAULT"]], "p_default (libics.tools.math.models.modelbase attribute)": [[9, "libics.tools.math.models.ModelBase.P_DEFAULT"]], "p_default (libics.tools.math.models.tensormodelbase attribute)": [[9, "libics.tools.math.models.TensorModelBase.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitairydisk2d attribute)": [[9, "libics.tools.math.peaked.FitAiryDisk2d.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitbmgaussianparabolic1dint2d attribute)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic1dInt2d.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitbmgaussianparabolic2dint1dtilt attribute)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic2dInt1dTilt.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitexponential1d attribute)": [[9, "libics.tools.math.peaked.FitExponential1d.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitgaussian1d attribute)": [[9, "libics.tools.math.peaked.FitGaussian1d.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitgaussian2dtilt attribute)": [[9, "libics.tools.math.peaked.FitGaussian2dTilt.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitlorentzian1dabs attribute)": [[9, "libics.tools.math.peaked.FitLorentzian1dAbs.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitlorentzianeit1dimag attribute)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitlorentzianrydeit1dimag attribute)": [[9, "libics.tools.math.peaked.FitLorentzianRydEit1dImag.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitparabolic1d attribute)": [[9, "libics.tools.math.peaked.FitParabolic1d.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitparabolic1dint2d attribute)": [[9, "libics.tools.math.peaked.FitParabolic1dInt2d.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitparabolic2dint1dtilt attribute)": [[9, "libics.tools.math.peaked.FitParabolic2dInt1dTilt.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitskewgaussian1d attribute)": [[9, "libics.tools.math.peaked.FitSkewGaussian1d.P_DEFAULT"]], "p_default (libics.tools.math.peaked.fitsymexponential1d attribute)": [[9, "libics.tools.math.peaked.FitSymExponential1d.P_DEFAULT"]], "p_scal (libics.tools.math.models.tensormodelbase attribute)": [[9, "libics.tools.math.models.TensorModelBase.P_SCAL"]], "p_tens (libics.tools.math.models.tensormodelbase attribute)": [[9, "libics.tools.math.models.TensorModelBase.P_TENS"]], "p_vect (libics.tools.math.models.tensormodelbase attribute)": [[9, "libics.tools.math.models.TensorModelBase.P_VECT"]], "peakinfo (class in libics.tools.math.signal)": [[9, "libics.tools.math.signal.PeakInfo"]], "rnddscballistic1d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.RndDscBallistic1d"]], "rnddscblochosc1d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.RndDscBlochOsc1d"]], "rnddscdiffusive1d (class in libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.RndDscDiffusive1d"]], "rvcontinuous (class in libics.tools.math.models)": [[9, "libics.tools.math.models.RvContinuous"]], "rvcontinuousfrozen (class in libics.tools.math.models)": [[9, "libics.tools.math.models.RvContinuousFrozen"]], "ser_keys (libics.tools.math.models.modelbase attribute)": [[9, "libics.tools.math.models.ModelBase.SER_KEYS"]], "ser_keys (libics.tools.math.signal.peakinfo attribute)": [[9, "libics.tools.math.signal.PeakInfo.SER_KEYS"]], "symmetricls (class in libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.SymmetricLS"]], "tensormodelbase (class in libics.tools.math.models)": [[9, "libics.tools.math.models.TensorModelBase"]], "airy_disk_2d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.airy_disk_2d"]], "amplitude() (libics.tools.math.models.rvcontinuous method)": [[9, "libics.tools.math.models.RvContinuous.amplitude"]], "analyze_single_peak() (in module libics.tools.math.signal)": [[9, "libics.tools.math.signal.analyze_single_peak"]], "angle (libics.tools.math.flat.fitcosine2d property)": [[9, "libics.tools.math.flat.FitCosine2d.angle"]], "angle_std (libics.tools.math.flat.fitcosine2d property)": [[9, "libics.tools.math.flat.FitCosine2d.angle_std"]], "append() (libics.tools.math.intervalfunc.intervalseries method)": [[9, "libics.tools.math.intervalfunc.IntervalSeries.append"]], "assume_func() (in module libics.tools.math.intervalfunc)": [[9, "libics.tools.math.intervalfunc.assume_func"]], "bm_gaussian_parabolic_1d_int2d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.bm_gaussian_parabolic_1d_int2d"]], "bm_gaussian_parabolic_2d_int1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.bm_gaussian_parabolic_2d_int1d"]], "calc_eigensystem() (libics.tools.math.tensor.diagonalizablels method)": [[9, "libics.tools.math.tensor.DiagonalizableLS.calc_eigensystem"]], "calc_eigensystem() (libics.tools.math.tensor.hermitianls method)": [[9, "libics.tools.math.tensor.HermitianLS.calc_eigensystem"]], "calc_eigensystem() (libics.tools.math.tensor.symmetricls method)": [[9, "libics.tools.math.tensor.SymmetricLS.calc_eigensystem"]], "calc_op_outer() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.calc_op_outer"]], "calc_result() (libics.tools.math.tensor.diagonalizablels method)": [[9, "libics.tools.math.tensor.DiagonalizableLS.calc_result"]], "calc_solution() (libics.tools.math.tensor.diagonalizablels method)": [[9, "libics.tools.math.tensor.DiagonalizableLS.calc_solution"]], "cmin (libics.tools.math.peaked.fitlorentzianeit1dimag property)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.cmin"]], "complex_norm() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.complex_norm"]], "copy() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.copy"]], "correlate_g2() (in module libics.tools.math.signal)": [[9, "libics.tools.math.signal.correlate_g2"]], "cosh() (in module libics.tools.math.intervalfunc)": [[9, "libics.tools.math.intervalfunc.cosh"]], "cosine_1d() (in module libics.tools.math.flat)": [[9, "libics.tools.math.flat.cosine_1d"]], "cosine_2d() (in module libics.tools.math.flat)": [[9, "libics.tools.math.flat.cosine_2d"]], "cwidth (libics.tools.math.peaked.fitlorentzianeit1dimag property)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.cwidth"]], "dc (libics.tools.math.peaked.fitlorentzianeit1dimag property)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.dc"]], "decomp (libics.tools.math.tensor.diagonalizablels property)": [[9, "libics.tools.math.tensor.DiagonalizableLS.decomp"]], "decomp_result() (libics.tools.math.tensor.diagonalizablels method)": [[9, "libics.tools.math.tensor.DiagonalizableLS.decomp_result"]], "decomp_solution() (libics.tools.math.tensor.diagonalizablels method)": [[9, "libics.tools.math.tensor.DiagonalizableLS.decomp_solution"]], "differentiate_array() (in module libics.tools.math.calculus)": [[9, "libics.tools.math.calculus.differentiate_array"]], "distribution (libics.tools.math.signal.peakinfo property)": [[9, "libics.tools.math.signal.PeakInfo.distribution"]], "distribution_amplitude (libics.tools.math.peaked.fitgaussian1d property)": [[9, "libics.tools.math.peaked.FitGaussian1d.distribution_amplitude"]], "distribution_amplitude (libics.tools.math.peaked.fitskewgaussian1d property)": [[9, "libics.tools.math.peaked.FitSkewGaussian1d.distribution_amplitude"]], "distribution_amplitude (libics.tools.math.peaked.fitsymexponential1d property)": [[9, "libics.tools.math.peaked.FitSymExponential1d.distribution_amplitude"]], "distribution_amplitude (libics.tools.math.signal.peakinfo property)": [[9, "libics.tools.math.signal.PeakInfo.distribution_amplitude"]], "dp (libics.tools.math.peaked.fitlorentzianeit1dimag property)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.dp"]], "dsc_ballistic_1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.dsc_ballistic_1d"]], "dsc_bloch_osc_1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.dsc_bloch_osc_1d"]], "dsc_bloch_osc_2d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.dsc_bloch_osc_2d"]], "dsc_bloch_osc_3d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.dsc_bloch_osc_3d"]], "dsc_diffusive_1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.dsc_diffusive_1d"]], "eigvals (libics.tools.math.tensor.diagonalizablels property)": [[9, "libics.tools.math.tensor.DiagonalizableLS.eigvals"]], "eigvecs (libics.tools.math.tensor.diagonalizablels property)": [[9, "libics.tools.math.tensor.DiagonalizableLS.eigvecs"]], "ellipticity (libics.tools.math.peaked.fitgaussian2dtilt property)": [[9, "libics.tools.math.peaked.FitGaussian2dTilt.ellipticity"]], "error_function() (in module libics.tools.math.flat)": [[9, "libics.tools.math.flat.error_function"]], "euclid_norm() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.euclid_norm"]], "eval() (libics.tools.math.tensor.linearsystem method)": [[9, "libics.tools.math.tensor.LinearSystem.eval"]], "exp() (in module libics.tools.math.intervalfunc)": [[9, "libics.tools.math.intervalfunc.exp"]], "exponential_1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.exponential_1d"]], "exponential_decay_1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.exponential_decay_1d"]], "exponential_decay_nd() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.exponential_decay_nd"]], "extract_diag() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.extract_diag"]], "f (libics.tools.math.flat.fitcosine2d property)": [[9, "libics.tools.math.flat.FitCosine2d.f"]], "fc (libics.tools.math.peaked.fitlorentzianeit1dimag property)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.fc"]], "find_chi2() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.find_chi2"]], "find_chi2_red() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.find_chi2_red"]], "find_chi2_significance() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.find_chi2_significance"]], "find_histogram() (in module libics.tools.math.signal)": [[9, "libics.tools.math.signal.find_histogram"]], "find_p0() (libics.tools.math.flat.fitcosine1d method)": [[9, "libics.tools.math.flat.FitCosine1d.find_p0"]], "find_p0() (libics.tools.math.flat.fitcosine2d method)": [[9, "libics.tools.math.flat.FitCosine2d.find_p0"]], "find_p0() (libics.tools.math.flat.fiterrorfunction method)": [[9, "libics.tools.math.flat.FitErrorFunction.find_p0"]], "find_p0() (libics.tools.math.flat.fitlinear1d method)": [[9, "libics.tools.math.flat.FitLinear1d.find_p0"]], "find_p0() (libics.tools.math.flat.fitlinearstepfunction method)": [[9, "libics.tools.math.flat.FitLinearStepFunction.find_p0"]], "find_p0() (libics.tools.math.flat.fitpowerlaw1d method)": [[9, "libics.tools.math.flat.FitPowerLaw1d.find_p0"]], "find_p0() (libics.tools.math.flat.fitpowerlaw1dcenter method)": [[9, "libics.tools.math.flat.FitPowerLaw1dCenter.find_p0"]], "find_p0() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.find_p0"]], "find_p0() (libics.tools.math.models.tensormodelbase method)": [[9, "libics.tools.math.models.TensorModelBase.find_p0"]], "find_p0() (libics.tools.math.peaked.fitairydisk2d method)": [[9, "libics.tools.math.peaked.FitAiryDisk2d.find_p0"]], "find_p0() (libics.tools.math.peaked.fitbmgaussianparabolic1dint2d method)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic1dInt2d.find_p0"]], "find_p0() (libics.tools.math.peaked.fitbmgaussianparabolic2dint1dtilt method)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic2dInt1dTilt.find_p0"]], "find_p0() (libics.tools.math.peaked.fitexponential1d method)": [[9, "libics.tools.math.peaked.FitExponential1d.find_p0"]], "find_p0() (libics.tools.math.peaked.fitgaussian1d method)": [[9, "libics.tools.math.peaked.FitGaussian1d.find_p0"]], "find_p0() (libics.tools.math.peaked.fitgaussian2dtilt method)": [[9, "libics.tools.math.peaked.FitGaussian2dTilt.find_p0"]], "find_p0() (libics.tools.math.peaked.fitlorentzian1dabs method)": [[9, "libics.tools.math.peaked.FitLorentzian1dAbs.find_p0"]], "find_p0() (libics.tools.math.peaked.fitlorentzianeit1dimag method)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.find_p0"]], "find_p0() (libics.tools.math.peaked.fitlorentzianrydeit1dimag method)": [[9, "libics.tools.math.peaked.FitLorentzianRydEit1dImag.find_p0"]], "find_p0() (libics.tools.math.peaked.fitparabolic1d method)": [[9, "libics.tools.math.peaked.FitParabolic1d.find_p0"]], "find_p0() (libics.tools.math.peaked.fitparabolic1dint2d method)": [[9, "libics.tools.math.peaked.FitParabolic1dInt2d.find_p0"]], "find_p0() (libics.tools.math.peaked.fitskewgaussian1d method)": [[9, "libics.tools.math.peaked.FitSkewGaussian1d.find_p0"]], "find_p0() (libics.tools.math.peaked.fitsymexponential1d method)": [[9, "libics.tools.math.peaked.FitSymExponential1d.find_p0"]], "find_peak_1d() (in module libics.tools.math.signal)": [[9, "libics.tools.math.signal.find_peak_1d"]], "find_peaks_1d() (in module libics.tools.math.signal)": [[9, "libics.tools.math.signal.find_peaks_1d"]], "find_peaks_1d_prominence() (in module libics.tools.math.signal)": [[9, "libics.tools.math.signal.find_peaks_1d_prominence"]], "find_popt() (libics.tools.math.flat.fitcosine1d method)": [[9, "libics.tools.math.flat.FitCosine1d.find_popt"]], "find_popt() (libics.tools.math.flat.fitcosine2d method)": [[9, "libics.tools.math.flat.FitCosine2d.find_popt"]], "find_popt() (libics.tools.math.flat.fiterrorfunction method)": [[9, "libics.tools.math.flat.FitErrorFunction.find_popt"]], "find_popt() (libics.tools.math.flat.fitlinear1d method)": [[9, "libics.tools.math.flat.FitLinear1d.find_popt"]], "find_popt() (libics.tools.math.flat.fitlinearstepfunction method)": [[9, "libics.tools.math.flat.FitLinearStepFunction.find_popt"]], "find_popt() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.find_popt"]], "find_popt() (libics.tools.math.models.tensormodelbase method)": [[9, "libics.tools.math.models.TensorModelBase.find_popt"]], "find_popt() (libics.tools.math.peaked.fitbmgaussianparabolic2dint1dtilt method)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic2dInt1dTilt.find_popt"]], "find_popt() (libics.tools.math.peaked.fitgaussian1d method)": [[9, "libics.tools.math.peaked.FitGaussian1d.find_popt"]], "find_popt() (libics.tools.math.peaked.fitgaussian2dtilt method)": [[9, "libics.tools.math.peaked.FitGaussian2dTilt.find_popt"]], "find_popt() (libics.tools.math.peaked.fitlorentzian1dabs method)": [[9, "libics.tools.math.peaked.FitLorentzian1dAbs.find_popt"]], "find_popt() (libics.tools.math.peaked.fitlorentzianeit1dimag method)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.find_popt"]], "find_popt() (libics.tools.math.peaked.fitskewgaussian1d method)": [[9, "libics.tools.math.peaked.FitSkewGaussian1d.find_popt"]], "fit (libics.tools.math.signal.peakinfo property)": [[9, "libics.tools.math.signal.PeakInfo.fit"]], "freeze() (libics.tools.math.models.rvcontinuous method)": [[9, "libics.tools.math.models.RvContinuous.freeze"]], "gamma_distribution_1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.gamma_distribution_1d"]], "gauss() (in module libics.tools.math.intervalfunc)": [[9, "libics.tools.math.intervalfunc.gauss"]], "gaussian_1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.gaussian_1d"]], "gaussian_2d_tilt() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.gaussian_2d_tilt"]], "gaussian_nd() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.gaussian_nd"]], "gaussian_nd_centered() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.gaussian_nd_centered"]], "gaussian_nd_symmetric() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.gaussian_nd_symmetric"]], "ge (libics.tools.math.peaked.fitlorentzianeit1dimag property)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.ge"]], "get_blocks() (libics.tools.math.intervalfunc.intervalseries method)": [[9, "libics.tools.math.intervalfunc.IntervalSeries.get_blocks"]], "get_data() (libics.tools.math.intervalfunc.intervalseries method)": [[9, "libics.tools.math.intervalfunc.IntervalSeries.get_data"]], "get_dirac_delta() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.get_dirac_delta"]], "get_distribution() (libics.tools.math.peaked.fitgaussian1d method)": [[9, "libics.tools.math.peaked.FitGaussian1d.get_distribution"]], "get_distribution() (libics.tools.math.peaked.fitskewgaussian1d method)": [[9, "libics.tools.math.peaked.FitSkewGaussian1d.get_distribution"]], "get_distribution() (libics.tools.math.peaked.fitsymexponential1d method)": [[9, "libics.tools.math.peaked.FitSymExponential1d.get_distribution"]], "get_fit_gaussian_1d() (libics.tools.math.peaked.fitbmgaussianparabolic1dint2d method)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic1dInt2d.get_fit_gaussian_1d"]], "get_fit_gaussian_2d_tilt() (libics.tools.math.peaked.fitbmgaussianparabolic2dint1dtilt method)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic2dInt1dTilt.get_fit_gaussian_2d_tilt"]], "get_fit_parabolic_1d_int2d() (libics.tools.math.peaked.fitbmgaussianparabolic1dint2d method)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic1dInt2d.get_fit_parabolic_1d_int2d"]], "get_fit_parabolic_2d_int1d_tilt() (libics.tools.math.peaked.fitbmgaussianparabolic2dint1dtilt method)": [[9, "libics.tools.math.peaked.FitBmGaussianParabolic2dInt1dTilt.get_fit_parabolic_2d_int1d_tilt"]], "get_model_data() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.get_model_data"]], "get_model_data() (libics.tools.math.signal.peakinfo method)": [[9, "libics.tools.math.signal.PeakInfo.get_model_data"]], "get_nonlinear_support_points() (in module libics.tools.math.sampling)": [[9, "libics.tools.math.sampling.get_nonlinear_support_points"]], "get_p0() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.get_p0"]], "get_phys() (libics.tools.math.peaked.fitlorentzianeit1dimag method)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.get_phys"]], "get_popt() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.get_popt"]], "get_popt() (libics.tools.math.models.tensormodelbase method)": [[9, "libics.tools.math.models.TensorModelBase.get_popt"]], "get_pstd() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.get_pstd"]], "get_times() (libics.tools.math.intervalfunc.intervalseries method)": [[9, "libics.tools.math.intervalfunc.IntervalSeries.get_times"]], "insert_dims() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.insert_dims"]], "integrate_array() (in module libics.tools.math.calculus)": [[9, "libics.tools.math.calculus.integrate_array"]], "interval_func() (in module libics.tools.math.intervalfunc)": [[9, "libics.tools.math.intervalfunc.interval_func"]], "ipdf() (libics.tools.math.models.rvcontinuous method)": [[9, "libics.tools.math.models.RvContinuous.ipdf"]], "is_defective (libics.tools.math.tensor.diagonalizablels property)": [[9, "libics.tools.math.tensor.DiagonalizableLS.is_defective"]], "is_diagonalizable (libics.tools.math.tensor.diagonalizablels property)": [[9, "libics.tools.math.tensor.DiagonalizableLS.is_diagonalizable"]], "is_invertible (libics.tools.math.tensor.diagonalizablels property)": [[9, "libics.tools.math.tensor.DiagonalizableLS.is_invertible"]], "is_singular (libics.tools.math.tensor.diagonalizablels property)": [[9, "libics.tools.math.tensor.DiagonalizableLS.is_singular"]], "iter_peaks() (libics.tools.math.signal.peakinfo method)": [[9, "libics.tools.math.signal.PeakInfo.iter_peaks"]], "iter_subpeaks() (libics.tools.math.signal.peakinfo method)": [[9, "libics.tools.math.signal.PeakInfo.iter_subpeaks"]], "kurtosis() (libics.tools.math.models.rvcontinuous method)": [[9, "libics.tools.math.models.RvContinuous.kurtosis"]], "leigvecs (libics.tools.math.tensor.diagonalizablels property)": [[9, "libics.tools.math.tensor.DiagonalizableLS.leigvecs"]], "libics.tools.math": [[9, "module-libics.tools.math"]], "libics.tools.math.calculus": [[9, "module-libics.tools.math.calculus"]], "libics.tools.math.flat": [[9, "module-libics.tools.math.flat"]], "libics.tools.math.intervalfunc": [[9, "module-libics.tools.math.intervalfunc"]], "libics.tools.math.models": [[9, "module-libics.tools.math.models"]], "libics.tools.math.optimize": [[9, "module-libics.tools.math.optimize"]], "libics.tools.math.peaked": [[9, "module-libics.tools.math.peaked"]], "libics.tools.math.sampling": [[9, "module-libics.tools.math.sampling"]], "libics.tools.math.signal": [[9, "module-libics.tools.math.signal"]], "libics.tools.math.tensor": [[9, "module-libics.tools.math.tensor"]], "lin() (in module libics.tools.math.intervalfunc)": [[9, "libics.tools.math.intervalfunc.lin"]], "linear_1d() (in module libics.tools.math.flat)": [[9, "libics.tools.math.flat.linear_1d"]], "linear_step_function() (in module libics.tools.math.flat)": [[9, "libics.tools.math.flat.linear_step_function"]], "lmax (libics.tools.math.peaked.fitlorentzianeit1dimag property)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.lmax"]], "lorentzian_1d_abs() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.lorentzian_1d_abs"]], "lorentzian_1d_complex() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.lorentzian_1d_complex"]], "lorentzian_eit_1d_imag() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.lorentzian_eit_1d_imag"]], "lorentzian_ryd_eit_1d_imag() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.lorentzian_ryd_eit_1d_imag"]], "lwidth (libics.tools.math.peaked.fitlorentzianeit1dimag property)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.lwidth"]], "make_diag() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.make_diag"]], "mata_axes (libics.tools.math.tensor.linearsystem property)": [[9, "libics.tools.math.tensor.LinearSystem.mata_axes"]], "matb_axes (libics.tools.math.tensor.linearsystem property)": [[9, "libics.tools.math.tensor.LinearSystem.matb_axes"]], "matrix (libics.tools.math.tensor.diagonalizablels property)": [[9, "libics.tools.math.tensor.DiagonalizableLS.matrix"]], "matrix (libics.tools.math.tensor.linearsystem property)": [[9, "libics.tools.math.tensor.LinearSystem.matrix"]], "maximize_discrete_stepwise() (in module libics.tools.math.optimize)": [[9, "libics.tools.math.optimize.maximize_discrete_stepwise"]], "minimize_discrete_stepwise() (in module libics.tools.math.optimize)": [[9, "libics.tools.math.optimize.minimize_discrete_stepwise"]], "mode() (libics.tools.math.models.rvcontinuous method)": [[9, "libics.tools.math.models.RvContinuous.mode"]], "nsubpeaks (libics.tools.math.signal.peakinfo property)": [[9, "libics.tools.math.signal.PeakInfo.nsubpeaks"]], "ortho_eigensystem() (libics.tools.math.tensor.diagonalizablels method)": [[9, "libics.tools.math.tensor.DiagonalizableLS.ortho_eigensystem"]], "ortho_gram_schmidt() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.ortho_gram_schmidt"]], "p0 (libics.tools.math.models.modelbase property)": [[9, "libics.tools.math.models.ModelBase.p0"]], "p0 (libics.tools.math.models.tensormodelbase property)": [[9, "libics.tools.math.models.TensorModelBase.p0"]], "p0_for_fit (libics.tools.math.models.modelbase property)": [[9, "libics.tools.math.models.ModelBase.p0_for_fit"]], "p0_is_set() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.p0_is_set"]], "p0_is_set() (libics.tools.math.models.tensormodelbase method)": [[9, "libics.tools.math.models.TensorModelBase.p0_is_set"]], "pall (libics.tools.math.models.modelbase property)": [[9, "libics.tools.math.models.ModelBase.pall"]], "pall_scal (libics.tools.math.models.tensormodelbase property)": [[9, "libics.tools.math.models.TensorModelBase.pall_scal"]], "pall_vect (libics.tools.math.models.tensormodelbase property)": [[9, "libics.tools.math.models.TensorModelBase.pall_vect"]], "parabolic_1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.parabolic_1d"]], "parabolic_1d_finsup() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.parabolic_1d_finsup"]], "parabolic_1d_int2d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.parabolic_1d_int2d"]], "parabolic_2d_int1d_tilt() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.parabolic_2d_int1d_tilt"]], "pcov (libics.tools.math.models.modelbase property)": [[9, "libics.tools.math.models.ModelBase.pcov"]], "pcov (libics.tools.math.models.tensormodelbase property)": [[9, "libics.tools.math.models.TensorModelBase.pcov"]], "pcov_for_fit (libics.tools.math.models.modelbase property)": [[9, "libics.tools.math.models.ModelBase.pcov_for_fit"]], "pfit (libics.tools.math.models.modelbase property)": [[9, "libics.tools.math.models.ModelBase.pfit"]], "popt (libics.tools.math.models.modelbase property)": [[9, "libics.tools.math.models.ModelBase.popt"]], "popt (libics.tools.math.models.tensormodelbase property)": [[9, "libics.tools.math.models.TensorModelBase.popt"]], "popt_for_fit (libics.tools.math.models.modelbase property)": [[9, "libics.tools.math.models.ModelBase.popt_for_fit"]], "popt_is_set() (libics.tools.math.models.tensormodelbase method)": [[9, "libics.tools.math.models.TensorModelBase.popt_is_set"]], "power_law_1d() (in module libics.tools.math.flat)": [[9, "libics.tools.math.flat.power_law_1d"]], "pstd (libics.tools.math.models.modelbase property)": [[9, "libics.tools.math.models.ModelBase.pstd"]], "pstd (libics.tools.math.models.tensormodelbase property)": [[9, "libics.tools.math.models.TensorModelBase.pstd"]], "pstd_for_fit (libics.tools.math.models.modelbase property)": [[9, "libics.tools.math.models.ModelBase.pstd_for_fit"]], "reigvecs (libics.tools.math.tensor.diagonalizablels property)": [[9, "libics.tools.math.tensor.DiagonalizableLS.reigvecs"]], "result (libics.tools.math.tensor.linearsystem property)": [[9, "libics.tools.math.tensor.LinearSystem.result"]], "rmax (libics.tools.math.peaked.fitlorentzianeit1dimag property)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.rmax"]], "rwidth (libics.tools.math.peaked.fitlorentzianeit1dimag property)": [[9, "libics.tools.math.peaked.FitLorentzianEit1dImag.rwidth"]], "separation_loc() (libics.tools.math.models.rvcontinuous method)": [[9, "libics.tools.math.models.RvContinuous.separation_loc"]], "separation_loc() (libics.tools.math.signal.peakinfo class method)": [[9, "libics.tools.math.signal.PeakInfo.separation_loc"]], "separation_loc_multi() (libics.tools.math.models.rvcontinuous static method)": [[9, "libics.tools.math.models.RvContinuous.separation_loc_multi"]], "set_p0() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.set_p0"]], "set_pfit() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.set_pfit"]], "size (libics.tools.math.intervalfunc.intervalseries property)": [[9, "libics.tools.math.intervalfunc.IntervalSeries.size"]], "skew_gaussian_1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.skew_gaussian_1d"]], "skewness() (libics.tools.math.models.rvcontinuous method)": [[9, "libics.tools.math.models.RvContinuous.skewness"]], "solution (libics.tools.math.tensor.linearsystem property)": [[9, "libics.tools.math.tensor.LinearSystem.solution"]], "solve() (libics.tools.math.tensor.linearsystem method)": [[9, "libics.tools.math.tensor.LinearSystem.solve"]], "sort_eigensystem() (libics.tools.math.tensor.diagonalizablels method)": [[9, "libics.tools.math.tensor.DiagonalizableLS.sort_eigensystem"]], "split_fit_data() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.split_fit_data"]], "step() (in module libics.tools.math.intervalfunc)": [[9, "libics.tools.math.intervalfunc.step"]], "sym_exponential_1d() (in module libics.tools.math.peaked)": [[9, "libics.tools.math.peaked.sym_exponential_1d"]], "tanh() (in module libics.tools.math.intervalfunc)": [[9, "libics.tools.math.intervalfunc.tanh"]], "tensorinv_numpy_array() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.tensorinv_numpy_array"]], "tensorize_numpy_array() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.tensorize_numpy_array"]], "tensormul_numpy_array() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.tensormul_numpy_array"]], "tensorsolve_numpy_array() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.tensorsolve_numpy_array"]], "tensortranspose_numpy_array() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.tensortranspose_numpy_array"]], "test_hypothesis_chi2() (libics.tools.math.models.modelbase method)": [[9, "libics.tools.math.models.ModelBase.test_hypothesis_chi2"]], "trapez() (in module libics.tools.math.intervalfunc)": [[9, "libics.tools.math.intervalfunc.trapez"]], "variance() (libics.tools.math.models.rvcontinuous method)": [[9, "libics.tools.math.models.RvContinuous.variance"]], "vec_axes (libics.tools.math.tensor.linearsystem property)": [[9, "libics.tools.math.tensor.LinearSystem.vec_axes"]], "veca_axes (libics.tools.math.tensor.linearsystem property)": [[9, "libics.tools.math.tensor.LinearSystem.veca_axes"]], "vecb_axes (libics.tools.math.tensor.linearsystem property)": [[9, "libics.tools.math.tensor.LinearSystem.vecb_axes"]], "vectorize_numpy_array() (in module libics.tools.math.tensor)": [[9, "libics.tools.math.tensor.vectorize_numpy_array"]], "x0 (libics.tools.math.peaked.fitexponential1d property)": [[9, "libics.tools.math.peaked.FitExponential1d.x0"]], "xi (libics.tools.math.peaked.fitexponential1d property)": [[9, "libics.tools.math.peaked.FitExponential1d.xi"]], "logger (libics.tools.plot.layout.subfiglayout attribute)": [[10, "libics.tools.plot.layout.SubfigLayout.LOGGER"]], "subfiglayout (class in libics.tools.plot.layout)": [[10, "libics.tools.plot.layout.SubfigLayout"]], "subfigmargins (class in libics.tools.plot.layout)": [[10, "libics.tools.plot.layout.SubfigMargins"]], "subfigsize (class in libics.tools.plot.layout)": [[10, "libics.tools.plot.layout.SubfigSize"]], "add_named_cmap() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.add_named_cmap"]], "add_named_color() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.add_named_color"]], "center (libics.tools.plot.layout.subfigmargins property)": [[10, "libics.tools.plot.layout.SubfigMargins.center"]], "change_brightness_rgb() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.change_brightness_rgb"]], "contourf() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.contourf"]], "cv_center_to_rect() (libics.tools.plot.layout.subfiglayout static method)": [[10, "libics.tools.plot.layout.SubfigLayout.cv_center_to_rect"]], "cv_rect_to_center() (libics.tools.plot.layout.subfiglayout static method)": [[10, "libics.tools.plot.layout.SubfigLayout.cv_rect_to_center"]], "darken_rgb() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.darken_rgb"]], "figsize (libics.tools.plot.layout.subfiglayout property)": [[10, "libics.tools.plot.layout.SubfigLayout.figsize"]], "get_color_from_cmap() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.get_color_from_cmap"]], "get_colors_from_cmap() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.get_colors_from_cmap"]], "get_outer_margin_size() (libics.tools.plot.layout.subfigmargins method)": [[10, "libics.tools.plot.layout.SubfigMargins.get_outer_margin_size"]], "get_srgb_black_tinted() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.get_srgb_black_tinted"]], "get_srgb_gray_tinted() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.get_srgb_gray_tinted"]], "get_srgb_grey_tinted() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.get_srgb_grey_tinted"]], "get_srgb_linspace() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.get_srgb_linspace"]], "get_srgb_range() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.get_srgb_range"]], "get_srgb_white_tinted() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.get_srgb_white_tinted"]], "get_sublayout_rect() (libics.tools.plot.layout.subfiglayout method)": [[10, "libics.tools.plot.layout.SubfigLayout.get_sublayout_rect"]], "get_sublayout_size() (libics.tools.plot.layout.subfiglayout method)": [[10, "libics.tools.plot.layout.SubfigLayout.get_sublayout_size"]], "get_total_margin_size() (libics.tools.plot.layout.subfigmargins method)": [[10, "libics.tools.plot.layout.SubfigMargins.get_total_margin_size"]], "hex_to_rgb() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.hex_to_rgb"]], "hls_to_rgb() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.hls_to_rgb"]], "hsv_to_rgb() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.hsv_to_rgb"]], "interpolate_rgb() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.interpolate_rgb"]], "is_fixed() (libics.tools.plot.layout.subfigsize method)": [[10, "libics.tools.plot.layout.SubfigSize.is_fixed"]], "is_relative() (libics.tools.plot.layout.subfigsize method)": [[10, "libics.tools.plot.layout.SubfigSize.is_relative"]], "iter_axs() (libics.tools.plot.layout.subfiglayout method)": [[10, "libics.tools.plot.layout.SubfigLayout.iter_axs"]], "jch_to_rgb() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.jch_to_rgb"]], "libics.tools.plot": [[10, "module-libics.tools.plot"]], "libics.tools.plot.base": [[10, "module-libics.tools.plot.base"]], "libics.tools.plot.colors": [[10, "module-libics.tools.plot.colors"]], "libics.tools.plot.layout": [[10, "module-libics.tools.plot.layout"]], "libics.tools.plot.multi": [[10, "module-libics.tools.plot.multi"]], "lighten_rgb() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.lighten_rgb"]], "make_ax() (libics.tools.plot.layout.subfiglayout method)": [[10, "libics.tools.plot.layout.SubfigLayout.make_ax"]], "make_cmap() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.make_cmap"]], "make_fixed_axes() (in module libics.tools.plot.layout)": [[10, "libics.tools.plot.layout.make_fixed_axes"]], "ncols (libics.tools.plot.layout.subfiglayout property)": [[10, "libics.tools.plot.layout.SubfigLayout.ncols"]], "normalize() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.normalize"]], "normalize_rect() (libics.tools.plot.layout.subfiglayout method)": [[10, "libics.tools.plot.layout.SubfigLayout.normalize_rect"]], "nrows (libics.tools.plot.layout.subfiglayout property)": [[10, "libics.tools.plot.layout.SubfigLayout.nrows"]], "parse_color() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.parse_color"]], "pcolorim() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.pcolorim"]], "pcolormesh() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.pcolormesh"]], "plot() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.plot"]], "plot_ax_array() (in module libics.tools.plot.multi)": [[10, "libics.tools.plot.multi.plot_ax_array"]], "plot_ellipse() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.plot_ellipse"]], "plot_polygon() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.plot_polygon"]], "plot_rectangle() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.plot_rectangle"]], "remove_axes() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.remove_axes"]], "rgb_blacken() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_blacken"]], "rgb_change_brightness() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_change_brightness"]], "rgb_change_chroma() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_change_chroma"]], "rgb_change_lightness() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_change_lightness"]], "rgb_change_saturation() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_change_saturation"]], "rgb_equalize_lightness() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_equalize_lightness"]], "rgb_to_hex() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_to_hex"]], "rgb_to_hls() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_to_hls"]], "rgb_to_hsv() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_to_hsv"]], "rgb_to_jch() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_to_jch"]], "rgb_whiten() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.rgb_whiten"]], "savefig() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.savefig"]], "scatter() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.scatter"]], "set_color_cycle() (in module libics.tools.plot.colors)": [[10, "libics.tools.plot.colors.set_color_cycle"]], "shape (libics.tools.plot.layout.subfiglayout property)": [[10, "libics.tools.plot.layout.SubfigLayout.shape"]], "style_axes() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.style_axes"]], "style_figure() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.style_figure"]], "subfig_rect (libics.tools.plot.layout.subfiglayout property)": [[10, "libics.tools.plot.layout.SubfigLayout.subfig_rect"]], "sublayout_heights (libics.tools.plot.layout.subfiglayout property)": [[10, "libics.tools.plot.layout.SubfigLayout.sublayout_heights"]], "sublayout_widths (libics.tools.plot.layout.subfiglayout property)": [[10, "libics.tools.plot.layout.SubfigLayout.sublayout_widths"]], "sublayouts (libics.tools.plot.layout.subfiglayout property)": [[10, "libics.tools.plot.layout.SubfigLayout.sublayouts"]], "subplots() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.subplots"]], "tick_params() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.tick_params"]], "unsqueeze_axes() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.unsqueeze_axes"]], "use_style() (in module libics.tools.plot.base)": [[10, "libics.tools.plot.base.use_style"]], "affinetrafo (class in libics.tools.trafo.linear)": [[11, "libics.tools.trafo.linear.AffineTrafo"]], "affinetrafo2d (class in libics.tools.trafo.linear)": [[11, "libics.tools.trafo.linear.AffineTrafo2d"]], "hash_keys (libics.tools.trafo.linear.affinetrafo attribute)": [[11, "libics.tools.trafo.linear.AffineTrafo.HASH_KEYS"]], "logger (libics.tools.trafo.linear.affinetrafo attribute)": [[11, "libics.tools.trafo.linear.AffineTrafo.LOGGER"]], "logger (libics.tools.trafo.linear.affinetrafo2d attribute)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.LOGGER"]], "ser_keys (libics.tools.trafo.linear.affinetrafo attribute)": [[11, "libics.tools.trafo.linear.AffineTrafo.SER_KEYS"]], "calc_trafo() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.calc_trafo"]], "center_crop() (in module libics.tools.trafo.resize)": [[11, "libics.tools.trafo.resize.center_crop"]], "concatenate() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.concatenate"]], "coord_to_origin() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.coord_to_origin"]], "coord_to_target() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.coord_to_target"]], "copy() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.copy"]], "crop_image() (in module libics.tools.trafo.resize)": [[11, "libics.tools.trafo.resize.crop_image"]], "cv_offset_shift_to_origin() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.cv_offset_shift_to_origin"]], "cv_offset_shift_to_target() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.cv_offset_shift_to_target"]], "cv_to_origin() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.cv_to_origin"]], "cv_to_target() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.cv_to_target"]], "fft() (in module libics.tools.trafo.fourier)": [[11, "libics.tools.trafo.fourier.fft"]], "find_centroid() (in module libics.tools.trafo.resize)": [[11, "libics.tools.trafo.resize.find_centroid"]], "find_peak_coordinates() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.find_peak_coordinates"]], "fit_affine_transform() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.fit_affine_transform"]], "fit_peak_coordinates() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.fit_peak_coordinates"]], "fit_to_aspect() (in module libics.tools.trafo.resize)": [[11, "libics.tools.trafo.resize.fit_to_aspect"]], "fixed_point (libics.tools.trafo.linear.affinetrafo property)": [[11, "libics.tools.trafo.linear.AffineTrafo.fixed_point"]], "get_mask_origin_coords_within_target_rect() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.get_mask_origin_coords_within_target_rect"]], "get_mask_target_coords_within_origin_rect() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.get_mask_target_coords_within_origin_rect"]], "get_origin_axes() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.get_origin_axes"]], "get_origin_unit_vectors() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.get_origin_unit_vectors"]], "get_target_axes() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.get_target_axes"]], "get_target_unit_vectors() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.get_target_unit_vectors"]], "ifft() (in module libics.tools.trafo.fourier)": [[11, "libics.tools.trafo.fourier.ifft"]], "invert() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.invert"]], "libics.tools.trafo": [[11, "module-libics.tools.trafo"]], "libics.tools.trafo.fourier": [[11, "module-libics.tools.trafo.fourier"]], "libics.tools.trafo.linear": [[11, "module-libics.tools.trafo.linear"]], "libics.tools.trafo.resize": [[11, "module-libics.tools.trafo.resize"]], "magnify() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.magnify"]], "matrix_to_origin (libics.tools.trafo.linear.affinetrafo property)": [[11, "libics.tools.trafo.linear.AffineTrafo.matrix_to_origin"]], "matrix_to_target (libics.tools.trafo.linear.affinetrafo property)": [[11, "libics.tools.trafo.linear.AffineTrafo.matrix_to_target"]], "ndim (libics.tools.trafo.linear.affinetrafo property)": [[11, "libics.tools.trafo.linear.AffineTrafo.ndim"]], "offset_to_origin (libics.tools.trafo.linear.affinetrafo property)": [[11, "libics.tools.trafo.linear.AffineTrafo.offset_to_origin"]], "offset_to_target (libics.tools.trafo.linear.affinetrafo property)": [[11, "libics.tools.trafo.linear.AffineTrafo.offset_to_target"]], "resize_on_condition() (in module libics.tools.trafo.resize)": [[11, "libics.tools.trafo.resize.resize_on_condition"]], "resize_on_filter_maximum() (in module libics.tools.trafo.resize)": [[11, "libics.tools.trafo.resize.resize_on_filter_maximum"]], "resize_on_mass() (in module libics.tools.trafo.resize)": [[11, "libics.tools.trafo.resize.resize_on_mass"]], "rotate() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.rotate"]], "set_offset_by_fixed_point() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.set_offset_by_fixed_point"]], "set_offset_by_point_pair() (libics.tools.trafo.linear.affinetrafo method)": [[11, "libics.tools.trafo.linear.AffineTrafo.set_offset_by_point_pair"]], "set_origin_axes() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.set_origin_axes"]], "set_target_axes() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.set_target_axes"]], "shift() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.shift"]], "shift_origin_axes() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.shift_origin_axes"]], "shift_target_axes() (libics.tools.trafo.linear.affinetrafo2d method)": [[11, "libics.tools.trafo.linear.AffineTrafo2d.shift_target_axes"]], "libics": [[12, "module-libics"]]}})